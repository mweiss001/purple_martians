First lets get Allegro from sources and compile it..

------------------------------------------------------------
STEP 1 Install MinGW-w64
------------------------------------------------------------
Install MinGW-w64 from mingw-w64-install.exe
Choose:
Version:7.2.0
Architecture:i686
Threads:posix
Exception:dwarf
Build revison:1

Install to C:\mingw32
This gave me: C:\mingw32\mingw32\bin
So I removed the parent dir to get: c:\mingw32\bin

Set path manually:
open cmd prompt window as admin:
PATH (to see what we have before we start)
setx /M PATH "%PATH%;C:\mingw32\bin;"
then you have you exit the command prompt and restart as admin again
type PATH again and make sure it worked
then type gcc -v and see if that works

------------------------------------------------------------
STEP 2 Install CMake
------------------------------------------------------------
Install CMake from cmake-3.11.0-win64-x64.msi
check: Add CMake to system PATH for all users
installed to C:\cmake
this gave me: C:\cmake\bin

---------------------------------------------------------
STEP 3 Install Git
---------------------------------------------------------
Install git from Git-2.16.2-64-bit.exe
installed to C:\git
this gave me: c:\git\bin
nano as text editor
"Use Git from the Windows Command Prompt"
"Use the OpenSSL library"
"Check out as-is commit as-is
"Use MinTTY"
check "Enable file system caching"
uncheck "Enable Git Credential Manager"
click finish...

this gave me: c:\git\bin
and added to path c:\git\cmd

Getting Allegro sources from github

mkdir C:\devel
cd C:\devel
git clone https://github.com/liballeg/allegro5.git Allegro5

cd Allegro5
git pull

that gave me allegro 5.2.5

I did this to get 5.2.4:
git checkout 5.2.4
git pull --rebase origin 5.2.4

---------------------------------------------------------
STEP 4 install DX SDK
---------------------------------------------------------

https://www.microsoft.com/en-us/download/confirmation.aspx?id=6812

got DXSDK_Jun10.exe (572M)

installed to C:\devel\DXSDK

agree to license
opt out of Customer Experience Improvement Program
install to C:\devel\DXSDK

unselect Documentation
unselect Samples and Source Code

---------------------------------------------------------
STEP 5 other dependencies
---------------------------------------------------------

got dependency package:
extracted allegro_deps-i686-w64-mingw32-gcc-7.2.0-posix-dwarf-1.7.0.zip

renamed allegro_deps to deps and put in Allegro dir like this:

C:\devel\Allegro5\deps\include
C:\devel\Allegro5\deps\lib


---------------------------------------------------------
STEP 6 Building Allegro
---------------------------------------------------------

Now we are ready to build Allegro.

First, issue these commands:
cd C:\devel\Allegro5
mkdir build
cd build

then run CMake-gui from the the start menu shortcut

src:   C:\devel\Allegro5
build: C:\devel\Allegro5\build

click configure
choose MinGW Makefiles as the generator

set the following:

CMAKE_BUILD_TYPE: Release
CMAKE_INSTALL_PREFIX C:/mingw32
SHARED unchecked
WANT_MONOLITH checked
FREETYPE_PNG checked
FREETYPE_ZLIB checked

uncheck all of these:
WANT_ALSA
WANT_AQUEUE
WANT_COLOR
WANT_DEMO
WANT_DOCS (all off)
WANT_EMBED
WANT_EXAMPLES
WANT_FLAC
WANT_IMAGE_JPG
WANT_IMAGE_PNG
WANT_IMAGE_WEBP
WANT_OGG_VIDEO
WANT_OPENAL
WANT_OPENSL
WANT_OPUS
WANT_PHYSFS
WANT_RELEASE LOGGING
WANT_TESTS
WANT_VIDEO
WANT_VORBIS
WANT_X11 (all 4 off)

click Configure again

click Generate

from the command prompt in the build directory you created, type:

mingw32-make

mingw32-make install

---------------------------------------------------------
STEP 7 Set up libraries
---------------------------------------------------------
manually copy these files from C:\devel\Allegro5\deps\lib to C:\ming32\lib
- libzlib.a
- libdumb.a
- libfreetype.a
- libpng16.a

Get latest version of Purple Martians sources. 
from the directory 'libnet_win'
copy libnet.a to C:\mingw32\lib
copy libnet.h to C:\mingw32\include

---------------------------------------------------------
STEP 8 Set up Code::Blocks
---------------------------------------------------------
install code::blocks 17.12 to C:\codeblocks
run codeblocks
default compiler: gcc
set all associations

in settings->complier->toolchain executables:
- change complier's installation directory from C:\MingW to C:\mingw32
- remove 'mingw32-' from the start of gcc.exe and g++.exe


---------------------------------------------------------
STEP 9 Compile the game
---------------------------------------------------------

Open the project file: 'pm.cbp' in code::blocks

select target 'win_static_release'

These are the settings for the target: 'win_static_release'

compiler flags:
-static-libgcc
-static-libstdc++
-static
-Wall

compiler #defines:
ALLEGRO_STATICLINK


linker:
-lallegro_monolith-static
-ldumb
-lfreetype
-lpng16
-lzlib
-ldsound
-lgdiplus
-luuid
-lkernel32
-lwinmm
-lpsapi
-lopengl32
-lglu32
-luser32
-lcomdlg32
-lgdi32
-lshell32
-lole32
-ladvapi32
-lws2_32
-lshlwapi
-lnet
-lwsock32


Compile all.

Enjoy!

