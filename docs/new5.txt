

------------------------------------------------
20180314 pi day

OK here I am converting to Allegro 5

imported the project from .dev into code::blocks

removed all e_ files and n_ files

in pm.h undefined sound DUMB netplay

now lets see if I can get it to compile...

first thing in that the new allegro headers cant be found:
fixed that..

fixed has been replaced with al_fixed???

when I'm doing things like this should I not do it for my entire project?

yes...

fixed -> al_fixed
BITMAP -> ALLEGRO_BITMAP
destroy_bitmap -> al_destroy_bitmap

DIALOG gone from 5
disable for now, maybe get EGG_DIALOG later

PALLETE ????? ditch it

END_OF_FUNCTION(inc_timer_passcount);

void inc_timer_passcount()
{
   timer_passcount++;
}
END_OF_FUNCTION(inc_timer_passcount);

void second_timer()
{
   fps = passcount - last_fps_passcount;
   last_fps_passcount = passcount;

   frames_skipped_last_second = (players1[active_local_player].frames_skipped - last_frames_skipped);
   last_frames_skipped = players1[active_local_player].frames_skipped;
}
END_OF_FUNCTION(second_timer);


   LOCK_VARIABLE(timer_passcount);
   LOCK_FUNCTION(inc_timer_passcount);

   LOCK_VARIABLE(fps);
   LOCK_VARIABLE(last_fps_passcount);

   // this is for the fps
   LOCK_FUNCTION(second_timer);
   install_int_ex(second_timer, BPS_TO_TIMER(1));



it looks like the old timers, called a function...
where the new ones generate an event


I only have 2 timers:
1 to count actual frames per second
1 to control the frame rate
both are only used in the game loop
I'm having trouble thinking why I want to do this with events...

one solution is to spawn another thread that does nothing but update passcount

or in my loop, at the frame delay I can wait until i get an event...

al_create_timer
ALLEGRO_TIMER *al_create_timer(double speed_secs)

Allocates and initializes a timer.
If successful, a pointer to a new timer object is returned, otherwise NULL is returned.
speed_secs is in seconds per "tick", and must be positive. The new timer is initially stopped.
Usage note: typical granularity is on the order of microseconds, but with some drivers might only be milliseconds.

See also: al_start_timer, al_destroy_timer

al_start_timer


al_get_timer_count
int64_t al_get_timer_count(const ALLEGRO_TIMER *timer)
Source Code

Return the timer's counter value. The timer can be started or stopped.

See also: al_set_timer_count

I think with this i don't need events at all



'fps_timer' will be the name of my new timer

ALLEGRO_TIMER * fps_timer = al_create_timer(0.025);


"timer_passcount" used to be the variable that got incremented in the
old timer loop.

now it will be al_get_timer_count(fps_timer);


void al_set_timer_speed(ALLEGRO_TIMER *timer, double new_speed_secs)
Set the timer's speed, i.e. the rate at which its counter will be incremented when it is started.
This can be done when the timer is started or stopped.
If the timer is currently running, it is made to look as though the speed change occurred precisely at the last tick.

void al_set_timer_count(ALLEGRO_TIMER *timer, int64_t new_count)
Set the timer's counter value. The timer can be started or stopped.
The count value may be positive or negative, but will always be incremented by +1 at each tick.


disable the fps per second one for now...
commented out in main



change the timer:

add global and extern in pm.h
ALLEGRO_TIMER * fps_timer ;

create timer in initial setup:
fps_timer = al_create_timer(1/fps_passcount_timer);


look for all mentions of timer_passcount and replace with al_get_timer_count(fps_timer);
or set...  done




sprintf() needed <stdio.h>?? why didn't it need it before??'


config is all fucked.. more more int float string, now its all string
will need to make convertors...atoi and itoa...etc


also I need to load the config file first...

where do I do these things in my program?

right after allegro_init

set_config_file("pm.cfg");


why don't I load it in initial setup
and destroy right after.

whenever I want to save a change i will need to load the file
make the change and save it.


i should have one function that saves everything to config
and also one that loads everything

what do i do about defaults??

make my own load data from config fucntion




----------
fixtoi --done
fixtof -- done
itofix - done
ftofix - done

rest all chnged to al_rest

al_create_bitmap done all



scrn.cpp
killed most of screen setup

just make a 800x600 window

global and externed
ALLEGRO_DISPLAY *display = NULL;


   display = al_create_display(640, 640);
   if(!display) {
      fprintf(stderr, "failed to create display!\n");
      return -1;
   }


blit( src, dst, 0, 0, dx, dy, src->w, src->h)	al_draw_bitmap( src, dx, dy, 0)
blit( src, dst, sx, sy, dx, dy, sw, sh)	al_draw_bitmap_region( src, sx, sy, sw, sh, dx, dy, 0)
blit


first set al_set_target_bitmap

screen_buffer will need to be replaced with the back buffer

what do i do with SCREEN_H and W??
global and extern SCREEN_H



al_get_display_width
int al_get_display_width(ALLEGRO_DISPLAY *display)
Source Code

Gets the width of the display. This is like SCREEN_W in Allegro 4.x.

See also: al_get_display_height

al_get_display_height
int al_get_display_height(ALLEGRO_DISPLAY *display)


made scrn.cpp compile by gutting it...


sound compiles...

player compiles


now i'm in menu how am i going to do key input??

void al_get_keyboard_state(ALLEGRO_KEYBOARD_STATE *ret_state)


// Returns whether or not a specified key is being pressed
bool key_pressed(int key)
{
   ALLEGRO_KEYBOARD_STATE s;
   al_get_keyboard_state(&s);
   return al_key_down(&s, key);
}
This was a function I wrote for Deluxe Pacman 2 to wait for a keypress or xxxx amount of milliseconds before continuing (this is the trimmed down version)...

#SelectExpand
  1// Waits a specified time (in ms, 1000=1s) for a key to be pressed.
  2// Will also respond if a mouse or joystick button is clicked.
  3// If the time passes before a key/mouse/joystick is pressed, the function returns
  4// If the time specified is zero, the function will wait indefinitely.
  5bool wait_for_keypress(double wait_time)
  6{
  7   double ts = al_get_time(); // time stamp
  8   double elapsed_time;
  9
 10   al_flush_event_queue(event_queue);
 11
 12   bool done = false;
 13
 14   // Wait until the specified time passes or a key is pressed.
 15   do {
 16      al_wait_for_event(event_queue, &event);
 17
 18      if(event.type == ALLEGRO_EVENT_DISPLAY_CLOSE) {
 19         shut_down(); // free resources
 20         exit(0);
 21      }
 22
 23      else if(wait_time && event.type == ALLEGRO_EVENT_TIMER) {
 24         elapsed_time = al_get_time() - ts;
 25         if(elapsed_time >= wait_time) return false;
 26      }
 27
 28      // Wait for key to be pressed and released to continue
 29      else if(event.type == ALLEGRO_EVENT_KEY_UP) {
 30         if(event.keyboard.keycode == ALLEGRO_KEY_ESCAPE) return true;
 31         else done = true;
 32      }
 33
 34      // And if a key wasn't pressed, maybe a mouse button was...
 35      else if(event.type == ALLEGRO_EVENT_MOUSE_BUTTON_UP) {
 36         done = true;
 37      }
 38   }
 39   while(!done);
 40
 41   return false;
 42}
---


maybe I can register an event loop once in my program and then use it for menus
and whatever as well as the main game loop...


where am i??

either in menu or in loop


i got menu to compile

loop compiles..


now in lifts...
what am i going to do about color?

I'll make my own palette, with hookers and blackjack...

I can even still call it palette color...

all I need is the seed for each color...

make an array of colors:

ALLEGRO_COLOR palette_color[256];
palette_color[0]  = al_map_rgb(  0,   0,    0); // black
palette_color[1]  = al_map_rgb(191, 108,  232); // alt purple 1
palette_color[2]  = al_map_rgb(136,  32,  172); // alt purple 2
palette_color[3]  = al_map_rgb(60,  127,  255); // alt blue
palette_color[4]  = al_map_rgb(224,  28,   72); // alt red
palette_color[5]  = al_map_rgb(255,   0,  232); // pink
palette_color[6]  = al_map_rgb(255,  191, 127); // taan
palette_color[7]  = al_map_rgb(255,  127,   0); // orange
palette_color[8]  = al_map_rgb(127,    0, 255); // original purple
palette_color[9]  = al_map_rgb(  0,  255, 127); // alt green
palette_color[10] = al_map_rgb(255,    0,   0); // red
palette_color[11] = al_map_rgb(  0,  255,   0); // green
palette_color[12] = al_map_rgb(  0,    0, 255); // blue
palette_color[13] = al_map_rgb(  0,  255, 255); // lt blue
palette_color[14] = al_map_rgb(255,  255,   0); // yellow
palette_color[15] = al_map_rgb(255,  255, 255); // white

for (int x=1; x<16; x++)
{
   int c = (x+1)*16 - 1;
   palette_color[x*16]  = al_map_rgb(c, c, c);
}

this is my old fade proc

         int x;
         int cn = b1_color;
         float ns = 15;
         for (x=0; x<ns; x++)
         {
            pallete[cn+(x*16)].r = (unsigned char) ( pallete[cn].r * (1 - (x/ns)) );
            pallete[cn+(x*16)].g = (unsigned char) ( pallete[cn].g * (1 - (x/ns)) );
            pallete[cn+(x*16)].b = (unsigned char) ( pallete[cn].b * (1 - (x/ns)) );
         }



it seems to work good..

i just had a thought...
all this stuff I have always been doing with the way i set up my palette...
its just basically an alpha channel...
by adding 16 to the color i decrease the alpha because that s how i set up my palette


im just testing things in mtest for now...

so far I have

load sprit
drawing primitives
made my own palettte
textout

I really need to figure out keyboard input


make an event loop...done...

it looks like the example i followed show an easy way to re-implement the old key[KEY_*] fucntionality

first of all i need to create key[256] with names for all the actual keys

i want to reuse as much as possible....

al5 aleady has somthing like this...ALLEGRO_KEY_*

looks like I can already if I use
bool pressed_keys[ALLEGRO_KEY_MAX];
pressed_keys[key_code] = true;


---------------
create my own array like:

bool key[ALLEGRO_KEY_MAX];

now in my event loop get key downs and up events, run function to set my array

the only thing i won't be able to do is while(key[KEY_ESC]);

unless i process in that loop..

am i getting lost here??

what do I need to do to make my menu work

make an event loop in initial setup..
register screen and keyboard events
poll it in the menu

ok im ready to go back to the game....

lift color is what I was working on

add primitives to game

patch my colors into the game...done


lifts now compiles


can i do a global replace for textout??

al_draw_text(font, color, x, y, ALLEGRO_ALIGN_CENTRE, msg);

i might need to specify a display or bitmap..

items compiles

fnx compiles

file compiles by commenting everything out...

emove compiles


on to control

I have to do something about keyboard input...

- set up event loop and hook keyboard up to it

process the event queue in proc_controls...

i want a non blocking way to look for events...

control done...

bullets done

yfilecom..done

now.. remove all other files from project and try to compile...


got as far as trying to start a game...


i can run the game..with lots of problems..

rotation of bitmaps..

players bitmap not filled
filled but need top change colors

control does not works.fixed

items do not show...fixed

make scaler work...


make function keys work...
re-enable function keys
scaler works
speed no

up screen res to 1024 768 for now


make lift prox rect work
mostly done..just need to patch in vertical name when rtext is fixed

do the transparency of player properly

where should I do transparency?

when I created the bitmaps on load??

does it make any sense to keep color 0 in there??



convert mask to alpha at bitmap load and also when making player bitmaps

now do door bitmaps...done...


now fix item draw.

door done..

now key in ans..


what is left to do for item draw:
key in final seq...
stretch draw for bombs


now make enemy draw better...

I fixed the rotating conversion from fixed to float

I am having trouble converting my rotations
what point do i pivot on??

it was as simple as setting the center pivot point to 10,10
and then offsetting the pos x and y by 10

works for player too...!!

i want to get speed working again.. and top display..
ok done...

time for a backup and work...


20180316 7:45

seems like I'm skipping a lot of frames...

rocket draw...fixed

removing blocks with key or breakable leaves lines..fixed

bullets alpha looks good...

block walker block to show...done



frame and title to show frame...done

that is using the backbuffer, instead of screen buffer
i think I should do this in all cases anyway
its an extra layer of complexitry to do both..

frame during game...done
this uses the screen buffer

run the menu using proc controls..done

still needs some work...




game seems to run slow...
can i run it wide open

like in speed test...

still only get like 20 fps

make the fps skipped per sec and actual

how??


create a second timer
check it in proc frame delay



looks like draw item and set draw item shape are high up on the profiler list...

also _mcount private??


i get 22-23 fps
with item_draw_disabled I can get 29-30 fps


everything seems slow...


20 fps base

- get new background 28
- draw items 28
- both 38

also
- draw enemy 56
- draw lift 56
- draw player

no dif

draw pbullets is really bad... why???
no its not that...
that was just the last thing i disabled

with all these disabled i get 170fps

         // these all draw on level_buffer
//         get_new_background();


//         draw_lifts();
//         draw_items();
//         draw_enemy();
//         draw_ebullets();
//         draw_pbullets();
//         draw_screen_msg();
//         draw_players();


as soon as any one of them is enabled it drops to 50


all those functions have in common is:
al_set_target_bitmap(level_buffer);


set this:
al_set_new_bitmap_flags(ALLEGRO_NO_PRESERVE_TEXTURE);

made things a lot faster...

now...


base 32
no item draw 52
no enemy draw 90
all others but get background no change
get background (all disabled) 256


I guess i was mistaken about memory_bitmaps
with allegro 5 they are slow, and video bitmaps are the way to go...


next, why is draw items so slow...

-------------

my bitmap are created with 4 byte per pixel and 32 bits per format

lets try to half that...


al_set_new_display_option(ALLEGRO_COLOR_SIZE, 16, ALLEGRO_REQUIRE);

al_set_new_bitmap_format(ALLEGRO_PIXEL_FORMAT_ANY_16_WITH_ALPHA); ..fails
al_set_new_bitmap_format(ALLEGRO_PIXEL_FORMAT_ANY_16_NO_ALPHA); ..works





base 40 fps with get_new_background only


al_set_new_bitmap_flags(ALLEGRO_NO_PRESERVE_TEXTURE);
90

al_set_new_bitmap_flags(ALLEGRO_NO_PRESERVE_TEXTURE);
al_set_new_display_option(ALLEGRO_COLOR_SIZE, 16, ALLEGRO_REQUIRE);
94

al_set_new_bitmap_flags(ALLEGRO_NO_PRESERVE_TEXTURE);
al_set_new_display_option(ALLEGRO_COLOR_SIZE, 16, ALLEGRO_REQUIRE);
al_set_new_bitmap_format(ALLEGRO_PIXEL_FORMAT_ANY_16_NO_ALPHA); ..works
102



base 22 fps all

al_set_new_bitmap_flags(ALLEGRO_NO_PRESERVE_TEXTURE);
32

al_set_new_bitmap_flags(ALLEGRO_NO_PRESERVE_TEXTURE);
al_set_new_display_option(ALLEGRO_COLOR_SIZE, 16, ALLEGRO_REQUIRE);
28

al_set_new_bitmap_flags(ALLEGRO_NO_PRESERVE_TEXTURE);
al_set_new_display_option(ALLEGRO_COLOR_SIZE, 16, ALLEGRO_REQUIRE);
al_set_new_bitmap_format(ALLEGRO_PIXEL_FORMAT_ANY_16_NO_ALPHA); ..works
34

al_set_new_bitmap_flags(ALLEGRO_NO_PRESERVE_TEXTURE);
al_set_new_bitmap_format(ALLEGRO_PIXEL_FORMAT_ANY_16_NO_ALPHA); ..works
34



draw items does a weird thing were it gets the bitmap to draw in dtemp
if i disable that it gets faster...






tried creating display with windowed, resizeable window no fps diff

fullscreen window went from 32fps to 28
screen size went from 1024x768 to 2048x1152

actual full screen was about the same..


fixed item draw to not use dtemp

new base 1024x768 windows all on
52 fps

enemy draws with dtemp too...fixed
new base 1024x768 windows all on
80 fps


draw enemy is completely done

draw items need to have stretch implemented...
for bombs and moving keys


i think draw items is done, but i would like to simplify it...
rot is used by key and rocket only...
stretch is used by key only, and maybe explosion??
key uses 11 for scale 10 for rot (/10)
rocket uses 10 for rot
lit bomb uses 10 for scale ()/ 100)
if I change:
lit bomb to use 11 to scale..
and make all these / 100
other items uses 11 and 10...
leave this for now




item draw and enemy draw are done, game runs at good speed

let make the menu better...

keys left and right need holdoff...
how about if menu is started with those keys pressed, wait for release...


menu and start screen are all fixed..

lets do the health display and progress bar...done

now free men...done

now frame..done

now small text on door bitmaps...


im going to make or use two bitmaps to do this...

1014 in.
1015 out.

do this when creating door bitmaps
small text for doors is done


now how about controller setup

maybe i should do the save config first...


201801318 5:00 I did a lot yesterday...


today I want to:
finish cfg file
controller setup
remove use of screen buffer in game and switch to backbuffer
sound
help

add to all error msg, native dialog pop up

test keys is done
most of controls is done, still left
key names...done

joystick..


use the same key struct as keys

in controll set the appropriate key...


its looking good,


only works for first joystick right now...

i'm not sure how to do more..

the joystick struct does not correspond to id..
leave it for now
edgar reynaldo posted a solution...

code is good now...








lets do some sound...


scalers were from 0-9

a typical example for bullet is:

(180 * se_scaler)/9

(180/255)  = .71 * (float) se_scaler / 9


sounds are coming along nicely..

i need a way to stop them, especially fuse hiss...

// this plays pm.xm just fine...time to kill DUMB!!!!

   temp_song_stream = al_load_audio_stream("snd/pm.xm", 8, 1024);
   al_attach_audio_stream_to_mixer(temp_song_stream, al_get_default_mixer());

nowhere in the sources is dumb found!!!

make a seperate mixer for se and st and make it work with scalers

do i need sound on/off???

just patch it in the mixer somehow


im having hard time with config files


make load do nothing but get values and test limits

then call save to set menu's and whatever else

save also called when program changes values


done....



remove use of screen buffer in game and switch to backbuffer


mostly done, do the rest as it get uncommented


i want to fix mtextout done
bottom message and level done is good...

now I want to fix tsw()...done



rtextout done...
screen message done...
join_quit_done...



20180318..got a lot done today....


20180319



native error messages..done

screen change by dragging...done, it was easy...
hot key for full screen F12..done..

changing volume when sound off causes crash..fixed
fps to show up on menu to start...fixed

next to do...

file selectors
help
graphical level select
mdw_logo and splash screen
new menu for all of my option that need setting

20180319 0650


stimp and stamp done


change proc_controls to return int
0 normal return
not 0 = scan code of keypress

mdw logo is done... looks a little thin...

i could spend a lot of time making the logo look awesome...

i would like to make the thickness automatic based on the size...
i would like to do some fading with real colors instead of palette..

done

now patch in the splash screen toggle...

do i have to reload everthing from config?  why not??

mdw_logo and splash screen done...

menu redraws map every frame
this takes time.

when on options menu is not drawn and mdw_ans run much faster...

could i also re-purpose proc_controllers() to do delay?
i could think of my proc_controllers() as my event loop processor...

maybe later...


20180320 6:50

next to do:
help
graphical level select
new menu for all of my option that need setting



20180321 6:55

native file select working...
paths were a bitch.. lots of conversions and checks
full path is used, might break run game from command line...
demo mode has been fixed also

bug in changing scale, leaves artifacts if smaller than entire screen.
fixed, in get new background, clear to color after setting backbuffer..

bug: demo mode can be cancelled with any key except ESC, just starts new demo
run game can be cancelled with any key, make it just esc..fixed
demo timeout not reset..done

figure out how to use code blocks to make a nice backup solution..

20180321 1200

next to do:
help
graphical level select
new menu for all of my option that need setting
timer to make menus run at same speed

help is coming along nicely...
help is completley done...20180321 16:45


next to do:
graphical level select
new menu for all of my options that need setting
timer to make menus run at same speed
some way of saving the screen size...
netplay
overlay screens


20180322 6:50
graphical level select is done..., but...
doesn't work with mouse...never did anyway only keys
cant handle screen size change..fixed
used global Redraw...


20180322 10:00

next to do:
timer to make menus run at same speed
new menu for all of my options that need setting
some way of saving the screen size...
netplay
overlay screens


timer to make menus run at same speed
should I block in proc_controllers() ???
yes but only for menu..

menu timer things is working good now...

next
overlay screens
netplay
new method for all of my options that need setting
some way of saving the screen size...



network


libnet.h
where should i put it? in my local stuff?? why not..seem to work

zlib was found without me doing anything...
comes with mingw..
version 1.2.11, January 15th, 2017

everything compiles because I have NETPLAY undefined....
now I have tons...
replace allegro error with m_err

now everything compiles, i just need the library...

C:\Program Files (x86)\mingw-w64\i686-7.2.0-posix-dwarf-rt_v5-rev1\mingw32\i686-w64-mingw32\include\libnet.h
C:\Program Files (x86)\mingw-w64\i686-7.2.0-posix-dwarf-rt_v5-rev1\mingw32\i686-w64-mingw32\lib\libnet.a

link with:
C:\Program Files (x86)\mingw-w64\i686-7.2.0-posix-dwarf-rt_v5-rev1\mingw32\i686-w64-mingw32\lib\libnet.a
C:\Program Files (x86)\mingw-w64\i686-7.2.0-posix-dwarf-rt_v5-rev1\mingw32\i686-w64-mingw32\lib\libwsock32.a
C:\Program Files (x86)\mingw-w64\i686-7.2.0-posix-dwarf-rt_v5-rev1\mingw32\i686-w64-mingw32\lib\libz.a

compiles and links...

need to fix the timer adjust in client...done...

now I need to fix many, many text lines in overlay...done...

now lunch and some real work...
12:40

hooked up the mouse to the event loop...
used it to make adjust spline work...






tested netplay with i990 server and old version 6 on m7667...worked perfectly..



tried to compile on i990 and dir struct if different
mingw is in C:\al5


i like my i990 version better
codeblocks, mingw and allegro are all in c:\AL5

C:\al5\mingw-w64\i686-7.2.0-posix-dwarf-rt_v5-rev1\mingw32\i686-w64-mingw32\include\libnet.h
C:\al5\mingw-w64\i686-7.2.0-posix-dwarf-rt_v5-rev1\mingw32\i686-w64-mingw32\lib\libnet.a


actually i can do better than that:

C:\al5\mingw32\i686-w64-mingw32\include\libnet.h
C:\al5\mingw32\i686-w64-mingw32\lib\libnet.a


compiles on both machines goodly now...



net game works between 2 a5 games

save and load server_ip to cfg file...done


now add screen stuff to logging...


what is screen stuff going to look like now?

same:
sx, sy
scale_factor
show_splash_screen


add:
window x pos, y pos
full_screen


lose
gfx_card
color_depth??
auto_full_screen


-----
done...now save and load them in config..done


now make them work...

what comes first?
init screen or get config?? fixed..

reads on init just fine

save on change

Question about ALLEGRO_FULLSCREEN_WINDOW

I am trying to save the window size and position, so that it will
persist when the game is started again.

Mostly everything is working good, except for a few minor things:

Here is what works:

- I create a display with a certain width and height
- then I let the user resize and move the window
- I save the display size and position in my config file
- It comes back perfectly the next time the game is run


Here is what doesn't:

When I switch to ALLEGRO_FULLSCREEN_WINDOW and back,
the window uses the values that were used to create the display
not the window size that it previously was

I can store my changed position, and then when I change back
- restore the position (easy)
- resize the display (takes a whole other resize)

What I would really like to do, is be able to modify the values
in the display structure, so that switching back, goes to the values
that were there before I switched into ALLEGRO_FULLSCREEN_WINDOW,
and not the ones used when creating the display.


From the manual:

"The passed width and height are only used if the window is switched
out of fullscreen mode later but will be ignored initially."


I suppose I could just destroy and re-create the display, but that
seems like a bit of overkill.


Does anyone have any advice on how I can achieve what I'm trying to do here?


---------------

I have a thought...

instead of changing to fullscreen using the screen thingy
i could just resize it my self to max size...


// moved all the screen change code to one place


variables

display position (relative to desktop)

disp_x_curr (either wind in windowed mode or 0 in fullscreen mode)
disp_y_curr

disp_x_wind (use when restoring from fullscreen)
disp_y_wind

disp_w_curr (either wind or full)
disp_w_wind
disp_w_full



it seems to work, but still takes a while to resize...

now i need a reliable way to get the desktop width and height

how about I create a fullscreen window, grab the w and h then switch out and resize


also my window keeps creeping up....fixed


how can i make reloading bitmaps faster...

store them in memory??

ok


first load puts them in both

next loads from mem to vid...


---------------------------
20180324 0500

cleaned up the screen code a lot
made separate functions to show flags, option, etc..

created temp memory bitmap for reloading..

fill them at creation

sprit player door
doesnt seem any faster

what if i make them all sub_bitmaps and just restore the parent??

first make a video and memory bitmap to store the tiles 640 x 640
then create memory bitmaps with clone_bitmap

seems much faster...

now players and doors...


first....

create them and save them to disk as bitmaps.. just like tiles

what size...


players 19 x 16 = 380 x 320

doors 16 x 8 x 2 = 320 x 320

doors 8 x 32 or (160 x 640)



looking good...

permanently save IN OUT to tilemap..

can I save tilemap??

haven't since a4
done..
my saves now are 24bit bmp and are 3x the old size of 8 bit...


shit is super fast now...



bugs:

resizing display in help, need to reset last line...done

coming out of help, need to redraw menu map
if in game exit, screen change has to recreate the level buffer too.
it should be doing that already...
draw_level..but blocks are gone????
only if screen changed during help...
what does load level do that i don't do...
cant tell...
i know that the bitmaps are getting reloaded...
initl2000 is getting called
l2000 is blank, but why????
at the end of help the target bitmap is cleared....!!!!!
fixed

help screen bitmaps are gone when resized
used global Redraw to fix this...

rtext for lifts..done in game..maybe some in level editor i'll get later

save scaler when changed, i think it is...done

create cfg file if none exists...done



-----------------------------
20180324 0936

coming along real good now...

new to do:
do something with screen size menu thing...not needed

save game...

method to change options...
try menu??

splash_screen_on...dont save the current value
make another called splash_screen_done for current stuff

extern int show_splash_screen;
extern int splash_screen_done;
done..........

bug, when on options menu, change screen then go back to main menu
stuff is getting drawn on level buffer, no l2000
i could make l2000 set cabk buffer back...
but shouldn't other make sure its drawing on right thing??
done.. at start of menu, set target...





ALLEGRO_MENU *menu = al_create_menu();
ALLEGRO_MENU *file_menu = al_create_menu();
al_append_menu_item(file_menu, "Exit", FILE_EXIT_ID, 0, NULL, NULL);
al_append_menu_item(menu, "File", 0, 0, NULL, file_menu);
al_set_display_menu(display, menu);

al_register_event_source(queue, al_get_default_menu_event_source());
al_wait_for_event(queue, &event);

if (event.type == ALLEGRO_EVENT_MENU_CLICK) {
   if (event.user.data1 == FILE_EXIT_ID) {
      exit_program();
   }
}

I have set everything in the menu that I can...
basically only bools...

I would really like to set:
server IP, fuck it, do it from commandline...

works great, except i get random hard crashes...

bug; clear keys at level done

music loop only plays once



lets try it on more machines...

XP???
the procedure entry point _time32 could not be located in the
dynamic link library msvcrt.dll

10...works good...
still get crashes from options menu toggle....


i see lots of frames skipped but doesnt show on client
need to fix that..shows on overlay...

key shifts....



make it so that you can't put the window off the screen

fix the fake keypress mode...

make overlay have an opaque background...done


make it so that you can't put the window off the screen
only on first start...
only in windowed...
done


i see lots of frames skipped but doesnt show on client
need to fix that..shows on overlay...


make run game work from command line..done

finish active player list on run game overlay..done


key shifts done
done for level inc dec
done for speed inc dec
what else is there?? ...log file viewer

blind_save_game_moves(1);
done
now text version...done
now we just need the file selector version :()
done


random hard crashes after using menu toggles
fixed by not creating second display


save_log_file();
log_file_viewer
done
20180324 1039

i have got a lot done today...!!


bug; clear keys at level done
added clear key array to start mode

map..done


screenshot.. done but PRINTSCREEN does not work. had to use PAUSE
fixed

I have been thinking overnight....

I have a couple of big issues...
- speed up the game so it doesn't skip frames
- fix the bug I'm still having about wrong player input...






lets look at the bitmaps i'm using...



first of all the display

display flags:
ALLEGRO_WINDOWED
ALLEGRO_DIRECT3D_INTERNAL
ALLEGRO_RESIZABLE
display options
ALLEGRO_RED_SIZE:8
ALLEGRO_GREEN_SIZE:8
ALLEGRO_BLUE_SIZE:8
ALLEGRO_ALPHA_SIZE:0
ALLEGRO_RED_SHIFT:16
ALLEGRO_GREEN_SHIFT:8
ALLEGRO_BLUE_SHIFT:0
ALLEGRO_ALPHA_SHIFT:0
ALLEGRO_ACC_RED_SIZE:0
ALLEGRO_ACC_GREEN_SIZE:0
ALLEGRO_ACC_BLUE_SIZE:0
ALLEGRO_ACC_ALPHA_SIZE:0
ALLEGRO_STEREO:0
ALLEGRO_AUX_BUFFERS:0
ALLEGRO_COLOR_SIZE:32
ALLEGRO_DEPTH_SIZE:0
ALLEGRO_STENCIL_SIZE:0
ALLEGRO_SAMPLE_BUFFERS:0
ALLEGRO_SAMPLES:0
ALLEGRO_RENDER_METHOD:0
ALLEGRO_FLOAT_COLOR:0
ALLEGRO_FLOAT_DEPTH:0
ALLEGRO_SINGLE_BUFFER:0
ALLEGRO_SWAP_METHOD:0
ALLEGRO_COMPATIBLE_DISPLAY:1
ALLEGRO_UPDATE_DISPLAY_REGION:0
ALLEGRO_VSYNC:0
ALLEGRO_MAX_BITMAP_SIZE:8192
ALLEGRO_SUPPORT_NPOT_BITMAP:1
ALLEGRO_SUPPORT_SEPARATE_ALPHA:1
ALLEGRO_AUTO_CONVERT_BITMAPS:1
ALLEGRO_SUPPORTED_ORIENTATIONS:0
ALLEGRO_OPENGL_MAJOR_VERSION:0
ALLEGRO_OPENGL_MINOR_VERSION:0
ALLEGRO_DISPLAY_OPTIONS_COUNT:0
pixel format:ALLEGRO_PIXEL_FORMAT_XRGB_8888
ALLEGRO_DISPLAY_ORIENTATION_UNKNOWN
refresh rate:0
---------------------------------

the important stuff is:

ALLEGRO_DIRECT3D_INTERNAL
ALLEGRO_COLOR_SIZE:32
pixel format:ALLEGRO_PIXEL_FORMAT_XRGB_8888

now let look at some bitmaps i create like l2000 and level_buffer


pixel format:ALLEGRO_PIXEL_FORMAT_XRGB_8888
ALLEGRO_DISPLAY_ORIENTATION_UNKNOWN
refresh rate:0
tilemap
pixel format:ALLEGRO_PIXEL_FORMAT_ARGB_8888
bitmap flags:
ALLEGRO_VIDEO_BITMAP
ALLEGRO_NO_PRESERVE_TEXTURE
M_tilemap
pixel format:ALLEGRO_PIXEL_FORMAT_ARGB_8888
bitmap flags:
ALLEGRO_MEMORY_BITMAP
---------------------------------


lets try creating a display with ALLEGRO_OPENGL
crashed...
ALLEGRO_OPENGL_3_0 starts but both that and ALLEGRO_DIRECT3D_INTERNAL
are listed...

abandon this for now


al_set_new_display_option(ALLEGRO_COLOR_SIZE, 16, ALLEGRO_REQUIRE)

desktop w:2048 h:1152
display flags:
ALLEGRO_WINDOWED
ALLEGRO_DIRECT3D_INTERNAL
ALLEGRO_RESIZABLE
display options
ALLEGRO_RED_SIZE:5
ALLEGRO_GREEN_SIZE:6
ALLEGRO_BLUE_SIZE:5
ALLEGRO_ALPHA_SIZE:0
ALLEGRO_RED_SHIFT:11
ALLEGRO_GREEN_SHIFT:5
ALLEGRO_BLUE_SHIFT:0
ALLEGRO_ALPHA_SHIFT:0
ALLEGRO_ACC_RED_SIZE:0
ALLEGRO_ACC_GREEN_SIZE:0
ALLEGRO_ACC_BLUE_SIZE:0
ALLEGRO_ACC_ALPHA_SIZE:0
ALLEGRO_STEREO:0
ALLEGRO_AUX_BUFFERS:0
ALLEGRO_COLOR_SIZE:16
ALLEGRO_DEPTH_SIZE:0
ALLEGRO_STENCIL_SIZE:0
ALLEGRO_SAMPLE_BUFFERS:0
ALLEGRO_SAMPLES:0
ALLEGRO_RENDER_METHOD:0
ALLEGRO_FLOAT_COLOR:0
ALLEGRO_FLOAT_DEPTH:0
ALLEGRO_SINGLE_BUFFER:0
ALLEGRO_SWAP_METHOD:0
ALLEGRO_COMPATIBLE_DISPLAY:1
ALLEGRO_UPDATE_DISPLAY_REGION:0
ALLEGRO_VSYNC:0
ALLEGRO_MAX_BITMAP_SIZE:8192
ALLEGRO_SUPPORT_NPOT_BITMAP:1
ALLEGRO_SUPPORT_SEPARATE_ALPHA:1
ALLEGRO_AUTO_CONVERT_BITMAPS:1
ALLEGRO_SUPPORTED_ORIENTATIONS:0
ALLEGRO_OPENGL_MAJOR_VERSION:0
ALLEGRO_OPENGL_MINOR_VERSION:0
ALLEGRO_DISPLAY_OPTIONS_COUNT:0
pixel format:ALLEGRO_PIXEL_FORMAT_RGB_565
ALLEGRO_DISPLAY_ORIENTATION_UNKNOWN
refresh rate:0
tilemap
pixel format:ALLEGRO_PIXEL_FORMAT_ARGB_8888
bitmap flags:
ALLEGRO_VIDEO_BITMAP
ALLEGRO_NO_PRESERVE_TEXTURE
M_tilemap
pixel format:ALLEGRO_PIXEL_FORMAT_ARGB_8888
bitmap flags:
ALLEGRO_MEMORY_BITMAP
---------------------------------


the bitmaps don't seem to have changed..
the game seems to run faster


can i do a 24??


desktop w:2048 h:1152
display flags:
ALLEGRO_WINDOWED
ALLEGRO_DIRECT3D_INTERNAL
ALLEGRO_RESIZABLE
ALLEGRO_FRAMELESS
display options
ALLEGRO_RED_SIZE:8
ALLEGRO_GREEN_SIZE:8
ALLEGRO_BLUE_SIZE:8
ALLEGRO_ALPHA_SIZE:0
ALLEGRO_RED_SHIFT:16
ALLEGRO_GREEN_SHIFT:8
ALLEGRO_BLUE_SHIFT:0
ALLEGRO_ALPHA_SHIFT:0
ALLEGRO_ACC_RED_SIZE:0
ALLEGRO_ACC_GREEN_SIZE:0
ALLEGRO_ACC_BLUE_SIZE:0
ALLEGRO_ACC_ALPHA_SIZE:0
ALLEGRO_STEREO:0
ALLEGRO_AUX_BUFFERS:0
ALLEGRO_COLOR_SIZE:32
ALLEGRO_DEPTH_SIZE:0
ALLEGRO_STENCIL_SIZE:0
ALLEGRO_SAMPLE_BUFFERS:0
ALLEGRO_SAMPLES:0
ALLEGRO_RENDER_METHOD:0
ALLEGRO_FLOAT_COLOR:0
ALLEGRO_FLOAT_DEPTH:0
ALLEGRO_SINGLE_BUFFER:0
ALLEGRO_SWAP_METHOD:0
ALLEGRO_COMPATIBLE_DISPLAY:1
ALLEGRO_UPDATE_DISPLAY_REGION:0
ALLEGRO_VSYNC:0
ALLEGRO_MAX_BITMAP_SIZE:8192
ALLEGRO_SUPPORT_NPOT_BITMAP:1
ALLEGRO_SUPPORT_SEPARATE_ALPHA:1
ALLEGRO_AUTO_CONVERT_BITMAPS:1
ALLEGRO_SUPPORTED_ORIENTATIONS:0
ALLEGRO_OPENGL_MAJOR_VERSION:0
ALLEGRO_OPENGL_MINOR_VERSION:0
ALLEGRO_DISPLAY_OPTIONS_COUNT:0
pixel format:ALLEGRO_PIXEL_FORMAT_XRGB_8888
ALLEGRO_DISPLAY_ORIENTATION_UNKNOWN
refresh rate:0
tilemap
pixel format:ALLEGRO_PIXEL_FORMAT_ARGB_8888
bitmap flags:
ALLEGRO_VIDEO_BITMAP
ALLEGRO_NO_PRESERVE_TEXTURE
M_tilemap
pixel format:ALLEGRO_PIXEL_FORMAT_ARGB_8888
bitmap flags:
ALLEGRO_MEMORY_BITMAP

exactly the same as 32 bit


OK go back to 16 and lets look at bitmaps


al_set_new_bitmap_format(ALLEGRO_PIXEL_FORMAT_ANY_32_WITH_ALPHA)
gets: ALLEGRO_PIXEL_FORMAT_ARGB_8888


al_set_new_bitmap_format(ALLEGRO_PIXEL_FORMAT_ANY_16_WITH_ALPHA)
fails to create


al_set_new_bitmap_format(ALLEGRO_PIXEL_FORMAT_ANY_16_WITH_ALPHA)
gets: ALLEGRO_PIXEL_FORMAT_RGB_565
works but has no alpha...duh!

al_set_new_bitmap_format(ALLEGRO_PIXEL_FORMAT_ANY_24_NO_ALPHA)
fails to create

what if i made l2000 and level buffer 16 with no alpha

that seems to work...

lets test and see the dif..

display 16 or 32
l2000 and level_buffer 16 no alpha


fullscreen 2048x1152
d32 l32  (55-60fps)
d16 l32  (55-60fps)
d16 l16  (58-62fps) slightly better


what is the bottleneck?

is is the huge l2000 to level_buffer each frame??


what if I made that only do a region??
let try and see if it gets faster...

//   al_draw_bitmap(l2000, 0, 0, 0);
   al_draw_bitmap_region(l2000, 0, 0, 1000, 1000, 0, 0, 0);

that got way faster...like 100-110

lets only do it for the section that maps to the screen...



what are SH, SW, WX, WY?

WY, WY are global but are used in
seem to be used only in stimp, stamp, and get_new_screen_buffer

SW, SH
used locally in set_scale_factor, get_new_screen_buffer, stimp and stamp


make global to tell what region on l2000 is currently being shown

call them:

int level_display_region_x;
int level_display_region_y;
int level_display_region_w;
int level_display_region_h;

that seems to be a lot faster

map on menu is messed

set in stimp and stamp

no, unless in a game do it all..

use game_exit?? yes

this all seems great and seem a lot faster

lets test...



speed test
ill need to redo it...
i should just run it wide open and manually adjust the screen to start...

nv59 starts out fullscreen 1600x1200 at >100fps then drops to less than 40 in 15s
sometimes jumps to 80


nv59 sp  w 200 drops to 100
nv59 sp  f 80 drops to 35

nv59 demo w 60 drops to 35
nv59 demo f 20

i990 sp   600w 100f
i990 demo 180w 72f

m7667 can do 386 fps in a window!!! and 200 fullscreen

eid can do 800 in windows and 400 fullscreen

demo mode why slower???

disabled all screen overlays, should not be that..
disabled rungame_key_check()
changed proc_game_move() look back thing
all no diff

going back...

I have a new idea about speed test.

run game, or demo and record fps every second

then adjust screen resolution on the fly...

make a pretty graph...


name and screen resolution in screen title...done

make get new background get a little larger..done
what order is stuff drawn in??


log file viewer file select
make a new file... zlog.cpp
do it....done....


redraw map when leaving controller menu
test keys...fixed...


bomb's explosion animation seq is too low, center it better
looks good to me...








level_editor

bring in the files...e_editor

coming along goodly....


status window creates new bitmap every time its drawn
make it draw itself every time...
now dont need code to draw its bmp or even its bitmap...


status and select window are now perfect...
1 day later even more perfect...
removed all bitmaps they draw on.
only one function for each, draw and process
disable resizing of blocks and special sub windows


moving on...


pop up menu is transparent..make background opaque...done


next...zoom full screen...

looking good...
i can copy and paste

file stuff disabled for now

screen size change messes with text button positions

clear disabled until erase lifts brought back..done

blocks on off not updating fsel?? looks good now...


new backup

20180328 0700




should I make my own file select dialog?
I hate the way the native windows one looks...

i would have to implement a list box...

what if I just make a wrapper for the gui so i can call it in one line_draw_modelike I used to:

      FILE *filepntr;
      extern char sel_filename[500];
      sprintf(sel_filename, "sel\\");
      if (file_select_ex("Save Selection", sel_filename, "sel", 500, 0, 0))
      {
         filepntr = fopen(sel_filename,"w");




re_implement file_select_ex as
mw_file_select(const char * title, char * filename, const char * ext, ALLEGRO_COLOR col);

works great, add option save  and force extension..done..

i could re-do my file access to use the allegro methods...maybe when I've got too much time on my hands...


re do it for rungame save...no that has a special case where i only need the filename and I add my own extensions .gm and .txt

OK whats left in zoom full screen???

random...done

brf...done...

look like zoom fullscreen is totally done..

so is everything in e_editor...

next ...

viewers...will be huge...

but first:

status and select window positions when screen changes

where does db and lefsm get changed when screen size changes??
all done in set map var...

after screen resize items and enemies are gone?
try draw big..


backup...
20180329-0700



object viewer is looking very good
map move too...



--------------------
20180330 0700

item viewer
creators
pop message editor
save and load
all done

next big thing...lifts


lifts is all done except for text...

replace all alert with native msg...


//      gui_fg_color = palette_color[14];  gui_bg_color = palette_color[14+224];
//      alert("Error creating lift step:", (char)NULL, "40 steps is the maximum", "OK", (char)NULL, (char)NULL, (char)NULL);
//      gui_fg_color = palette_color[9]; gui_bg_color = palette_color[0];

         al_show_native_message_box(display,
               "Error", "No creator exists for the current item type",
               "Copy from an existing item of that type, or get one from the selection window",
                NULL, ALLEGRO_MESSAGEBOX_ERROR);




now alert3

if (alert("Move the key's", "block range also?","","Move", "Leave", 'M', 'L')==1)

if (al_show_native_message_box(display,
               "Move?", "Move the key's", "block range also?",
                NULL, ALLEGRO_MESSAGEBOX_YES_NO | ALLEGRO_MESSAGEBOX_QUESTION );


if (al_show_native_message_box(display,
            "Move?", "Move the key's block range also?", NULL, NULL,
             ALLEGRO_MESSAGEBOX_YES_NO | ALLEGRO_MESSAGEBOX_QUESTION ) == 1)




level viewer is mostly done...

it used a trick where the grid was not redrawn

in order to make it work now, i'll need a temp bitmap
what size...?? 1000 x 1000

e_lev is all done:

next to do:

text input for lift...


glt is totally done too...


the only files that are not back in the project are:
e_bitmap
e_guifnx
and they will probably not come back....
pde is mostly disabled too...



kill all scrn_buffer...
153 refs...
all done except for some unused re-size code in special
also fix all clips..



draw pop message on item viewer leaves artifacts
but only when switching from one message to another
why does it not redraw then?
as far as i can tell, it should redraw every frame..

it was because draw pop message set target to something else


sproingy adjust...done
crosshairs line 16 inside rect
928 for highlighted rect
text entry box done!!!


help quits to far..trap esc or mouseb...done

make screen adjust work with level editor and les
looks good in zfs, obj and lift viewers...

make les adjustable in le done

used F2, same as speed testing in game

I need a variable to tell me if i'm in the level editor

level_editor_running done

mouse off map in main editor...done





lots done over long weekeknd

new backup...
20180401 1025

mouse shown during game and menu screens...done
make save level have filename automatically filled in...done



I am new to the whole blender thing and have spent many hours trying
to figure out what I though would be a simple task.

I am trying to draw a bitmap onto the backbuffer and blend it with the
backbuffer.

This code from the examples works great:

al_set_blend_color(al_map_rgba_f(0.5, 0.5, 0.5, 0.5));
al_set_blender(ALLEGRO_ADD, ALLEGRO_CONST_COLOR, ALLEGRO_CONST_COLOR);

But my source bitmap has an alpha channel, and I can't figure out how
to get that respected...no matter how many different combination I try
I always get the zero pixels blended also.

I have tried al_set_separate_blender with many different combinations
and gotten nowhere.

I have read the docuemntation many times, and looked at other explanations
of blending of the web.  But I can't seem to make it work.


<code>
// this draws a background of colored squares
   ALLEGRO_COLOR c[5];
   c[0] = al_map_rgb(255, 0, 0);
   c[1] = al_map_rgb(0, 255, 0);
   c[2] = al_map_rgb(0, 0, 255);
   c[3] = al_map_rgb(255, 255, 255);
   c[4] = al_map_rgb(0, 0, 0);

   al_set_target_backbuffer(display);
   al_flip_display();
   al_clear_to_color(al_map_rgb(0,0,0));

   int ci = 0;
   for (int y=0; y<10; y++)
      for (int x=0; x<10; x++)
      {
         al_draw_filled_rectangle(x*20, y*20, x*20+20, y*20+20, c[ci]);
         if (++ci>2) ci = 0;
      }



// this is the bitmap I am drawing
   sprintf(msg, "Test") ;
   int sw = strlen(msg) * 8;
   ALLEGRO_BITMAP *temp = al_create_bitmap(sw, 8);
   al_set_target_bitmap(temp);
   al_clear_to_color(al_map_rgb(0,0,0));
   al_draw_text(font, ci[3], sw/2, 0, ALLEGRO_ALIGN_CENTRE, msg);
   al_convert_mask_to_alpha(temp, al_map_rgb(0, 0, 0));


// here is where I have tried just about every blender combination I can think of

   al_set_blend_color(al_map_rgba_f(0.5, 0.5, 0.5, 0.5));
   al_set_blender(ALLEGRO_ADD, ALLEGRO_CONST_COLOR, ALLEGRO_CONST_COLOR);



// this is where i actually draw  it
   al_set_target_backbuffer(display);
   al_draw_scaled_rotated_bitmap(temp, sw/2, 4, 88, 48, 4, 4, 0, 0);
   al_flip_display();
   al_destroy_bitmap(temp);

</code>


When I don't specify any blender I get a nice masked text over background.

When I try this:
al_set_blend_color(al_map_rgba_f(0.5, 0.5, 0.5, 0.5));
al_set_blender(ALLEGRO_ADD, ALLEGRO_CONST_COLOR, ALLEGRO_CONST_COLOR);

I get a nice blended source and dest, just like what I wanted,
except the alpha is not respected and I get a rectangle around the text.


I tried:
al_set_blend_color(al_map_rgba_f(0.5, 0.5, 0.5, 0));
al_set_blend_color(al_map_rgba_f(0.5, 0.5, 0.5, 1));
al_set_blend_color(al_map_rgb_f(0.5, 0.5, 0.5));
but they all made no difference.

I tried:
al_set_blend_color(al_map_rgb_f(0.5, 0.5, 0.5));
al_set_separate_blender(ALLEGRO_ADD, ALLEGRO_CONST_COLOR, ALLEGRO_CONST_COLOR, ALLEGRO_ADD, ALLEGRO_ONE, ALLEGRO_ZERO);

al_set_blend_color(al_map_rgb_f(0.5, 0.5, 0.5));
al_set_separate_blender(ALLEGRO_ADD, ALLEGRO_CONST_COLOR, ALLEGRO_CONST_COLOR, ALLEGRO_ADD, ALLEGRO_ALPHA, ALLEGRO_ZERO);

plus many more combinations, but I can never get the alpha mask to work...

Can anyone with more experience with blenders help me?

Do I somehow have to do this with 2 steps?

My overall goal is simply to have a partially transparent bitmap superimposed over
another bitmap (the backbuffer), (kind like a water mark), but I want it masked so the
zero pixels are not blended with the background.




pixel format:ALLEGRO_PIXEL_FORMAT_ARGB_8888
pixel format:ALLEGRO_PIXEL_FORMAT_RGB_565




looking at different fonts..

great vibes is a free calligraphic font I might use for logo
by typesetit
licensed under OFL

I should make my own larger text display function

it purpose to display very large text based on screen and font size
one and two line versions



for a few days now I have been working with ttf

I have a nice new script font I'm using for ichael avid eiss

It's called 'Great Vibes'
by: typesetit
license: OFL

I also like:
SaucerBB.ttf
but it only free for non-commercial use..
It looks good as my main logo..


I have replaced mtextout() with a similar function
mtextout() was slow, so the new one uses pre-draw bitmaps
for ichael avid eiss
seems a lot faster...

I moved all code for logo and splash screen to its own file: zlogo.cpp

I think I am finally happy with the beginning splash screen

now I want to redo demo mode...

its too slow to draw the large text every frame
I could make another temp bitmap like the others...done...

what am i doing?

I am spending a lot of time making fonts and stuff look pretty...

when will it end???

to do:
-width of splines smooth change
-splash screen to not flash when quitting
-new title with new font

all this is done

predefined enemies editor..done


map not redrawn completely,
probably due to not drawing all of level buffer...
yes...lets disable map
just at the function key level...





orthographic stretch during game, and or menu screens
move to F11
choose another key for controller test exit other than F11
auto choose ortho based on screen size
maybe I could make othro strecth CTRL SHIFT F12
done...


now make les auto chosen based on screen size...

where??
init screen
also screen change

make a seperate function

set_display_transform_double()


how?


rebuild bitmaps does this:

   SCREEN_W = disp_w_curr/les;
   SCREEN_H = disp_h_curr/les;
   ALLEGRO_TRANSFORM trans;
   al_identity_transform(&trans);
   al_orthographic_transform(&trans, 0, 0, -1.0, disp_w_curr/les, disp_h_curr/les, 1.0);
   al_use_projection_transform(&trans);


init screen does this:

   SCREEN_W = disp_w_curr/les;
   SCREEN_H = disp_h_curr/les;


   ALLEGRO_TRANSFORM trans;
   al_identity_transform(&trans);
   al_orthographic_transform(&trans, 0, 0, -1.0, disp_w_curr/les, disp_h_curr/les, 1.0);
   al_use_projection_transform(&trans);


why dont i put that in set_les


need a function to set ortho
called by init and change

make set_les do auto


rebuild does
set ortho

init does:
auto_set_les();
set_ortho();

change does:
auto_set_les();
rebuild
( set_ortho(); is done in rebuild bitmaps)

F12 does
rebuild

this works...

now to auto set
never auto choose 3

SCREEN_W > 1024 les = 2

looks good in game, but level editor??

does scale change with les??

it should...done
but when its saved with a different les???
its good


demo mode
resize
fullscreen...
goes really slow and no title..
2 resizes...
only in demo mode
fixed..font not destroyed before recreate



do I need to load fonts at 400??
what does 200 look like?
"saucer"
used for:
main tile Purple Martains
main title created by
menu title
level done
demo mode
240 is good enough

"a charming font"
used for ichael avid eiss
240 is good


locked exit to show number left


bottom display to not conflict with frame display (mostly in demo mode)
moved up BORDER_WIDTH



m7667 resize ok but going in or out of fullscreen causes exit when client
do I still have F12 exit key in client??
yes in 4 places...change to F11 for now
done....



client quits game, but freezes locally..
walk me through the sequence of client quitting
client presses ESC
client local control gets comp move of 127 and sends cdat to server
server add to game move array
in add game move special move exit is entered instead of escape
player state change to incative
in proc game move for local client become inactive...
this is the problem:
while (key[ALLEGRO_KEY_ESCAPE]); // wait for release, but send cdat first
do i even need this???


no mouse for options menu..fixed
restore full screen mode when leaving options toggles..done


log file viewer les...done




level viewer won't load good
keeps saying cant find file...400 times
fixed...



simplify num_enemy
int num_enemy in main in pm.h
counted in game in enemy collision
counted in level editor in sort_enemy
only only enemy_data now, no duplicate in lev

same for items..done



start level editor from command line
les is bad fixed


make my own option setting screens with my own sliders and buttons

netgame server text
deathmatch_pbullets_damage slider

I could do it with the menus that I have now..
make netgame menu...done
call it from old menu toggles..
done...
now implement the toggles
in config load set the menu values...done
edit and change with menu
this is all done....yay!!!
now if I do logging I can kill the stupid toggle menu...
done....!!!!
kill it!!!!

number pad keys to work in help...done

fix logo in help..done

when ortho changes
help divider lines off screen...fixed

close holes in menu
-bitmap editor is all that is left
do I still have release in pm.h??

Random mode in zfs
menu in editor
fake keypress mode
copy files to clients
packet test
log file viewer
temp test -g
record video
debug overlay for client and server






---------------------------------------------------------
should I make my background totally black?
---------------------------------------------------------
modify shapes 0-32 to remove really light pixels?
how could i do this??
save_sprit() is still there just commented out
load, modify, save...done


---------------------------------------------------------
what if my whole drawing routine is too complicated
---------------------------------------------------------
right now:
I have l2000 with all the blocks and lift lines drawn
every frame I start with this and copy it to level buffer
then all objectrs draw on the level buffer
then i take a screen sized region of the level buffer and copy it to the backbuffer
then I draw overlay on that
then finally I flip display

how many target bitmap changes: 2
switch to level buffer
and get new background
draw on level buffer
switch to screen buffer

how could i make it easier??

draw background directly on backbuffer from memory bitmaps
draw objects directly on backbuffer
draw overlay
flip

or...

draw background directly on backbuffer from l2000 (just like get new screen buffer)
draw objects directly on backbuffer (just need to change offsets)
draw overlay (same)
flip

test this and see if its faster...
made 1 change in get_new_screen_buffer()

i just realized, i have scaling going on too
i cant just switch from drawing on level buffer which is unscaled
to screen buffer, which is...fuck it, i'm not doing this




speed testing...

while speed testing use number keys to disable stuff to see the
performance hit

get_new background
screen meassges
bottom messages

show fps independent of overlay

wow, i got somewhere!
I found that bottom msg slows stuff down...
on nv59 it down a lot....


make the keys active at any time, not just speed test
show when something is disabled only

test big netgame...


it gets a lot faster when screen and bottom msg are disabled..

I should see if there is some way to optimize them..

like not using temp bitmaps...
like not drawing as many of them..
player health screen messages could be only for local player not all

basically i dont want to switch my target bitmap during game loop
and all of my fancy text routine do that...

what about screen overlay? should be just straight text...yes
what about percent bar?? no switch...its good

move show_player_join_quit to loop for disabling...
if (show_player_join_quit_timer) show_player_join_quit();
done

disable by default: 3 4 5 ...done

test some more...

what if i evened out frame skip
like every other farem, or every 3 or 4 frame...etc
why?  if one frame is slow wont they all be??


what if i made the fancy text drawing stuff off when frames skipped?

profile the text drawing stuff...
in game loop make a function that draw 100 rtext things to screen every drame

change health display to show +H or -H
use regular text

found a very small font called: pixel gosub
"Pixel Sagas" and "Neale Davidson" may be used interchangeably in this agreement. These all refer to the intellectual and legal property of Neale Davidson.
Usage
Pixel Saga's Shareware Fonts are free to use for personal, non-commercial purposes. No payment is necessary to use Pixel Saga's Freeware Fonts for personal use, and there is no limit to the amount of prints, pages, or other medium to be produced using them. However, you cannot offer the font for commercial sale, or offer for direct download. The inclusion of the font name and/or site URL in the credits or documentation when it is used is appreciated, but this is not mandatory.

is is otf but loads fine
i load with size 7
f3 = al_load_ttf_font("bitmaps/PixelGosub.otf", 7, ALLEGRO_TTF_MONOCHROME);
f3 = al_load_ttf_font("bitmaps/PixelGosub.otf", -8, ALLEGRO_TTF_MONOCHROME);
these both look good
its looks like 3x5 on the screen

ok now I never need screen message...


how about bottom display
i like how it looks...
but so what?, if its slow it needs to go...
fixed...

in draw player health display all is good...

in bottom message all is good

screen message, disabled

all that's left is join_quit..lets leave it

lifts use rtextout_centre()...
but only in vertical mode
its rare enough i'm going to leave it for now

speed seems good now across all clients except nv59
but nv59 has always had issues...

what if i did nv59 in a desktop screen size
less than the huge 1600x1200 i have been using??





---------------------------------------------------------
hysteresis window does not work
---------------------------------------------------------
always stuck to lower right corner
WX and WY needed to persist
made it a global again
bug happened after I made it local..



---------------------------------------------------------
------------------------ linux --------------------------
---------------------------------------------------------

got it to compile and run..

complains it can't create built in font

also can't load a4.tga

gcc version 5.4.0
allegro version 5.2.5??

i'm editting in 2 places at once
thats a recipe for disaster...

edit only on linux for now

the second crash was that I couldn't create a 16 bit display
fixed that...

splash screen has no large Purple Martians but has created by??
same font??
logo works
crashes a soon as splash screen done..

i'm running into max bitmap size

it says it 2048

when I create the title its close...

2090 one time
2034 another timeval
why the fuck is it different???

I don't know...

I would like the title as high a resoultion as i can...

'Purple Martians!' is 14 char

take max bitmap size and divide by 16

2048/16 = 128

8192/16 = 512


changed the load font function to create saucer font by
max bitmap / 16

also changed load built in font to try a4_font.bmp if it fails

left achafont at 240...
what's its max length?  'ichael' 6 char

2048/6 = 341
8192/6 = 1365
just leave at 240 for now...looks good...


as far as the display bit depth, i'll try 16 "SUGGEST"
works on linux just fine, gets 32 bit...


on linux the built in font seems to work now that I have a display...


its really slow

linux:
32 bit
opengl
render method: 2
max bitmap size: 2048
support seperate alpha: no

win:
16 or 32 bit
D3D
render method: 0
max bitmap size: 8192
support seperate alpha: yes


no matter what I disable, linux runs at 60fps

2 things..

downgrade allegro to 5.2.4..done
get gcc-7..done
rebuild allegro with gcc-7...

that made exactly no difference...


I tried opengl on windows and I got exactly 60fps also...

its the exact same as the desktop refresh rate..
I changed the desktop to 40 and my game followed...

try open gl 3

sudo apt-get install mesa-utils

glxinfo | grep "render string"


open_gl
seems to wait for vertical retrace before doing al_flip_display()

u swap method:0 same as w

w render method:0
w vsync:0

u render method = 2
u vsync:0

none of this works...
vblank_mode=0  (from command line)

GLX_EXT_swap_control
GLX_MESA_swap_control

moving on......

l seems to not change screen zize nicely..
in control...make sure all resize event are received before actually resizing

when switching away from fullscreen mode
sizes all look good, but still fullscreen??

in linux i try to set to fullscreen but get slightly less???


on the plus side, it looks like everything else is working good in linux

all that i need to figure out is the open gl stuff
with fullscreen, resizing, ortho, les, etc...


init screen
fullscreen:0 les:1
x:  10 y:  10 w: 800 h: 600 - curr
x:  10 y:  10 w: 800 h: 600 - wind
x:  10 y:  10 w: 800 h: 600 - disp
0:   0 0:   0 w: 800 h: 600 - scrn
----------------------------------
Display change
x:  43 y:  47 w: 800 h: 600 fs:0
window moved
fullscreen:0 les:1
x:  43 y:  47 w: 800 h: 600 - curr
x:  43 y:  47 w: 800 h: 600 - wind
x:  43 y:  47 w: 800 h: 600 - disp
0:   0 0:   0 w: 800 h: 600 - scrn
Display change
x:   0 y:   0 w: 800 h: 600 fs:1
changed to fullscreen
fullscreen:1 les:2
x:   0 y:   0 w:1280 h:1024 - curr
x:  43 y:  47 w: 800 h: 600 - wind
x:  35 y:  18 w:1245 h:1006 - disp
0:   0 0:   0 w: 640 h: 512 - scrn
Display change
x:   0 y:   0 w: 640 h: 512 fs:0
changed away from fullscreen
fullscreen:0 les:1
x:  43 y:  47 w: 800 h: 600 - curr
x:  43 y:  47 w: 800 h: 600 - wind
x:  35 y:  18 w: 800 h: 600 - disp
0:   0 0:   0 w: 800 h: 600 - scrn
Display change
x:  35 y:  18 w: 800 h: 600 fs:0
window moved
fullscreen:0 les:1
x:  35 y:  18 w: 800 h: 600 - curr
x:  35 y:  18 w: 800 h: 600 - wind
x:  35 y:  18 w: 800 h: 600 - disp
0:   0 0:   0 w: 800 h: 600 - scrn
Display change
x:  35 y:  18 w:1245 h:1006 fs:0
window resized
fullscreen:0 les:2
x:  35 y:  18 w:1245 h:1006 - curr
x:  35 y:  18 w:1245 h:1006 - wind
x:  35 y:  18 w:1245 h:1006 - disp
0:   0 0:   0 w: 622 h: 503 - scrn


what if I tried ALLEGRO_FULLSCREEN_WINDOW....



this could be happening:

fullscreen mode is set
linux change to slightly less than fullscreen
my proc_screen_change() has no case to deal with this...

I should update the full screen sizes




ripped out all the custom fullscreen window shit
now it works good in win and lin except for
lin background wrong size??

fullscreen and back OK, only when resize...


l2000 get drawn wrong after resize and I don't know why
code is just about identical...

when I am setting ortho, I need to make sure i'm setting it for the backbuffer...problem solved


the good thing is that almost everything else works great..


lin window moves down 21 pixels, every time fs on/off







---------------------------------------------------------
------------------------ Static Linking------------------
---------------------------------------------------------
why?
so i dont have to distribute dlls with my project?

my method now (dynamic)

link with allegro_monolith-5.2

I need to distribute with executable:
allegro_monolith-5.2.dll (15,218K)
libgcc_s_dw2-1.dll (112K)
libstdc++-6.dll (1,504K)
libwinpthread-1.dll (46K)

my exectutable is (3,209K)

total: 20,089K

what do I need to do static linking?

build allegro with static linking



From Neil:
https://www.allegro.cc/forums/thread/617338
In Code::Blocks, I use "allegro_monolith-static".

For my linked libs, I have (copy and pasted from my codeblocks project file). Maybe this will help...

<Linker>
   <Add option="-m32" />
   <Add option="-static" />
   <Add option="-static-libgcc" />
   <Add library="mingw32" />
   <Add library="dumb" />
   <Add library="FLAC" />
   <Add library="vorbisfile" />
   <Add library="vorbis" />
   <Add library="freetype" />
   <Add library="ogg" />
   <Add library="physfs" />
   <Add library="png16" />
   <Add library="zlibstatic" />
   <Add library="gdiplus" />
   <Add library="uuid" />
   <Add library="kernel32" />
   <Add library="winmm" />
   <Add library="psapi" />
   <Add library="opengl32" />
   <Add library="glu32" />
   <Add library="user32" />
   <Add library="comdlg32" />
   <Add library="gdi32" />
   <Add library="shell32" />
   <Add library="ole32" />
   <Add library="advapi32" />
   <Add library="ws2_32" />
   <Add library="shlwapi" />
   <Add library="dsound" />
   <Add library="jpeg" />
   <Add library="opusfile" />
   <Add library="opus" />
</Linker>

From wiki:
https://wiki.allegro.cc/index.php?title=Windows,_Code::Blocks_and_Allegro_5

-lallegro_monolith-debug-static
-ljpeg
-ldumb
-lFLAC
-lfreetype
-lvorbisfile
-lvorbis
-logg
-lphysfs
-lpng16
-lzlibstatic
-ldsound
-lgdiplus
-luuid
-lkernel32
-lwinmm
-lpsapi
-lopengl32
-lglu32
-luser32
-lcomdlg32
-lgdi32
-lshell32
-lole32
-ladvapi32
-lws2_32
-lshlwapi
-static-libstdc++
-static-libgcc


compile allegro with shared off


this is my cobeblock project file:

<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<CodeBlocks_project_file>
	<FileVersion major="1" minor="6" />
	<Project>
		<Option title="pm" />
		<Option pch_mode="2" />
		<Option compiler="gcc" />
		<Build>
			<Target title="default">
				<Option output="pm" prefix_auto="1" extension_auto="1" />
				<Option object_output="o" />
				<Option type="1" />
				<Option compiler="gcc" />
				<Compiler>
					<Add option="-Wall" />
					<Add option="-pg" />
					<Add option="-Og" />
					<Add option="-g" />
				</Compiler>
				<Linker>
					<Add option="-pg -lgmon" />
					<Add option="-static-libstdc++" />
					<Add option="-static-libgcc" />
					<Add option="-static" />
				</Linker>
			</Target>
		</Build>
		<Compiler>
			<Add option="-pg" />
			<Add option="-g" />
			<Add directory="C:/mingw32/include" />
		</Compiler>
		<Linker>
			<Add option="-pg -lgmon" />
			<Add library="C:/mingw32/lib/liballegro_monolith.dll.a" />
			<Add library="C:/mingw32/lib/libnet.a" />
			<Add library="C:/mingw32/i686-w64-mingw32/lib/libwsock32.a" />
			<Add library="C:/mingw32/i686-w64-mingw32/lib/libz.a" />
			<Add directory="C:/al5/allegro-i686-w64-mingw32-gcc-7.2.0-posix-dwarf-dynamic-5.2.4.1/allegro/lib" />
		</Linker>
		<Unit filename="docs/new5.txt" />
		<Unit filename="docs/new5_todo.txt" />
		<Unit filename="src/e_editor.cpp" />
		<Unit filename="src/e_fnx.cpp" />
		<Unit filename="src/e_glt.cpp" />
		<Unit filename="src/e_item.cpp" />
		<Unit filename="src/e_lev.cpp" />
		<Unit filename="src/e_menu.cpp" />
		<Unit filename="src/e_nev.cpp" />
		<Unit filename="src/e_nlv.cpp" />
		<Unit filename="src/e_pde.cpp" />
		<Unit filename="src/e_sel.cpp" />
		<Unit filename="src/e_sliders.cpp" />
		<Unit filename="src/e_special.cpp" />
		<Unit filename="src/n_client.cpp" />
		<Unit filename="src/n_client.h" />
		<Unit filename="src/n_network.cpp" />
		<Unit filename="src/n_network.h" />
		<Unit filename="src/n_packet.cpp" />
		<Unit filename="src/n_packet.h" />
		<Unit filename="src/n_server.cpp" />
		<Unit filename="src/n_server.h" />
		<Unit filename="src/pm.h" />
		<Unit filename="src/yfilecom.cpp" />
		<Unit filename="src/zbullets.cpp" />
		<Unit filename="src/zcontrol.cpp" />
		<Unit filename="src/zemove.cpp" />
		<Unit filename="src/zfile.cpp" />
		<Unit filename="src/zfnx.cpp" />
		<Unit filename="src/zitem.cpp" />
		<Unit filename="src/zlifts.cpp" />
		<Unit filename="src/zlog.cpp" />
		<Unit filename="src/zlogo.cpp" />
		<Unit filename="src/zloop.cpp" />
		<Unit filename="src/zmain.cpp" />
		<Unit filename="src/zmenu.cpp" />
		<Unit filename="src/zplayer.cpp" />
		<Unit filename="src/zscrn.cpp" />
		<Unit filename="src/zsound.cpp" />
		<Extensions>
			<code_completion />
			<envvars />
			<debugger />
		</Extensions>
	</Project>
</CodeBlocks_project_file>


static version   liballegro_monolith-static.a

dynamic version  liballegro_monolith.dll.a

in build options tried moving from lefthand side with full path
to right hand side like this:

old:
C:\mingw32\lib\liballegro_monolith.dll.a
C:\mingw32\lib\libnet.a
C:\mingw32\i686-w64-mingw32\lib\libz.a
C:\mingw32\i686-w64-mingw32\lib\libwsock32.a
new:
-lallegro_monolith.dll
-lnet
-lzlib
-lwsock32
worked...




<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<CodeBlocks_project_file>
	<FileVersion major="1" minor="6" />
	<Project>
		<Option title="pm" />
		<Option pch_mode="2" />
		<Option compiler="gcc" />
		<Build>
			<Target title="dynamic">
				<Option output="pm" prefix_auto="1" extension_auto="1" />
				<Option object_output="o" />
				<Option type="1" />
				<Option compiler="gcc" />
				<Compiler>
					<Add option="-Wall" />
					<Add option="-pg" />
					<Add option="-Og" />
					<Add option="-g" />
				</Compiler>
				<Linker>
					<Add option="-pg -lgmon" />
					<Add option="-lallegro_monolith.dll" />
					<Add option="-lnet" />
					<Add option="-lzlib" />
					<Add option="-lwsock32" />
				</Linker>
			</Target>
			<Target title="static">
				<Option output="pm" prefix_auto="1" extension_auto="1" />
				<Option object_output="o" />
				<Option type="1" />
				<Option compiler="gcc" />
				<Compiler>
					<Add option="-Wall" />
					<Add option="-pg" />
					<Add option="-Og" />
					<Add option="-g" />
				</Compiler>
				<Linker>
					<Add option="-pg -lgmon" />
					<Add option="-static-libstdc++" />
					<Add option="-static-libgcc" />
					<Add option="-static" />
					<Add option="-lallegro_monolith-static" />
					<Add option="-ljpeg" />
					<Add option="-ldumb" />
					<Add option="-lFLAC" />
					<Add option="-lfreetype" />
					<Add option="-lvorbisfile" />
					<Add option="-lvorbis" />
					<Add option="-logg" />
					<Add option="-lphysfs" />
					<Add option="-lpng16" />
					<Add option="-lzlib" />
					<Add option="-ldsound" />
					<Add option="-lgdiplus" />
					<Add option="-luuid" />
					<Add option="-lkernel32" />
					<Add option="-lwinmm" />
					<Add option="-lpsapi" />
					<Add option="-lopengl32" />
					<Add option="-lglu32" />
					<Add option="-luser32" />
					<Add option="-lcomdlg32" />
					<Add option="-lgdi32" />
					<Add option="-lshell32" />
					<Add option="-lole32" />
					<Add option="-ladvapi32" />
					<Add option="-lws2_32" />
					<Add option="-lshlwapi" />
					<Add option="-lnet" />
					<Add option="-lwsock32" />
				</Linker>
			</Target>
		</Build>
		<Compiler>
			<Add option="-Wall" />
			<Add option="-pg" />
			<Add option="-Og" />
			<Add option="-g" />
			<Add directory="C:/mingw32/include" />
		</Compiler>
		<Linker>
			<Add option="-pg -lgmon" />
			<Add directory="C:/al5/allegro-i686-w64-mingw32-gcc-7.2.0-posix-dwarf-dynamic-5.2.4.1/allegro/lib" />
		</Linker>
		<Unit filename="docs/new5.txt" />
		<Unit filename="docs/new5_todo.txt" />
		<Unit filename="src/e_editor.cpp" />
		<Unit filename="src/e_fnx.cpp" />
		<Unit filename="src/e_glt.cpp" />
		<Unit filename="src/e_item.cpp" />
		<Unit filename="src/e_lev.cpp" />
		<Unit filename="src/e_menu.cpp" />
		<Unit filename="src/e_nev.cpp" />
		<Unit filename="src/e_nlv.cpp" />
		<Unit filename="src/e_pde.cpp" />
		<Unit filename="src/e_sel.cpp" />
		<Unit filename="src/e_sliders.cpp" />
		<Unit filename="src/e_special.cpp" />
		<Unit filename="src/n_client.cpp" />
		<Unit filename="src/n_client.h" />
		<Unit filename="src/n_network.cpp" />
		<Unit filename="src/n_network.h" />
		<Unit filename="src/n_packet.cpp" />
		<Unit filename="src/n_packet.h" />
		<Unit filename="src/n_server.cpp" />
		<Unit filename="src/n_server.h" />
		<Unit filename="src/pm.h" />
		<Unit filename="src/yfilecom.cpp" />
		<Unit filename="src/zbullets.cpp" />
		<Unit filename="src/zcontrol.cpp" />
		<Unit filename="src/zemove.cpp" />
		<Unit filename="src/zfile.cpp" />
		<Unit filename="src/zfnx.cpp" />
		<Unit filename="src/zitem.cpp" />
		<Unit filename="src/zlifts.cpp" />
		<Unit filename="src/zlog.cpp" />
		<Unit filename="src/zlogo.cpp" />
		<Unit filename="src/zloop.cpp" />
		<Unit filename="src/zmain.cpp" />
		<Unit filename="src/zmenu.cpp" />
		<Unit filename="src/zplayer.cpp" />
		<Unit filename="src/zscrn.cpp" />
		<Unit filename="src/zsound.cpp" />
		<Extensions>
			<code_completion />
			<envvars />
			<debugger />
		</Extensions>
	</Project>
</CodeBlocks_project_file>







Having trouble with static linking

I am new to static linking, have always used dynamic with no problem.
Thought I'd try it.

 - First of all, what are the advantages of static vs dynamic?

 - Second, what extra files do I need to include with my game?

With dynamic it seems I need:
allegro_monolith-5.2.dll (15,218K)
libgcc_s_dw2-1.dll (112K)
libstdc++-6.dll (1,504K)
libwinpthread-1.dll (46K)

I don't know what static will require as I havent been able to get it working yet.


I am using:

mingw-w64
Version:7.2.0
Architecture:i686
Threads:posix
Exception:dwarf
Build revison:1

Allegro 5.2.4 (from source)

Code::Blocks 17.12


I built both the dynamic and static monolith debug release versions of allegro

The only thing I did different for static was uncheck the SHARED flag in CMake

I changed the linker library list from:
-lallegro_monolith.dll
-lzlib
-lnet
-lwsock32

to:
-lallegro_monolith-static
-ljpeg
-ldumb
-lFLAC
-lfreetype
-lvorbisfile
-lvorbis
-logg
-lphysfs
-lpng16
-lzlib
-ldsound
-lgdiplus
-luuid
-lkernel32
-lwinmm
-lpsapi
-lopengl32
-lglu32
-luser32
-lcomdlg32
-lgdi32
-lshell32
-lole32
-ladvapi32
-lws2_32
-lshlwapi
-lnet
-lwsock32

I also set these compiler flags:
Static libgcc [-static-libgcc]
Static libstdc++ [-static-libstdc++]
Static linking [-static]



My project compiles, links and runs fine with dynamic linking.
But I am getting linker errors when I try static.

There seem to be 2 things linker can't find:

fixed point routines in fmaths.inl:
C:\mingw32\include\allegro5\inline\fmaths.inl|46|undefined reference to `_imp__al_fixtorad_r'|

and opus stuff:
C:\devel\Allegro5\addons\acodec\opus.c|102|undefined reference to `op_free'|


I am lost here.  I don't know how to fix these errors.
I barely understand how I got this far...


Any advice on static vs dynamic as it applies to Allegro would be greatly appreciated.

Do I even want or need to do this?
Should I just use dynamic and not worry about static?

I needed to compile with -DALLEGRO_STATICLINK


now everything is in the executable...
pm.exe 17,084K and needs nothing else

later i may try to trim out things i dont need...


level editor les
main is good in les=1
but zfs and viewers don;t get there until i cycle with F12
probably set map var...
actually instead of running ortho, run rebuild_bitmaps()..fixed


---------------------------------------------------------
bug pop-up message viewer on linux has extra blank line at end
---------------------------------------------------------

I looked at the string and there is an extra 13 at the end
but only on linux????

I changed to read files in binary mode and it seem to work the same in both now...
no it doesn't....

what the hell is going on??

in windows \n is 10 and \r is 13

it look like my file reading stuff uses \n (10) as a seperator

for messages why don't i just leave 126 as my newline

lets revert back...done

went back to opening in 'r' mode
now i dont do any messing with converting, i just leave 126 as my newline
works same in linux, but now I get ^ at end of text

when I load text, ignore 13...

this seems to work now...


lets look at the editor..its good too...

this is all done



when players health is clamped past 100 it generates a - health display
fixed....







i'm losing keypresses
like F12 key up...
in control i'm trying to filter multiple resize events
is it needed in linux...yes..

redid the control loop, seems to work good now...



can't quit demo mode
fixed



icons...

what does allegro say...

in windows I have one for the window and in the taskbar

I made a file called icon.rc
#include <windows.h>
allegro_icon  ICON  bitmaps/pm.ico
added it to my project and that's literally all it took!!!

what about linux...

the function:
al_x_set_initial_icon(tmp);
is supposed to be called before you create the display
need to include:
#define ALLEGRO_UNSTABLE
#include <allegro5/allegro_x.h>
and the fucntion will not be found on a windows system
but after all that it doesn't seem to do anything...
I made a pm.desktop file in ubuntu
you can specify an icon in that..
not sure how usefull that will be...





after playing a netgame for 3 level dones
server player is getting random moves..

this bug is hard to reproduce...


could it be something to do with re-joining after level done??


reproduced on 8  player game after a loooooooonnnnnggg time
level 12 about 50 frames in


i had logging on!!!

server log file:20180418-165728.txt
17,746 KB
313400 lines
16897 frames
/ 40 = 422 seconds
/60 = 7 minutes

log file starts at level 5
and ends on level 5 7 minutes later...
wtf??
where are the rest of my logs!!!?????

does the passcount not reset??

--------------------------

level 14 approx 100 sec or 4000 frames

20180418-185448
5,501KB
98,894 lines
4830 frames

looks like there were only 6 players that joined
player 7 did not
i have stats for player 7 at the end but no name at the top...weird

p0 i990
p1 nv59
p2 pfv
p3 e6430
p4 y510
p5 eid
p6 e6410
p7 m-4230-3


could be my log file viewer....tis...
fixed that, now I have all 7 clients

moving on...

cant see anything on the server that would explain it

looked on client nv59, but its lin and even though i copied
i had old version cause its not compiled...

i'll need to look on a windows machine..
looked on pfv...found nothing
looked on y510...found nothing

looked on e6430:
file: 20180418-185448
it looks like a server file...wtf

----------------------------------------------------------

try to reproduce again


did it again...
level 14 100 frames in
when i took player nv59 off F1 mode
20180419-043626

p0 i990
p1 nv59
p2 pfv
p3 e6430
p4 eid
p5 e6410
p6 m-4230-3
p7 y510


notes:
end of level player array on nv59
server is mode 9??
at start server is mode 2
looks like they are all like that...


p0 i990
p1 nv59 ns
p2 pfv ns
p3 e6430 ns
p4 eid ns
p5 e6410 ns
p6 m-4230-3 ns
p7 y510 ns

none are pretending to be server...

what now??

is the corruption on the server and just propogated backtop the clients?
i'm thinking thats the case...
because if it wasn't i would be getting lots of stdf corrections
and i'm not

what can i do now??

look more closely at when cdats are rx'd

nv59
got game move on 2556 from server frame 2557
that i am pretty sure he did not send a cdat for...
actually thats not true...



------------------------------------

did it again

this time all players were acting weird even after i stopped f1 modes

lev 14 frame 42-50 on pfv was where i first noticed it...
20180419-060449

nv59 log
no moves received from server that were not sent by cdat
looks like f1 fake mode was stopped at frame 921

then manual keys pressed at
1022
1031

that does not match up with what i saw...
i get no game moves received for player 1 from 925 to 1022
then 5 manaul move from 1022 to 1098
then nothing until
5 manual moves from 1272 to 1285
then nothing until 8000 with fake mode again
ended with 12 stdf corrections

i got nothing....
why is it so fucky??

should i look in game moves??
compare server and client?

not until moves gets to 16000 or so on level 14


got another
level 14 around 40-50
look in game moves

on m-4230-3 at frame 1576 stopped f1 mode
then only got a few manual keys
1607
1651
1689
1710
1734
1783
so there should be no player 1 entries in game move after that
i don't see any on the server's game move





tried again this time only level 13 then 14

did not happen until 180 sec into game

what is getting counted up to???

game moves look identical

is it because how i am reading from the game moves array....

how can i check this...


what reads the game move array...

proc_game_move()
run once per frame
uses to iterate and or search



and this is run once per frame for each player

// common for all players;  get controls from game_move
int found = 0;
for (int g=game_move_entry_pos; g>0; g--)  // look back from entry pos
   if ((game_moves[g][1] == 5) && (game_moves[g][2] == p)) // find first that matches type and p
      if (game_moves[g][0] <= passcount) // check to make sure its not in the future
      {
         found = 1;
         set_controls_from_comp_move(g);
         game_move_current_pos = g; // for savegame running only
         g = 0; // break out of loop
      }
if (!found) clear_keys(p); // if no match found


game_move_entry_pos


there is a global, and there is also one in players1 struct

53 matches in total..

i should un ambiguate this....

int game_move_entry_pos; (global variable)
- used to keep track of the entry point of the game move array

when a new game move is put in the array this is used
there should only be one way a new game move gets put in the array
add_game_move()
server calls it 6 time..
loop calls it twice when loading annd starting a new level
control call it twice
once for level done
once in single player local control

int game_move_entry_pos; (global variable)
- also used as a start point when reverse searching game_move array
like in proc_game_move() and when player gets move from game array

when do i reset it..


I THINK I FOUND SOMETHING!!!


if (start_mode != 2) // skip this when start_mode == 2 ; run game
{
   // reset game_move array
   for (int x=0; x<10000; x++)
      for (int y=0; y<4; y++)
         game_moves[x][y] = 0;
   game_move_entry_pos = 0;


i am only erasing the first 10,000 entries.....
its actually 1,000,000 now

10,000 / (7 moves per frame * 40 frames per second)
= 35 seconds

1,000,000 / (7 moves per frame * 40 frames per second)
= 58 minutes (at max keypresses per second)

log file name to have level and hostname..done

client log file to have full player array at end...done

start of log file after level done to have header with
hostname and player array..done

change game move logging (which is client only)
tag the logged move with the player it is for...
right now its tagged with the active local player...



what is client sync error that keeps showing up on clients?
when a client gets game moves with passcounts in the past
that will never be processed
its bad, but stdf will fix it..
lets not have that show, except in debug overlay..done



---------------------------------------------------------
in order for save game to play back correctly
they need to have the same values for pbullets, etc...
---------------------------------------------------------
save as 3 ints at start of gm
restore after by loading config
modified gm and txt save
modified gm load..
modified existing demos
added 1 5 1...
in demo mode and run game restore after...done
this should be done



make some automated post build setup stuff...

make a folder called pm_win_release

can i do it from the command line..
all i really want to do is copy stuff...

made a windows batch file that does what i want....

to make a windows release...

set version number in code and in help file
define pm_release

compile the project with win_static_release build target
run the batch file
zip and rename

how can I static build in linux
too complicated...

compile
run bash file
compress

make some more stand alone text files, like
setting up dev env on win and lin



death animation??
enemies have them, why not for player??

editing timeset with gimp

image->configure grid
view-> show grid
view-> snap to grid
view-> snap to canvas edges

file->overwrite (save back in same format)

to make a proper death animation seq
it will have to be for each player's color ....

what if I just do a shrink, rotate, and draw item disapear ans...

where would I do this??

at the end of player move, do the shrink and rotate
in draw_player() superimpose the item disapear thingy
done...



files still not added (probably never...)
- e_bitmap
- e_guifnx

I just realize I have no way of setting blocks drawable
copying and moving blocks
or doing anything with animation sequences

I could probably make some of e_bitmap work...

like select bitmap and animation sequence..

i made select bitmap and animiation work
but no link to them...

make select bitmap, coopy bitmap accsesiable from animation

also add save...

done...now link to it in editor...done



re-write help file
font and credits..done
screen mode..done
in game function keys..done
commandline..done
history update..done
installing..done
linux..done
add pixel_sub font credits..done



---------------------------------------------------------
what are my difs that happen every frame??
---------------------------------------------------------
tested and found a dif when other player joined and color was updated
also got archwag: type 3 difs
Ei[][1]  off by 5
Ei[][5]  off by 5
Efi[][0] // once  (x)
Efi[][1] // many  (y)
its usually this pair
Ei[][5]  off by 5
Efi[][1] off by .5, 1 , 3...

played a huge long netgame and they don't happen every frame...
actually quite infrequently....





add source available on request...
license: none
just a copyright notice...


what version number? 7.0


trying other linux os's
linuxmint-18.3-cinnamon-64bit.iso

missing: libopenal.so.1

copied from m-4230j

what if i recompile allegro on m-4320
to disallow open al
and redo all that...
or I could just distribute libopenal.so.1...
I recompiled the game so I don;t need the file now.

title on main menu screen is cut off when text is too wide?
only on cinnamon mint??

has max size as 8192
and is creating same size as other one

4865 violet missing V and !
4888 mauve  missing !
4767 bluey  missing !
6777 reddy  missing !
4219 pink   good
4335 taan   missing !
5213 orange missing O and !
5136 purple missing P and !
5088 forest missing F and !
4089 red    good
4874 green  missing !
4444 blue   missing !
4462 aqua   missing !
5164 yellow missing Y and !
4600 white  missing !

fixed by changing size of title bitmap..
old was max bitmap / 16
new is max bitmasp / 20

now mint works great....



updated windows version to 7.01, now with demo files!!!

updated linux version to 7.01,
now updated allegro libary that dosent require png support...


help screens width when changing les..fixed

fixed final_wrapup()
now hopefully wont die as much in linux


make the releases...
put on allegro.cc...
...
profit?


new license (zlib)

change help.. done

add license.txt.. done

make 7.03 release for win and lin...done



crashes on exit in win 10

try removing all bitmap destrying in final wrapup

also remove:
al_destroy_event_queue(event_queue);
al_destroy_display(display);

also remove complile optimizations


seems crash free on win 10 exit now...
linux version exits good too...
lets make release version 7.04


rename save and run game...
to what?
save demo
run demo

the best way to do that is to use the logging options
because as soon as a level ends, its too late to save it anymore
what if i remove save game completely?
its only use is when you stop a game mid-level and want to save...
just rename them for now..




When archwag y speed is set to 9 (max) they fall through floors...

found the bug!!

Ei[EN][5] +=5; // gravity

// this line is wrong!!!!
if (Ei[EN][5] < -160) Ei[EN][5] = -160; // terminal velocity

//fixed
if (Ei[EN][5] > 160) Ei[EN][5] = 160; // terminal velocity


now are all my demos going to be fucked?  probably any that used archwag...

dl_01 (pretty short anyway) kill it
dl_02 (pretty short anyway) kill it

dl_13 no archwag, good keep
dl_14 still good keep
dl_15 doesnt look good kill it

24 has a million arch wags, needs to be redone
26 doesn't work
27 bad
29 bad

30 good
33 good

zm21...bad  :(


after all these are the one I can keep


redid some demo levels, now I have:
13
14
20
23
24
26
30
33


new default keys:
arrows, x, z

p0_up_key=84
p0_down_key=85
p0_left_key=82
p0_right_key=83
p0_jump_key=24
p0_fire_key=26
p0_menu_key=59


20180508
copy in zfs has rect 1 block to big in x and y...fixed

20180508
adding new enemies erases last...wtf
only after copy paste enemies in zfs??
i broke something in level 42
now any enemy that I add either from draw_item copy paste or selection window
erases the last enemy...why??
bug in code in editor line 1160
should be:
int c = get_empty_enemy(); // get a place to put it
not:
int c = get_empty_item(); // get a place to put it
bug first appeared 20180401
fixed...



Make a way to do "new level" in level editor

right now what I do is:
- load level (optional)
- save level (and choose filename that doesn't exist yet)
- go to zoom full screen
- select entire level
- click clear

add a menu item 'new level'
- prompts you for a filename to save
- clears level and saves as new filename

made the menu item

made erase_level_data() a seperate function and call from
load_level() and initial_setup()

now it goes like this...

if (al_show_native_message_box(display, "New Level", "Clicking OK will create a new blank level", NULL, NULL, ALLEGRO_MESSAGEBOX_OK_CANCEL) == 1)
{
   zero_level_data();
   draw_big(1);
   update_editor_background();
   al_flip_display();
   save();
}
load_level(level_num, 0); // blind load

seems to work just like I want...call it done


make a function that serially reads keys to call debug functions..

while game running:
STON  speed test on
STOFF speed test OFF

while level_editor_running:
SPLADJ  spline adjust
SPLTEST spline test

while not game running
LOGVIEW run the logfile viewer


if ima_client
FAKEKEY toggle

does it work with CAPS?? ..NO

done...


new level does not blank the number of lifts...fixed

new level has bad pmsg data
fixed method of declaring pmsg pointer and freeing and setting to NULL


Should I make pmsg not have clear center?? yes...


i messed with pmsg and now I get crashes and I'm not sure why

this was the code used to erase level data..

if (item[c][0] == 10) free (pmsg[c]);
i didn't like it because it didn't reset the pointer to NULL

I replaced it with:
if (pmsg[c] != NULL)
{
   free (pmsg[c]);
   pmsg[c] = NULL;
}

and then just:
free (pmsg[c]);
pmsg[c] = NULL;

because if it's NULL, free() should not do anything

I get random crashes and I don't like it, so I went back to the original plus this:

if (item[c][0] == 10)
{
   free (pmsg[c]);
   pmsg[c] = NULL;
}



trakbot initial direction button works, but the rotated display in enemy viewer is wrong...fixed

sel outline rect too small when at rl edges..fixed

make my webpage part of the sources

re-arrange levels and move less fun ones to the end...

I want to have a very solid set of levels with no duds

these are lame and should be segregated...

5
6
7
8
9
10
11
12
15
16
18
19
40

what if I had an overiding script that chose the order of levels...

start by moving lame ones to 50++


did a lot of that...

need to make the demo's line up


what if I gave all my levels names like anything.pml

then I made an array of playable levels
that would end my renaming bullshit



hard code into the program:
for each:

filenames
title
description


make a playlist of levels

int level_playlist[400]

this gets iterated through when playing
and is used by visual_level_select()

level_num is an index into this

how about do this, but still use numbers for levels

menu item "level set"
LEVEL SET:TRAINER
LEVEL SET:MAIN
LEVEL SET:EXTRA
LEVEL SET:ALL



This is what I actually did.

I made 3 levels that I call trainers and moved them to 90, 91, 92

I made a warp there and back from level 1

I think it works good enough...

made some more changes to the levels and then are looking good.

1 - trainer select
2-24 main levels
50-64 extra levels
90-93 training levels

20180514 new commit

auto create dir sel, like logs...done


sometimes I see trails in level_buffer when stimp/stamp or screen change
hard to reproduce..
re-did get new background to do full or region only
did a redraw at start of stamp
also slowed down stimp and stamp to make more visible
trails during stamp are good


when stimp and game zoom shows lots of the level, it doesn't line up

its like stimp and stamp expect the game position to be more left than it is




stimp and stamp have code with hystersis window like get_new_screen_buffer()

make that common??


what is found out by either function?
in get new background: WX, WY, SW, SH, sbx, sby, sbw, sbh


in stimp and stamp I just patched in an offest like this:

   // offset if entire level is smaller than screen
   int sbw = SCREEN_W-bw*2;
   int sbh = SCREEN_H-bw*2;

   // how big is the entire level after scale factor is applied?
   extern float scale_factor_current;
   int sls = (int) ((float)2000 * scale_factor_current); // sls = scaled level size

   // is the entire level smaller than the screen buffer width?
   if (sls < sbw)
   {
      int a = sbw - sls; // how much smaller?
      px_final += a/2;

   }
   // is the entire level smaller than the screen buffer height?
   if (sls < sbh)
   {
      int a = sbh - sls; // how much smaller?
      py_final += a/2;
   }

works now...

cursor height in text editor

draw lift..good
server name good
p message..fixed



fix demos

old demos from version 7.04


9
10
12
13
14
16
17
zm_11 chopped to 200s or 8000 frames

---done

commit done
made an old style backu too...

when run demo stimp of wrong level..fixed
cleaned up function prototypes
20180517 commit

working on cleaning up pm.h

pm.h has all function definitions listed by files
and sorted through

next I should work on global variables... I have a lot of them...


the beginning of main, where they are declared,
should mirror pm.h where they are externed

also remove lots of not used ones

also move all declarations from other source files to main

I have 500 lines of extern variables!!!

tmty
tmtx
position of text above the map on menu screen_msg
used in draw_level
set in set_map_var

I also have:
menu_map_x
menu_map_y
menu_map_size

I should use these get the text position and then get rid of tmtx and tmty
step 1
use them in draw level
now search and get rid of  tmtx and tmty done...


now how about md
used only to to make mx
mx is used a lot
made md local to set map var
md is gone now, local only to set_map_var

int map_double; // level editor map double
not used, removed...

tmy is the top_menu y_pos

always set to 10, never anything else
used to set mx = tmy + 130;
make that constant..
tmy is gone...

float steps is gone...

mx, my
what are they used for?
mx is used a lot locally
replace with smx if locally used
down to 89
turns out almost all my and my were local...
i kept a lot of them, just killed the extern ones
mx and my are not global anymore...

txc is used for the center of the right hand side panel in level editor...keep

that has cleaned up lots...

what is next?

group globals by function and make sure main and pm follow same format...

make item_name and enemy_name the same

both


menu_setup for game in zmenu

text_setup for level editor in e_menu

make them common...

both use global_string[9]

le uses 5 and 9
gm uses 3, 4, 7, 8, 9

make le use 6 instead of 9..done
move code from ts to ms done
remove e_menu.cpp from project...done
make enemy_name like item_name
replace ei_type_desc with enemy_name
6 used for lift pop up menu?? need to move editor menu to 2?
done...



4:30 AM

main
300 sorted
200 not

pm
550 sorted
200 not

5:30
400 sorted
100 not

pm
625 sorted
125 not

wx and wy are used 34 times
mostly as the origin block on the main level editor..


6:40
main 20 not sorted
pm same...

20180518 commit...

level_header is used in filecom only
uses only 3, 4, 5 for num item, enemy, lifts
made local

I am finished cleaning up pm.h

now I have approx 350 globals, but they are all grouped by function
and match the declarations in main

code stats:
35 files
19826  code only
 5574  empty lines
 3905  comment lines
 3397  code and comment
32702  total

27128 total - empty
23233 total - (empty + comment only)


put log file viewer in logging menu..done

what if I add PG_UP and PG_DOWN to menu?
I would make navigating long menus easier.....done

text center in level editor is not right...
moved where txc is set to after where db in set..fixed

title obj for item not centered..fixed

raise text in color select 1 pixel...done

show door type button better...only show in title at full size..done

I think I'm ready for a new version release

I should make a checklist of all I need to do:

- make sure version string is incremented at start of initial setup
- change version in help file

- make sure linux version works

something (i'm looking at you git) changed the linux line endings to windows
op win
pml lin
lin_make_release win
readme_linux lin

log file viewer crashes hard on linux
never even runs...
didn't crash the 2nd or 3rd time...
PDE text for Trakbot says wall climber
too many lines for switch and flapper door
fixed PDE text...
need to make it look good on linux with line endings...done

compile lin version and make tar.gz
compile win version and make zip

upload to itch.io




- define RELEASE in pm.h






------------------------
20180523

Refactoring....


I need to sort out how the three tile bitmaps get load and such.....

right now its spread across too many places....done

now all 3 are load and initialy created in load sprit
only load sprit is called from main

recreate bitmaps destroys all sub bitmaps ane re-creates...


why is tilemap created in load_sprit, but ptilemap and dttilemap are not ???

this is a mess and should be straightened out...

make tilemap, ptilemap and dtilemap local to load sprit only.
all they do is create the M_ versions that need to be global...or do they??

fix this...



-------------------------------------------------------------------------------
these bitmaps are created when 'create_bmp()' is called from 'init_screen()'
this is the only time that 'create_bmp()' is called...

tilemap = al_create_bitmap(640, 640);
ptilemap = al_create_bitmap(380,320);
dtilemap = al_create_bitmap(160,640);

level_background = al_create_bitmap(2000,2000);
level_buffer = al_create_bitmap(2000,2000);

M_tilemap = al_create_bitmap(640,640);
M_ptilemap = al_create_bitmap(380,320);
M_dtilemap = al_create_bitmap(160,640);



-------------------------------------------------------------------------
in 'rebuild_bitmaps()'
M_tilemaps are drawn to tilemaps
sub_bitmaps are created / recreated from tilemaps


-------------------------------------------------------------------------
in 'load_sprit()'
tilemaps are loaded from file
M_tilemaps are created from tilemaps
rebuild_bitmaps()' is called



fill_door_bitmap() and fill_player_bitmap() are not called
so I commented them out


to do:

make load_sprit not create local copy of tilemap....done
make load_sprit only load M_, then call rebuild_bitmaps();

I tried to load M_ directly, but for some reason,
I need to load as video bitmap then convert alpha and store in M_


I would like to rename:

l2000 to level_background..done
memory_bitmap to tile...done
player_bitmap to player_tile...done
door_bitmap to door_tile..done

rename load and save sprit to load and save tiles..done





what is not used:

void test_window_size_and_pos(void) // never used...move to old...

// only declared and externed, never used.. removed
int disp_x_full = 0;
int disp_y_full = 0;
int disp_w_full;
int disp_h_full;

// last screen pos, to tell if it changed -- does not need to be global!!
int l_spx;
int l_spy;

what is saved to config:
disp_x_wind
disp_y_wind
disp_w_wind
disp_h_wind
fullscreen


renamed les to display_transform_double...done

renamed set_ortho() to set_display_transform()..done

after death, trails show on undrawn level background..fixed


----------------------------

Do I have to re-create all my tile sub bitmaps every time I rebuild bitmaps?
No, if I just reload the parent bitmaps the subs do NOT need to be re-created...done




trimmed down the number of calls to rebuild_bitmaps()

actually its called a lot more often that than.... why???
3 time in proc screen change

1 time in filecom after load_tiles


2 times in menu...at start and end of menu right after auto_set_display_transform_double

1 time in control after F12 to set display_transform_double


1 time in bitmap in animation at start when display_transform_double set to 1

2 time in editor at start and end of help when display_transform_double changed

? can I just add it to auto_set_display_transform_double()

? make manual set version and set it there too??


try to change the one in control...
replaced  rebuild_bitmaps();
with:
set_display_transform();
set_map_var();

bitmap..removed

add to end of auto set:
set_display_transform
set_map_var
done

find all call to this and remove rebuild_bitmaps...done
help x 2

now after all that: rebuild_bitmaps() is called only from proc_screen_change


-----------------------------------------------

do I need 'speed' to be seperate from passcount_timer_fps?

rename speed in the game to frame_speed for now, so I can tell it apart from the 150 mentions of speed

found 21 refs to 'frame_speed'
found 13 refs to 'passcount_timer_fps'

why do they need to be different?

what if I replaced all passcount_timer_fps with frame_speed??

done...

now remove:
void set_passcount_timer_fps(int x)

32 refs to frame_speed

should be done....

hopefully it didn't break anything....

-----------

sound...

why do I have lit_item and fuse_loop_playing?

do I need both??



lit_item
- set to zero in proc_sound
- set to one in proc lit rocket and bomb

used by proc_sound to continue fuse hiss...

code stats: 0524
36 files
19393  code only
 5368  empty lines
 3726  comment lines
 3376  code and comment
31863  total


-----------------

increment passcount in proc_frame_delay(), not update_animation()..done
here is how it moved in the game loop:
proc_controllers();
player_move();
proc_player_carry();
update_animation();  <- from here
enemy_move();
enemy_collision();
proc_ebullets();
proc_pbullets();
proc_player_health();
proc_sound();
proc_frame_delay();  <- to here

hope this doesn't break anything!

Rename passcount to frame_num...done

rename event to game_event...done




in proc_controller()

change
if (key[ALLEGRO_KEY_PRINTSCREEN]) key[ALLEGRO_KEY_PRINTSCREEN] = 0; // special exception to make PRINTSCREEN work
to
key[ALLEGRO_KEY_PRINTSCREEN] = 0; // special exception to make PRINTSCREEN work

also this line:

if (ev.type == ALLEGRO_EVENT_TIMER) menu_timer_wait = 0;
looks like its in the wrong spot

orig:

   while (!done)
   {
      done = 1; // default
      while (!al_is_event_queue_empty(event_queue))
      {
         ALLEGRO_EVENT ev;
         if (ev.type == ALLEGRO_EVENT_TIMER) menu_timer_wait = 0;
         if (al_get_next_event(event_queue, &ev))
         {
            if (ev.type == ALLEGRO_EVENT_DISPLAY_RESIZE)
            {
               // check to see if we have more resize events piling up
               ALLEGRO_EVENT ev2;
               while (al_get_next_event(event_queue, &ev2))
               {
                  if (ev2.type == ALLEGRO_EVENT_DISPLAY_RESIZE) ev = ev2;
                  else ret = proc_events(ev2, ret);
               }
               proc_screen_change(ev.display.width, ev.display.height, disp_x_curr, disp_y_curr, fullscreen);
            }
            else ret = proc_events(ev, ret);
         }
      }

fixed:


   while (!done)
   {
      done = 1; // default
      while (!al_is_event_queue_empty(event_queue))
      {
         ALLEGRO_EVENT ev;
         if (al_get_next_event(event_queue, &ev))
         {
            if (ev.type == ALLEGRO_EVENT_TIMER) menu_timer_wait = 0;
            if (ev.type == ALLEGRO_EVENT_DISPLAY_RESIZE)
            {
               // check to see if we have more resize events piling up
               ALLEGRO_EVENT ev2;
               while (al_get_next_event(event_queue, &ev2))
               {
                  if (ev2.type == ALLEGRO_EVENT_DISPLAY_RESIZE) ev = ev2;
                  else ret = proc_events(ev2, ret);
               }
               proc_screen_change(ev.display.width, ev.display.height, disp_x_curr, disp_y_curr, fullscreen);
            }
            else ret = proc_events(ev, ret);
         }
      }

now menu's seem to run a lot faster...fixed

make screenshots folder auto created...done
fix screenshot to use actual screen size instead of ortho doubled...done

make it so demo counter will not run when game is paused
cause when it does, paused game is lost...done

changed logo drawing to use max x or y scale instead of hypot for thickness

-------
fixed linux line ending on text files
removed license.md
edited license.txt and readme.md







i want to simplify the 2 variables used for menu timer wait in proc_controllers()

right now I use done and menu timer wait

done is used 3 time; menu_timer_wait is used 2 times

code before changes...


int proc_controllers()
{
   int ret = 0;
   int done = 0;
   int menu_timer_wait = 1;

   key[ALLEGRO_KEY_PRINTSCREEN] = 0; // hack to make PRINTSCREEN key work
   Key_pressed_ASCII = 0;

   if (!fullscreen) // detect if window was moved
   {
      int x, y;
      al_get_window_position(display, &x, &y);
      if ((x != disp_x_curr) || (y != disp_y_curr))
      proc_screen_change(disp_w_curr, disp_h_curr, x, y, fullscreen);
   }

   while (!done)
   {
      done = 1; // default
      while (!al_is_event_queue_empty(event_queue))
      {
         ALLEGRO_EVENT ev;
         if (al_get_next_event(event_queue, &ev))
         {
            if (ev.type == ALLEGRO_EVENT_TIMER) menu_timer_wait = 0;
            if (ev.type == ALLEGRO_EVENT_DISPLAY_RESIZE)
            {
               // check to see if we have more resize events piling up
               ALLEGRO_EVENT ev2;
               while (al_get_next_event(event_queue, &ev2))
               {
                  if (ev2.type == ALLEGRO_EVENT_DISPLAY_RESIZE) ev = ev2;
                  else ret = proc_events(ev2, ret);
               }
               proc_screen_change(ev.display.width, ev.display.height, disp_x_curr, disp_y_curr, fullscreen);
            }
            else ret = proc_events(ev, ret);
         }
      }
      if (game_exit) // if called from menu only do key check for active local player
      {
          clear_keys(active_local_player);
          player_key_check(active_local_player);
          function_key_check();
          if (menu_timer_wait) done = 0;
      }




new version:

menu_timer_block only and used in three places...much better

int proc_controllers()
{
   int ret = 0;
   int menu_timer_block = 1;

   key[ALLEGRO_KEY_PRINTSCREEN] = 0; // hack to make PRINTSCREEN key work properly
   Key_pressed_ASCII = 0;

   if (!fullscreen) // detect if window was moved
   {
      int x, y;
      al_get_window_position(display, &x, &y);
      if ((x != disp_x_curr) || (y != disp_y_curr))
      proc_screen_change(disp_w_curr, disp_h_curr, x, y, fullscreen);
   }

   while (menu_timer_block)
   {
      while (!al_is_event_queue_empty(event_queue))
      {
         ALLEGRO_EVENT ev;
         if (al_get_next_event(event_queue, &ev))
         {
            if (ev.type == ALLEGRO_EVENT_TIMER) menu_timer_block = 0;
            if (ev.type == ALLEGRO_EVENT_DISPLAY_RESIZE)
            {
               // check to see if we have more resize events piling up
               ALLEGRO_EVENT ev2;
               while (al_get_next_event(event_queue, &ev2))
               {
                  if (ev2.type == ALLEGRO_EVENT_DISPLAY_RESIZE) ev = ev2;
                  else ret = proc_events(ev2, ret);
               }
               proc_screen_change(ev.display.width, ev.display.height, disp_x_curr, disp_y_curr, fullscreen);
            }
            else ret = proc_events(ev, ret);
         }
      }
      if (game_exit) // if called from menu only do key check for active local player
      {
          clear_keys(active_local_player);
          player_key_check(active_local_player);
          function_key_check();
      }
      else // game is in progress
      {
         menu_timer_block = 0;






web docs:
rename events
or move out input to its own file..done
input to have key, mouse, joystick and game moves array...done


---------------
found a better way to get rid of warning like:
warning: ISO C++ forbids converting a string constant to 'char*' [-Wwrite-strings]|

previously i change all the time i called a funtion with a literal string from:
Packet("sdak");
to:
Packet((char *)"sdak");

but bamcaig said that wasn't actually correct

now I am going to redo them all by changing the function from:
void Packet(char *id) {
to:
void Packet(const char *id) {

that is the correct way.

I just changed 20 instances of Packet()
moving on...
20 x Packet()
12 PacketRead()
4 title()
30 help()
23 getxy()
5 getbox()
1 get_item()
2 ClientInit()
30 add_log_entry_centered_text()
94 add_log_entry_position_text()

all done....


what if I sort out the names for packet add and read

new...

void PacketPut1ByteInt(int b)
void PacketPut2ByteInt(int b)
void PacketPut3ByteInt(int b)
void PacketPut4ByteInt(int b)

int PacketGet1ByteInt(void)
int PacketGet2ByteInt(void)
int PacketGet3ByteInt(void)
int PacketGet4ByteInt(void)


void PacketPut1ByteInt(int b) replace 32
int PacketGet1ByteInt(void) replaced 22

void PacketPut2ByteInt(int b) replaced 3
int PacketGet2ByteInt(void) replaced 3

void PacketPut3ByteInt(int b) replaced 0
int PacketGet3ByteInt(void) replaced 0

void PacketPut4ByteInt(int b) replaced 26
int PacketGet4ByteInt(void) replaced 18


2 byte is only used for:
- play level in SJON and CJON
- specialized packet testing

I could remove the tests I put in for player num matching who...nah leave it...



what site did i use for my flowchart?



where is server_sync used..


client and server

in player1 struct


overlay
client while waiting for sync
client bottom overlay
server per client


I want to make them unique..

on client server_sync is used for display only and for adjust timer

rename that one to client_sync

add new var in player struct:client_sync
should be done....


next:

   int c_sync;
   int c_sync_min;
   int c_sync_err;

how about:

client_game_move_sync;
client_game_move_sync_min;
client_game_move_sync_err;

and

server_game_move_sync;
server_game_move_sync_min;
server_game_move_sync_err;



change client first....
make new var...
clear in player
fix in client
fix in overlay
fix in log
done

change server next....
make new var...
clear in player
fix in server
fix in overlay
done

still seems to work

























rename state correction stuff


stdf is the name of the buffer used by client to build chfd from packetsize
I could call it client_state_buffer

the array used to track if all the pieces have arrived: chdf_pieces
rename to client_state_buffer_pieces

client1_chdf is the clients base state
rename to client_state_base

client1_chdf_id is the frame num of the clients base state
rename to client_state_base_frame_num


old:
extern char chdf[STATE_SIZE];          // for client chdf building
extern int chdf_pieces[16];
extern char clientl_chdf[STATE_SIZE];  // last ack state for diffing
extern int clientl_chdf_id;            // frame_num id

new:
extern char client_state_buffer[STATE_SIZE];  // for client chdf building
extern int  client_state_buffer_pieces[16];   // to mark pieces as received
extern char client_state_base[STATE_SIZE];    // last ack state for diffing
extern int  client_state_base_frame_num;      // frame_num id

chdf to client_state_buffer..done
chdf_pieces to client_state_buffer_pieces..done
clientl_chdf to client_state_base..done
clientl_chdf_id to client_state_base_frame_num


old:
extern char dif[STATE_SIZE];
extern int dif_id[2]; //   (0 = src, 1 = dst)

new:
extern char client_dif[STATE_SIZE];
extern int client_dif_src;
extern int client_dif_dst;

server also uses dif....
client only uses dif_id

ok do this instead:
new:
extern int dif_src;
extern int dif_dst;

leave dif alone

dif_id[0] to dif_src..done
dif_id[1] to dif_dst..done



old:
// server chdf
extern char client_chdf[8][2][STATE_SIZE];
extern int client_chdf_id[8][2]; // frame_num id

new:
extern char srv_client_state[8][2][STATE_SIZE];
extern int  srv_client_state_frame_num[8][2];

client_chdf to srv_client_state..done
client_chdf_id to srv_client_state_frame_num..done


final variable list:

#define STATE_SIZE 104640
// server's copies of client states
extern char srv_client_state[8][2][STATE_SIZE];
extern int srv_client_state_frame_num[8][2]; // frame_num id

// local client's states
extern char client_state_buffer[STATE_SIZE];  // for client chdf building
extern int  client_state_buffer_pieces[16];   // to mark pieces as received
extern char client_state_base[STATE_SIZE];    // last ack state for diffing
extern int  client_state_base_frame_num;      // frame_num id

extern char dif[STATE_SIZE];  // used by client and server
extern int dif_src;  // client only
extern int dif_dst;  // client only


now I need to come up with a different term for the variables that make up a state

I have funtions called:
void chnk_to_state(char* b);
void state_to_chunk(char* b);

but what I used to be call state needs a new name: game_vars

new names:
void state_to_game_vars(char* b);
void game_vars_to_state(char* b);

chnk_to_state to state_to_game_vars..done
state_to_chunk to game_vars_to_state..done

these are good:
void reset_states(void);
void game_vars_to_state(char * b);
void state_to_game_vars(char * b);


these should all have chunk changed to state:
void get_chunk_dif(char *a, char *b, char *c, int size); // server only
void apply_chunk_dif(char *a, char *c, int size); // client only
void show_chunk_dif(char *a, char *b); // client only
done...


now the packet names....

chdf and chak

stdf and stak

did a global replace of chdf to stdf -- hundreds... hope it didn't break to much...

now chak to stak..done..only a few

lets see how broken it is....
I still seem able to play a 2 player game...

well now that everything has been renamed, lets move on with the documenting....

------------------------------
bug
-----------------------------

end of level on netgame???

seem to have trouble joining on new level...

client keeps getting difd from 0-20, 0-25 etc
but its base is 2 so it cant apply them

finally at frame 120, client resets base to 0 and applies dif

but its too late beacuse the server has already dropped the client
for no sdat_rx for 100 frames



when does base reset to zero? never mind


also client is approx 10 frames behind client
this is why chdf is never applied
client does not receive any sdat until 108
the moves it gets are the server drop moves!!

what controls when server send sync sdat?


if I press keys on the server after level done and force sdats to be sent, join works
if not, it times out


why is server not sending sync sdat's???


try removing else....that fixed it...
it was never doing the second block because the first one was true (client need more data)
but the first one was not sending more data beacuse of the duplicate blocker

void server_send_sdat(void)
{
   for (int p=1; p<NUM_PLAYERS; p++)
      if (players[p].control_method == 2)
      {
         if (players1[p].game_move_entry_pos < game_move_entry_pos) // client needs more data
         {
            int start_entry = players1[p].game_move_entry_pos;
            int end_entry = game_move_entry_pos;
            int num_entries = end_entry - start_entry;
            if (num_entries > 100) num_entries = 100;

            // to prevent multiple resends of exact same data
            if ((players1[p].server_last_sdat_sent_start != start_entry) || // different start pos
               (players1[p].server_last_sdat_sent_num != num_entries))      // different num entries
            {
               players1[p].server_last_sdat_sent_start = start_entry;
               players1[p].server_last_sdat_sent_num = num_entries;
               players1[p].server_last_sdat_sent_frame_num = frame_num;

               Packet("sdat");
               PacketPut1ByteInt(p);
               PacketPut4ByteInt(frame_num);
               PacketPut4ByteInt(start_entry);
               PacketPut1ByteInt(num_entries);

               for (int x=start_entry; x<start_entry + num_entries; x++)
               {
                  PacketPut4ByteInt(game_moves[x][0]); // frame_num
                  PacketPut1ByteInt(game_moves[x][1]); // type
                  PacketPut1ByteInt(game_moves[x][2]); // data 1
                  PacketPut1ByteInt(game_moves[x][3]); // data 2
               }
               ServerSendTo(packetbuffer, packetsize, players1[p].who, p);

               if (L_LOGGING_NETPLAY_sdat)
               {
                  #ifdef LOGGING_NETPLAY_sdat
                  sprintf(msg,"tx sdat p:%d [strt:%d num:%d]\n", p, start_entry, num_entries);
                  add_log_entry2(37, p, msg);
                  #endif
               }
            }
         }


         else if (frame_num > players1[p].server_last_sdat_sent_frame_num + 19) // send even if no data, every 20 frames for sync
         {
            players1[p].server_last_sdat_sent_frame_num = frame_num;
            int start_entry = players1[p].game_move_entry_pos;

            Packet("sdat");
            PacketPut1ByteInt(p);
            PacketPut4ByteInt(frame_num);
            PacketPut4ByteInt(start_entry);
            PacketPut1ByteInt(0);
            ServerSendTo(packetbuffer, packetsize, players1[p].who, p);

            if (L_LOGGING_NETPLAY_sdat)
            {
               #ifdef LOGGING_NETPLAY_sdat
               sprintf(msg,"tx sdat p:%d [strt:%d num:%d] (sync only)\n", p, start_entry, 0);
               add_log_entry2(37, p, msg);
               #endif
            }
         }
      }
}



--------------------------------------
end of bug


what if I remove the code that checks if packet are from who they are supposed to be?
that was never an issue...


old:

      if(PacketRead("serr"))
      {
         int sp = PacketGet1ByteInt();
         int serr_type = PacketGet1ByteInt();
         int serr_frame_num = PacketGet4ByteInt();
         int serr_c_sync = PacketGet4ByteInt();
         int serr_c_sync_err = PacketGet4ByteInt();

         if (sp != p)
         {
            sprintf(msg, "ERROR! rx serr player:[%d] does not match local player:[%d]\n", sp, p);
            printf("%s", msg);
            #ifdef LOGGING_NETPLAY
            add_log_entry2(10, p, msg);
            #endif
         }
         else
         {
            if (serr_type == 1) // error type (1 = cdat late)

            players1[p].serr_c_sync_err = serr_c_sync_err;
            players1[p].serr_display_timer = 120;

            sprintf(msg,"Error: server dropped cdat s_pc:%d  s_csync:%d  tot_err:%d\n", serr_frame_num, serr_c_sync, serr_c_sync_err);
            if (L_LOGGING_NETPLAY_cdat)
            {
               #ifdef LOGGING_NETPLAY_cdat
               add_log_entry2(35, p, msg);
               #endif
            }
         }
      }


                  Packet("serr"); // server error
                  PacketPut1ByteInt(p);
                  PacketPut1ByteInt(1); // error type 1
                  PacketPut4ByteInt(frame_num);
                  PacketPut4ByteInt(c_sync);
                  PacketPut4ByteInt(players1[p].server_game_move_sync_err);
                  ServerSendTo(packetbuffer, packetsize, who, p);




new:

      if(PacketRead("serr"))
      {
         int serr_type = PacketGet1ByteInt();
         int serr_frame_num = PacketGet4ByteInt();
         int serr_c_sync = PacketGet4ByteInt();
         int serr_c_sync_err = PacketGet4ByteInt();

         if (serr_type == 1) // error type (1 = cdat late)

         players1[p].serr_c_sync_err = serr_c_sync_err;
         players1[p].serr_display_timer = 120;

         sprintf(msg,"Error: server dropped cdat s_pc:%d  s_csync:%d  tot_err:%d\n", serr_frame_num, serr_c_sync, serr_c_sync_err);
         if (L_LOGGING_NETPLAY_cdat)
         {
            #ifdef LOGGING_NETPLAY_cdat
            add_log_entry2(35, p, msg);
            #endif
         }
      }





                  Packet("serr"); // server error
                  PacketPut1ByteInt(1); // error type 1
                  PacketPut4ByteInt(frame_num);
                  PacketPut4ByteInt(c_sync);
                  PacketPut4ByteInt(players1[p].server_game_move_sync_err);
                  ServerSendTo(packetbuffer, packetsize, who, p);









old:

      if(PacketRead("sdat"))
      {
         char tmsg[20];
         int sp = PacketGet1ByteInt();
         int sdat_frame_num = PacketGet4ByteInt();
         int start_entry = PacketGet4ByteInt();
         int num_entries = PacketGet1ByteInt();

         if (sp != p)
         {
            sprintf(msg, "ERROR! rx sdat player:[%d] does not match local player:[%d]\n", sp, p);
            printf("%s", msg);
            #ifdef LOGGING_NETPLAY
            add_log_entry2(10, p, msg);
            #endif
         }
         else
         {
            players1[p].client_sdat_packets_rx++; // total sdat packets rx'd

            // this used to be a function , client timer adjust
            players1[p].client_sync = sdat_frame_num - frame_num;
            int fps_chase = frame_speed + players1[p].client_sync - server_lead_frames;



new:
      if(PacketRead("sdat"))
      {
         char tmsg[20];
         int sdat_frame_num = PacketGet4ByteInt();
         int start_entry = PacketGet4ByteInt();
         int num_entries = PacketGet1ByteInt();

         players1[p].client_sdat_packets_rx++; // total sdat packets rx'd

         // this used to be a function , client timer adjust
         players1[p].client_sync = sdat_frame_num - frame_num;
         int fps_chase = frame_speed + players1[p].client_sync - server_lead_frames;










old:

int process_stdf_packet(void)
{
   int retval = 0;
   int p = PacketGet1ByteInt();
   int stdf_src_frame_num = PacketGet4ByteInt();
   int stdf_dst_frame_num = PacketGet4ByteInt();
   int stdf_seq = PacketGet1ByteInt();
   int stdf_max_seq = PacketGet1ByteInt();
   int stdf_sb = PacketGet4ByteInt();
   int stdf_sz = PacketGet4ByteInt();

   if (p != active_local_player)
   {
      sprintf(msg, "ERROR! rx stdf player:[%d] does not match local player:[%d]\n", p, active_local_player);
      printf("%s", msg);
      #ifdef LOGGING_NETPLAY
      add_log_entry2(10, p, msg);
      #endif
   }
   else
   {
       memcpy(client_state_buffer + stdf_sb, packetbuffer+23, stdf_sz);  // put the data in the buffer












new:


int process_stdf_packet(void)
{
   int retval = 0;
   int p = active_local_player;

   int stdf_src_frame_num = PacketGet4ByteInt();
   int stdf_dst_frame_num = PacketGet4ByteInt();
   int stdf_seq = PacketGet1ByteInt();
   int stdf_max_seq = PacketGet1ByteInt();
   int stdf_sb = PacketGet4ByteInt();
   int stdf_sz = PacketGet4ByteInt();

   memcpy(client_state_buffer + stdf_sb, packetbuffer+22, stdf_sz);  // put the data in the buffer








removed these from server:

void proc_server_check(void)
{
   for (int p1=1; p1<NUM_PLAYERS; p1++)
      for (int p2=1; p2<NUM_PLAYERS; p2++)
         if (p1 != p2)
         {
            int p1w = players1[p1].who;
            int p2w = players1[p2].who;
            if ((p1w != 99) && (p2w != 99))
               if (p1w == p2w) // we have a duplicate
               {
                  // do something here
                  sprintf(msg, "ERROR! duplicate whos for player:[%d] and player:[%d]\n", p1, p2);
                  printf("%s", msg);
                  #ifdef LOGGING_NETPLAY
                  add_log_entry2(10, 0, msg);
                  #endif
               }
         }
}


// check to see if this packet is from who its supposed to be and is valid
int check_packet_who(int p, int who, int type)
{
   if (players[p].control_method != 2)
   {
      //check if the player we received data for is an active client
      //sprintf(msg, "ERROR! rx cdat for player[%d].control__method[%d] != 2\n", p, players[p].control_method);
      //printf("%s", msg);
      //#ifdef LOGGING_NETPLAY
      //add_log_entry2(10, p, msg);
      //#endif
      return 0;
   }
   if ((players1[p].who != who) && (players1[p].who != 99))
   {
      char tmsg[80];
      if (type == 1) sprintf(tmsg, "cdat");
      if (type == 2) sprintf(tmsg, "sdak");
      if (type == 3) sprintf(tmsg, "stak");

      sprintf(msg, "ERROR! rx %s player[%d].who[%d] does not match packet who[%d]\n", tmsg, p, players1[p].who, who);
      printf("%s", msg);
      #ifdef LOGGING_NETPLAY
      add_log_entry2(10, p, msg);
      #endif
      return 0;
   }
   return 1;
}


done.....

does it still work??...yes



warps on netgame???

warp starts next level immediately
client does not even join
but then client times out and quits

is the whole level done thing too complicated?


added global int next_level

added
play_level = next_level;
in proc_level_done()

added
next_level = play_level + 1;
in item exit collision


changed warp from:
play_level = item[x][8];
start_mode = 1;

to:
next_level = item[x][8];
level_done = 1;
game_event(4, itx, ity, 0, 0, 0, 0);

now warp should be exactly like exit except for the next level




-------------------------------------

dif is not really used by server, it just uses a local variable of the same name...

i propose more renaming:

old:

extern char dif[STATE_SIZE];  // used by client and server
extern int dif_src;           // client only
extern int dif_dst;           // client only


new:
extern char client_state_dif[STATE_SIZE];
extern int client_state_dif_src;
extern int client_state_dif_dst;

---------------------------------------------------

ok now final looks like:

#define STATE_SIZE 104640
// server's copies of client states
extern char srv_client_state[8][2][STATE_SIZE];
extern int srv_client_state_frame_num[8][2];

// local client's states
extern char client_state_buffer[STATE_SIZE];  // buffer for building compressed dif from packet pieces
extern int  client_state_buffer_pieces[16];   // to mark packet pieces as received
extern char client_state_base[STATE_SIZE];    // last ack state
extern int  client_state_base_frame_num;      // last ack state frame_num
extern char client_state_dif[STATE_SIZE];     // uncompressed dif
extern int  client_state_dif_src;             // uncompressed dif src frame_num
extern int  client_state_dif_dst;             // uncompressed dif dst frame_num




------------------------------------

why do I use:
7 x memmove
7 x memset
27 x memcpy

---------------

working on join...

i want to move client_block_until_good_stdf_received(void)
to right after block for SJON rx

removed from main clinet loop:
if (frame_num == 0) client_block_until_good_stdf_received();

added right after SJON rx:
client_block_until_good_stdf_received();

done and works, even after level done

but don't I need to call it in client loop for level done rejoin?

I guess not....
client and server should have just both loaded new level, no need to wait for state.

i'll leave it in for now, so it gets called from both places













i want to clean up the init code for client, its kinda like spaghetti...
could be a lot clearer....



now:

client_init
  - client_init_driver()
  - client_init_join()
     - send CJON
     - block wait for SJON
     - client_block_until_good_stdf_received()
        - block for good state





what if I flatten it all out


client_init
  - client_init_driver()
  - send CJON
  - block wait for SJON
  - block for good state





did a lot of cleaning up the client init stuff

now:

client_init
  -ClientInit
  -check for reply
  - client_init_join()




  moved check for reply to ClientInit
rename ClientInit to ClientInitNetwork()


now:

client_init
  -ClientInitNetwork()
  -client_init_join()


much better....

rename ServerInit to ServerInitNetwork() also...

renamed server and client exit also
now called after every call to server init (3 times each in main)


client exit takes care of resetting player stuff like:

   ima_client = 0;
   players[0].active = 1; // local_control
   active_local_player = 0;


no need to do it anywhere else, like if join fails...

change init_player(p,1)

to set inactive, not active....

client_init_join() is looking good

void client_block_until_good_stdf_received(void) is looking good.

its been coming along nicely......



redo where server chooses new client color...

   int color = req_color;  // try to use requested color, unless already used by another player
            int color_used;
            do
            {
               color_used = 0;
               for (int q=0; q<NUM_PLAYERS; q++)
                  if ((players[q].active) || (players[q].control_method == 9) || (players[q].control_method == 2))
                     if (color == players[q].color)
                     {
                        if (++color > 15) color = 1;
                        color_used = 1;
                      }
            } while (color_used);


make a function called:

int is_player_color_used(int color);


int is_player_color_used(int color)
{
   for (int p=0; p<NUM_PLAYERS; p++)
      if ((players[p].active) || (players[p].control_method == 9) || (players[p].control_method == 2))
         if (color == players[p].color) return 1;
   return 0;
}

   // try to use requested color, unless already used by another player
   while (is_player_color_used(color)) if (++color > 15) color = 1;

hell also fix why color and bitmap index are off by 1
shifted all my player bitmaps up one in tilemap
lose bitmap, only use color...
its in player1 struct whicg I dont want to mess with the size of
i'll just rename it there to find all refs then change them to use color instead
done...

now only color, no bitmap index...yay!!!


int who is a static int in server loop...

should I make it a global? no

who uses it?

CJON yes
stak no
sdak no
cdat no




rename a bunch of client and server functions...

move packet processing to one function for each packet type..


should I remove #ifdefs for logging...yes...


one file at a time..

client...done

bandwidth???
// gets the values in send and rx functions
#ifdef NETPLAY_bandwidth_tracking

leave bandwidth for now, do all others


server...done

now search for

#define LOGGING..done
#define LOGGING_NETPLAY..done
#define LOGGING_NETPLAY_JOIN..done
#define LOGGING_NETPLAY_client_timer_adjust..done
#define LOGGING_NETPLAY_cdat..done
#define LOGGING_NETPLAY_game_move..done
#define LOGGING_NETPLAY_sdat..done
#define LOGGING_NETPLAY_sdak..done
#define LOGGING_NETPLAY_stdf..done
#define LOGGING_NETPLAY_stdf_all_packets..done
#define LOGGING_NETPLAY_stdf_when_to_apply..done
#define LOGGING_NETPLAY_show_dif1..done
#define LOGGING_NETPLAY_show_dif2..done
#define LOGGING_NETPLAY_bandwidth.. only one in void process_bandwidth_counters(int p)..done

kill all these defines....done

// not this one
#define NETPLAY_bandwidth_tracking.. 6 in packet tx and rx fnx and  process_bandwidth_counters(int p)



still seems to work...


----------------------
20180518 code stats:
----------------------
35 files
19826  code only
 5574  empty lines
 3905  comment lines
 3397  code and comment
32702  total

27128 total - empty
23233 total - (empty + comment only)

----------------------
20180605 code stats:
----------------------
39 files
18830  code only
 5177  empty lines
 3253  comment lines
 3333  code and comment
30393  total

25416 total - empty
22163 total - (empty + comment only)




main

NET_CONN *ListenConn = NULL;                         // listening connection
NET_CONN *ClientConn[MAX_CLIENTS] = {NULL, };        // array of connections for each client

NET_CHANNEL *ListenChannel = NULL;                   // listen channel
NET_CHANNEL *ClientChannel[MAX_CLIENTS] = {NULL, };  // array of channels for each client

int ClientNum = 0;

NET_CONN *ServerConn = NULL;
NET_CHANNEL *ServerChannel;


pm.h

// libnet client
#define MAX_CLIENTS 32
extern int ClientNum;

// libnet client TCP
extern NET_CONN *ListenConn;
extern NET_CONN *ClientConn[MAX_CLIENTS];

// libnet client UDP
extern NET_CHANNEL *ListenChannel;
extern NET_CHANNEL *ClientChannel[MAX_CLIENTS];

// libnet server TCP
extern NET_CONN *ServerConn;
// libnet server UDP
extern NET_CHANNEL *ServerChannel;

fixed this to only be in n_server and n_clinet
they are never refernced oytside these files...done




all the times when I am trying to break out of a loop with F11 or ESC I need to call proc_controllers()

I can only think of 2 times...
when client blocks waiting for SJON
when client blocks waiting for initial state

done....



make a way to have only one copy of the lhs panel with all the links..

what if I make my own tag that does nothing but mark where this is
then I can search and replace in files for anything in between these tags...

<mdw_lhs_nav>   </mdw_lhs_nav>

what language should I use to do this?
perl?

activeperl 5.24.3

# this updates the left hand side navigation panel in all html files in the current directory

# get the new text
open(MDATA, "<lhs_nav.html");
my $b = do {local $/; <MDATA>};

# iterate all .html files
@files = <*.html>;
foreach $file (@files)
{
   # print $file . "\n";

   # open the file to replace text in
   open(DATA, "<", $file);
   my $a = do {local $/; <DATA>};

   # replace the text
   $a =~ s/<mdw_lhs_nav>(.*)<\/mdw_lhs_nav>/<mdw_lhs_nav>$b<\/mdw_lhs_nav>/s;

   # save the changes to file
   open(DATA, ">", $file);
   print(DATA $a);
}












make an automated way to make a link list at the top of every file
like each header <mh7>
will have an anchor tag and be in a list at the top of the file

I will need to redo all of my mh7's as anchors


make a script to show all mh7 tags by filename...


this is how I do it in index.html:
<a name="description"></a>
<br><mh6>Description:</mh6>

then a link to that looks like this:
<a href="index.html#description" target="_top">Description</a>

this is how it looks in the other files:
<br><mh7>Overview</mh7>


change mh6 to mh7
the only place mh6 is used is in index...change them all...
done and removed mh6 from css

now only mh7...



now I have a list of mh7 tags in each file...


i should change each tag to a common format:

<mh7>Overview<a name="Overview"></a></mh7>

test this...

do it like this instead:
<br><a name="Overview"></a><mh7>Overview</mh7>

Yes...do them all like this...

can I automatically do it???


still not sure...

I want the whole thing wrapped in a unique tag

why? I dont plan on modifying it, just making auto TOC from it

can I use spaces in my names??yes


manually make them all look like this:
The name exactly the same as the anchor

<a name="Features"></a>
<mh7>Features</mh7>

do it in index first...
works good there.

copy all back to main dir on desktop...

now manually edit all mh7 tags...

do this in main dir...

blank.html - none

-----------------
display.html..done
-----------------
Global variables
Creating the Display
Process Screen Change
Display Transform Double
Detecting Window Move

-----------------
events.html..done
-----------------
Overview
Processing the event queue
Processing events
Handling multiple resize events

-----------------
game_moves_array.html..done
-----------------
Overview
The Game Moves Array
Netgame
Special Game Moves

-----------------
index.html..done
-----------------
Description
Demo Video
Features
Created by
Created with
License
Supported Systems
External Links
Older Versions
History

-----------------
input.html..done
-----------------
Overview
Keyboard Input
PRINTSCREEN hack
Mouse Input
Joystick Input
Bindings vs Controls

-----------------
level_array.html..done
-----------------
Overview
Drawing the Level Array
Rebuilding level_background
Drawing Sequence in the Game Loop
Get New Background
Get New Screen Buffer
Scale Factor

-----------------
lhs_nav.html
-----------------

-----------------
logo.html..done
-----------------
Demo Video
Overview
Splines
Setup of points on the grid

-----------------
netgame_config.html..done
-----------------
Overview
Settings you probably shouldn't change!

-----------------
netgame_join.html..done
-----------------
Overview
Client sends CJON
Server receives CJON and replies with SJON
Client blocks until it receives SJON
Client blocks until it gets initial state from server
Client chase and lock
Packets used for join

-----------------
netgame_main.html..done
-----------------
Overview
Game Move Sync
Client sends control change
Server receives control change
Server sends game move data to clients
Client receives game move data from server
Timing
Control lead frames
Player numbers
Player's control methods
Level Done

-----------------
netgame_packets.html..done
-----------------
Overview

-----------------
netgame_state.html..done
-----------------
Overview
Game state variables
Global variables for state correction
How a client gets a new state from the server
How a client applies the new state
How the server sends a new state dif to a client
Packets used for state correction

-----------------
netgame_status.html..done
-----------------
Overview
server_sync
client_sync
server_game_moves_sync
client_game_moves_sync

-----------------
sound.html..done
-----------------
Overview
Sound Setup
Mixer Volume Controls
Theme Music
Sound Effects
Sample Delay
Processing the Hiss Sound

-----------------
tiles.html..done
-----------------
Overview
Creating Tile Bitmaps
Loading Tile Bitmaps
Rebuilding Tile Bitmaps

-----------------
timers.html..done
-----------------
Overview
Menu Timer (mnu_timer)
Second Timer (sec_timer)
Frames per Second Timer (fps_timer)
Speed adjust during netgame


now that all of this is done I can get back to making my toc's



perl script: make_toc.pl

# makes a toc using <mh7> tags
# inserts the toc between <mdw_file_toc> tags

# iterate all .html files
@files = <*.html>;
foreach $file (@files)
{
   print "\nfile:$file\n";
   print "---------------------------------\n";

   # open the file
   open(DATA, "<", $file);
   my $a = do {local $/; <DATA>};

   # find <mh7> tags
   my @matches;
   push @matches, $1 while $a =~ /.*(<mh7>.*<\/mh7>)/g;

   # multi line toc we are going to insert
   my @toc;

   foreach (@matches)
   {
      #print $_ . "\n";

	  # strip tags
	  $_ =~  /<mh7>(.*)<\/mh7>/;
      $_ = $1;
      print $_ . "\n";

      # add single line in toc
      $toci = "<a href=\"$file\#$_\" target=\"_top\">$_</a>\n";
	  push @toc, $toci;
   }
   #print @toc;

   # replace the toc between <mdw_file_toc> tags
   $a =~ s/<mdw_file_toc>(.*)<\/mdw_file_toc>/<mdw_file_toc> @toc<\/mdw_file_toc>/s;

   # save the changes to file
   open(DATA, ">", $file);
   print(DATA $a);
}


tag in source files...

<mh3><hr></mh3>
<mh8>Tiles</mh8>
<mh3><hr><mdw_file_toc> </mdw_file_toc><hr></mh3>


display.html..done
events.html..done
game_moves_array.html..done
index.html..not done
input.html..done
level_array.html..done
logo.html..done
netgame_config.html..done
netgame_join.html..done
netgame_main.html..done
netgame_packets.html..done
netgame_state.html..done
netgame_status.html..done
sound.html..done
tiles.html..done
timers.html..done

wow, all of this stuff is looking good...




find all css tags and remove unused

header_main..removed...
mh12 removed
mh2 removed
mh4 removed
mh5 removed

mh3 - body text (368)
mh7 - section title (178)
mh8 - file title (34)

mh10 - by: Michael David Weiss (2)
mh11 - Purple Martians title only (68)
mh12 - Technical Code Description only (32)

me1 - secondary header used in netgame config and netgame status

pk0 - packets
pk1 - packets






I want to simplify this:

The offsets from 6,7 are not necessary

old:
   // outer arms start and end pos are all fixed
   points[0][0] = -200;
   points[0][1] = 0;
   points[0][6] = -200;
   points[0][7] = -200;

   points[1][0] = 0;
   points[1][1] = 0;
   points[1][6] = 0;
   points[1][7] = -200;

   points[6][0] = 0;
   points[6][1] = 0;
   points[6][6] = 0;
   points[6][7] = 200;

   points[7][0] = 200;
   points[7][1] = 0;
   points[7][6] = 200;
   points[7][7] = 200;

   // outer arm 0 control points are relative to outer arm 0 positon
   points[0][2] = points[0][6] + 85;
   points[0][3] = points[0][7] + 107;
   points[0][4] = points[0][6] + 95;
   points[0][5] = points[0][7] + 31;

   // inner arm is relative to outer arm
   points[2][0] = points[0][6] + 30;
   points[2][1] = points[0][7] + 30;
   points[2][2] = points[0][6] + 77;
   points[2][3] = points[0][7] + 32;
   points[2][4] = points[0][6] + 93;
   points[2][5] = points[0][7] + 53;
   points[2][6] = points[0][6] + 109;
   points[2][7] = points[0][7] + 69;


new:
   // outer arms start and end pos are all fixed
   points[0][0] = -200;
   points[0][1] = 0;
   points[0][6] = -200;
   points[0][7] = -200;

   points[1][0] = 0;
   points[1][1] = 0;
   points[1][6] = 0;
   points[1][7] = -200;

   points[6][0] = 0;
   points[6][1] = 0;
   points[6][6] = 0;
   points[6][7] = 200;

   points[7][0] = 200;
   points[7][1] = 0;
   points[7][6] = 200;
   points[7][7] = 200;

   // outer arm 0 control points
   points[0][2] = -115;
   points[0][3] = -93;
   points[0][4] = -105;
   points[0][5] = -169;

   // inner arm
   points[2][0] = -170;
   points[2][1] = -170;
   points[2][2] = -123;
   points[2][3] = -68;
   points[2][4] = -107;
   points[2][5] = -147;
   points[2][6] = -91;
   points[2][7] = -131;



looking in game moves thingy
do I make a clear distinction between keys and controls??
I have a function called clear_keys(), that actually clears controls
renamed clear_keys() to clear_controls()
void set_comp_move_from_controls(int p)...never used. delete




web game move array is looking really good...


why do I use:
7 x memmove
7 x memset
27 x memcpy
replaced memmove with memcpy...


0 x memmove
7 x memset
32 x memcpy

1 - client reads stdf and put data in buffer
1 - server builds stdf packet

1 - server updates client's base state

7 - game_vars_to_state(char * b)
7 - state_to_game_vars(char * b)

14 - show_state_dif(char *a, char *b)

1 - add_log_entry2(int type, int player, const char *txt)



Can this be made simpler?

   // check to see if frame_nums match and its time to apply dif
   if (frame_num == client_state_dif_dst) // current frame_num is dif destination
   {
      if (client_state_base_frame_num != client_state_dif_src)  // stored base state does NOT match dif source
      {
         // if server has sent dif from src == 0, reset our base to 0
         if (client_state_dif_src == 0)
         {
            memset(client_state_base, 0, STATE_SIZE);
            client_state_base_frame_num = 0;
            if (L_LOGGING_NETPLAY_stdf) add_log_entry2(27, p, "Resetting client base state to zero\n");
         }
         else
         {
            sprintf(msg, "!! stdf cannot be applied (wrong client base) %d %d\n", client_state_base_frame_num, client_state_dif_src);
            if (L_LOGGING_NETPLAY_stdf) add_log_entry2(27, p, msg);
         }
      }
      if (client_state_base_frame_num == client_state_dif_src)  // stored base state matches dif source
      {


how about this?

   // check to see if frame_nums match and its time to apply dif
   if (frame_num == client_state_dif_dst) // current frame_num is dif destination
   {
      // if server has sent dif from src == 0, reset our base to 0
      if (client_state_dif_src == 0)
      {
         memset(client_state_base, 0, STATE_SIZE);
         client_state_base_frame_num = 0;
         if (L_LOGGING_NETPLAY_stdf) add_log_entry2(27, p, "Resetting client base state to zero\n");
      }
      if (client_state_base_frame_num != client_state_dif_src)  // stored base state does NOT match dif source
      {
         sprintf(msg, "!! stdf cannot be applied (wrong client base) %d %d\n", client_state_base_frame_num, client_state_dif_src);
         if (L_LOGGING_NETPLAY_stdf) add_log_entry2(27, p, msg);
      }
      else // stored base state matches dif source
      {


simplify this:

   if (start_mode < 3) // normal or run game
   {
      frame_num = 0;
      if (!load_level(play_level,0))
      {
         game_exit = 1;
         resume_allowed = 0;
      }
   }


   if (start_mode == 3) // new level after level done
   {
      stamp();
      frame_num = 0;
      if (!load_level(play_level,0))
      {
         game_exit = 1;
         resume_allowed = 0;
      }
   }


done:

   if (start_mode == 3) stamp(); // new level after level done

	frame_num = 0;
	if (!load_level(play_level,0))
	{
		game_exit = 1;
		resume_allowed = 0;
	}



run demo mode does not use stored player color...

probably because color won't get set if player is already active....

fixed...
now restore saved color after demo play...
where??

demo play can end where?

level done
esc pressed..

how about when called from menu...done
and when called from demo mode...done





sort out init_player()

type 1 - all
type 2 - level done
type 3 - netgame join




8 calls

initial_setup()
calls 1 for every player

load_gm()
calls 1 for every player

proc_start_mode()
calls 2 for every player

client_init_join() after SJON rx'd
calls 1 for every player


server_exit()
calls 3 for every player ???? why??


server_init()
calls 1 for player 0


server_join
calls 1 for new player slot before tx SJON

proc_player_state_game_move()
calls 3 when new demo mode player comes active




there are a lot of things going on here....

make init_player call itself...


make some more specific calls

like 23 = clear bandwidth counters..done



game_move_entry_pos..used only by server....
don't clear on netplay join??..dont think it matters



i think I can get rid of 2 and 3 specifics...done

   if (t == 2) // level done
   {
      players1[p].game_move_entry_pos = 0; // server only  ( for client game_move data sync )
      players1[p].server_last_sdat_sent_frame_num = 0; // only server uses it, to keep track of when last sdat was sent to client
   }

   if (t == 3) // netplay join
   {
      players1[p].server_last_sdak_rx_frame_num = frame_num + 200;
   }

now change the 2 calls to 3 to 2's..done




looks a lot cleaner now...hope it all still works....


i should set control_method to 0 in init 1



demo mode won't quit with any key...

esc just starts new demo...



make a new list of where I call init_player()

initial_setup()
---------------
// init all players
for (int p=0; p<NUM_PLAYERS; p++) init_player(p, 1);
players[0].active = 1;



when client rx SJON
-------------------
// initialize all players
for (int p=0; p<NUM_PLAYERS; p++) init_player(p, 1);
players[cp].control_method = 4;
ima_client = 1;
active_local_player = cp;
players[cp].color = color;
players1[cp].game_move_entry_pos = server_game_move_entry_pos;



server init()
-------------
// initialize all players
for (int p=0; p<NUM_PLAYERS; p++) init_player(p, 1);
players[0].active = 1;
players[0].control_method = 3; // server_local_control
ima_server = 1;


server exit()
-------------
// reset player data
for (int p=0; p<NUM_PLAYERS; p++) init_player(p, 1);
players[0].active = 1;


server finds new player slot after rx CJON
------------------------------------------
init_player(cn, 1);
players[cn].color = color;
players[cn].control_method = 2; //server client view only
players1[cn].who = who;
players1[cn].server_last_sdak_rx_frame_num = frame_num + 200;
players1[cn].game_move_entry_pos = game_move_entry_pos; // so server wont try to sync any moves less than this




this one was probably an issue so i removed it:
proc_player_state_game_move(int x)
----------------------------------
// player becomes active
if ((players[p].active == 0) && (val > 0) && (val < 16))
{
	init_player(p, 1);
	players[p].active = 1;
	players[p].color = val;
	players1[p].join_frame = frame_num;



proc_start_mode()
-----------------
if (start_mode == 1) // skip this for run demo game
{
   // reset player data
   for (int p=0; p<NUM_PLAYERS; p++) init_player(p, 2);


load_gm()
---------
for (int p=0; p<NUM_PLAYERS; p++) init_player(p, 1);
players[0].control_method = 1;


demo_mode()
-----------
after pm_main is done:

// reset player data
for (int p=0; p<NUM_PLAYERS; p++) init_player(p, 1);
players[0].active = 1;
players[0].control_method = 1;
active_local_player = 0;




in netgame client only stays alive for approx 5 sec or 200 frames after lock

can do next level good, but then 5s into next level same...

demo seems to exit good now...


-----------

when client quits...player lost server connection

this was missing:
void client_process_sdat_packet(void)
{
   players1[p].client_last_sdat_rx_frame_num = frame_num;

seems to work good now...


there are 3 places after run game where stuff is reset...can i make it one place?
actually only 2...commandline line immediatley exits
easier to make them the same...done


when new players come active in demo mode they don't start at the right position

how about when they come active at all...

when is 'get_player_start_pos()' called? 3 times:

in load level for player 0 only

after death

init player mode 2 (after level done)

--------------------


remove from init player mode 2 (after level done)

add to when they come players come active


----------------------------------------------------------
Make a new list of when set_player_start_pos called
----------------------------------------------------------
3 times
- load level for all players
- when player comes active
- after death


----------------------------------------------------------
make a new list of where I call init_player()
----------------------------------------------------------

initial_setup()
---------------
// init all players
for (int p=0; p<NUM_PLAYERS; p++) init_player(p, 1);
players[0].active = 1;




server init()
-------------
// initialize all players
for (int p=0; p<NUM_PLAYERS; p++) init_player(p, 1);
players[0].active = 1;
players[0].control_method = 3; // server_local_control
ima_server = 1;

server exit()
-------------
// reset player data
for (int p=0; p<NUM_PLAYERS; p++) init_player(p, 1);
players[0].active = 1;

client init()
-------------
// initialize all players
for (int p=0; p<NUM_PLAYERS; p++) init_player(p, 1);

client_exit()
-------------
// reset player data
for (int p=0; p<NUM_PLAYERS; p++) init_player(p, 1);
players[0].active = 1; // local_control
active_local_player = 0;




server finds new player slot after rx CJON
------------------------------------------
init_player(cn, 1);
players[cn].color = color;
players[cn].control_method = 2; //server client view only
players1[cn].who = who;
players1[cn].server_last_sdak_rx_frame_num = frame_num + 200;
players1[cn].game_move_entry_pos = game_move_entry_pos; // so server wont try to sync any moves less than this


load_gm()
---------
for (int p=0; p<NUM_PLAYERS; p++) init_player(p, 1);
players[0].control_method = 1;


after run demo game from menu
----------------------------
for (int p=0; p<NUM_PLAYERS; p++) init_player(p, 1);
players[0].active = 1;
active_local_player = 0;
get_config_values(); // restore player color from config file


demo_mode() on exiting
----------------------
for (int p=0; p<NUM_PLAYERS; p++) init_player(p, 1);
players[0].active = 1;
active_local_player = 0;
get_config_values(); // restore player color from config file


not sure about this one:

its run every time start_mode loads a level
- new game
- level done
- NOT run game


i agree its not needed for run game, because load_gm took care of that

what does new game set up before start mode?? nothing

i should bring back start_mode 3


redo start modes....         start_mode = 1;
         game_exit = 0;

1 = new game (single player) do init 1
2 = level done (do init 2)


3 = new game (client

9 = file play

done...

now make start mode 1 clear everything

I can't beacuse it is called by single player start as well as server and client




proc_start_mode()
-----------------
if (start_mode == 1) // skip this for run demo game
{
   // reset player data
   for (int p=0; p<NUM_PLAYERS; p++) init_player(p, 2);



------------------------------------------------------------------
major refactor...
------------------------------------------------------------------


I want to have more of my start up code in pm_main.


change its name to game_loop

make it take a variable..start_mode

make it set game_exit = 0 on entry



make it so that all the times its called for each mode, the code is common

make it so that more of my player setup is doen there.




how many modes can it be started in??


1 single player new game
2 server new game
3 client new game
5 level done
7 resume single player
9 run demo mode

also make some common exit code




list where called:
-demo mode

game menu x 6
-new
-resume
-server
-client
-after level editor
-run demo


command line x 7
- client 1 arg
- server 1 arg
- client 2 arg
- server 2 arg

- immed run 1 arg
- immed run 2 arg

- run demo



---------------------------------------------------------

game_exit = 0 set in game_loop start
rename pm_main to game_loop and pass it start_mode
then in turn pass start mode to proc_start_mode()

I can make start mode totally local to game_loop, but how will I deal with level_done setting it??

for now just set global to passed...

void game_loop(int passed_start_mode)
{
   start_mode = passed_start_mode;
   game_exit = 0;

this is all because of proc_level_done which also sets start_mode

game_loop()
   proc_controllers()
      proc_game_move()
         proc_level_done()

ill fix this later....

next move this to proc_start_mode()


   if (start_mode == 2) // server
   {
      if (!server_init())
      {
         server_exit();
         game_exit = 0;
      }
   }

   if (start_mode == 3) // client
   {
      if (!client_init())
      {
         client_exit();
         game_exit = 0;
      }
   }


make common exit code after

void game_loop(int passed_start_mode)
{
   while (!game_exit) // game loop
   {
   }

   // common exit stuff...
   if (ima_server) server_exit();
   if (ima_client) client_exit();
}



-------------------------------------------------------
now client init is only called once in start mode...
now client exit is called only 2 times...
once if client init fails
once at end of game loop if ima_client

same for server...


test...join good.


server can't re-start...failed to open listening channel....


is something setting ima_server to 0 before game_loop ends??

yes...proc_game_move when player goes inactive..
remove all stuff from there that messes with client or server player stuff
do it at end of game_loop()

done...

when client is waiting to join set level display to start pos...


moved player init to proc_start_mode common like this:

   if (start_mode == 5) // start new level after level done
   {
      for (int p=0; p<NUM_PLAYERS; p++) init_player(p, 2);
   }
   else // 1, 2, 3, 9 - full player data reset
   {
      for (int p=0; p<NUM_PLAYERS; p++) init_player(p, 1);
   }


then removed from:
client init()
server_init()
load_gm()


----------
test
single player good
client join good

client needs to set player pos while waiting to join...fixed
in load_level() set all players pos not just 0

client seems to take longer to join now...



----------------------------------------------------------
make a new list of where I call init_player()
----------------------------------------------------------

initial_setup()
---------------
// init all players
for (int p=0; p<NUM_PLAYERS; p++) init_player(p, 1);
players[0].active = 1;


proc_start_mode()
------------------
if (start_mode == 5) // start new level after level done
{
	for (int p=0; p<NUM_PLAYERS; p++) init_player(p, 2);
}
else // 1, 2, 3, 9 - full player data reset
{
	for (int p=0; p<NUM_PLAYERS; p++) init_player(p, 1);
	players[0].active = 1;
}


server exit()
-------------
// reset player data
for (int p=0; p<NUM_PLAYERS; p++) init_player(p, 1);
players[0].active = 1;

client_exit()
-------------
// reset player data
for (int p=0; p<NUM_PLAYERS; p++) init_player(p, 1);
players[0].active = 1; // local_control
active_local_player = 0;

server finds new player slot after rx CJON
------------------------------------------
init_player(cn, 1);
players[cn].color = color;
players[cn].control_method = 2; //server client view only
players1[cn].who = who;
players1[cn].server_last_sdak_rx_frame_num = frame_num + 200;
players1[cn].game_move_entry_pos = game_move_entry_pos; // so server wont try to sync any moves less than this


after run demo game from menu
----------------------------
for (int p=0; p<NUM_PLAYERS; p++) init_player(p, 1);
players[0].active = 1;
active_local_player = 0;
get_config_values(); // restore player color from config file


demo_mode() on exiting
----------------------
for (int p=0; p<NUM_PLAYERS; p++) init_player(p, 1);
players[0].active = 1;
active_local_player = 0;
get_config_values(); // restore player color from config file

I am pretty confident about this....

----------------------------------------------------------------------------------

start_mode...

start_mode when calling game_loop only need to be processed the first time
EXCEPT for level done...

why not just make an exception for that...

make level_done have a new value of 2...

in game_loop:

if (level_done == 2) proc_start_mode(5);

before game_loop while

start_mode is no longer global and has a very small scope



---------------------------------
list of all level_done references
---------------------------------

in start_mode common set to 0

in item collision door and warp, set to 1

in single player control:
if (level_done == 1) add_game_move(frame_num, 6, 0, 0);

in server_local_control(int p)
if (level_done == 1) add_game_move(fn, 6, 0, 0);

in proc_level_done()
level_done = 2;

in game_loop()
if (level_done == 2) proc_start_mode(5);


----------------------------------------
list of all places resume_allowed is set
----------------------------------------

only 2 places set to 0
- level is loaded
- start level changes

only one place set to 1
- exit game in single player mode

-----------------------------------------------------------

demo mode wont quit...
esc just starts new demo

fixed start mode resetting control_method 1
remove setting control_method 1 in load_gm...now just done in start mode


-----------------------------------------------
List of at all the places control_method is set
-----------------------------------------------

zplayer.cpp sets it  1 time
---------------------------
init_player (full mode)
players[p].control_method = 0;


zclient.cpp sets it 5 times
---------------------------
when SJON rx
players[cp].control_method = 4;

4 times for check dif


zserver.cpp sets it 2 times
---------------------------
in server_init
players[0].control_method = 3; // server_local_control
ima_server = 1;

when setting up new client
players[cn].control_method = 2; //server client view only

zcontrol.cpp sets it 2 times
----------------------------
when player comes active:
if ((ima_server) || (ima_client))
   if (p != active_local_player) players[p].control_method = 2;
// if player 0 is file play all added players will be too
if (players[0].control_method == 1) players[p].control_method = 1;

when remote client goes inactive:
players[p].control_method = 9; // prevent re-use of this player number in this level


zloop.cpp sets it 2 times
-------------------------
after level done free used clients
if (players[p].control_method == 9) players[p].control_method = 0;

in proc_start_mode()
if (start_mode == 9) players[0].control_method = 1;




fixed bug in load gm that was only erasing 10,000 game moves instead of 1,000,000
look at all references to game_moves
made a common clear_game_moves()
made a define for GAME_MOVES_SIZE 1000000



old:

   if (--players1[p].made_active_holdoff < 0) players1[p].made_active_holdoff = 0;
   if ((!players1[p].made_active_holdoff) && (players[p].active == 0) && (players[p].control_method == 2) && (players1[p].server_sync < 4) && (players1[p].server_sync > -2))
   {
      players1[p].made_active_holdoff = 6;
      add_game_move(frame_num + 4, 1, p, players[p].color);
      sprintf(msg,"Player:%d has locked and will become active in 4 frames!\n", p);
      if (L_LOGGING_NETPLAY_JOIN) add_log_entry2(11, p, msg);
   }


new:

if ((!players[p].active) && (players[p].control_method == 2)) // inactive client chasing for lock
{
   if (players1[p].made_active_holdoff) players1[p].made_active_holdoff--;
   else if ((players1[p].server_sync < 4) && (players1[p].server_sync > -2))
   {
      add_game_move(frame_num + 4, 1, p, players[p].color);
      players1[p].made_active_holdoff = 6;
      sprintf(msg,"Player:%d has locked and will become active in 4 frames!\n", p);
      if (L_LOGGING_NETPLAY_JOIN) add_log_entry2(11, p, msg);
   }
}




-------------------------------------------------------------
I should straighten out what happens when a player quits...
-------------------------------------------------------------

it all starts when a player presses the menu key or escape...

all modes:

set_comp_move_from_player_key_check(p);

// if menu key ignore everything else and set to 127
if (key[players1[p].menu_key])  cm = 127;
if (key[ALLEGRO_KEY_ESCAPE])    cm = 127;


when this comp_move is sent to add_game_move(frame_num, 5, p, players1[p].comp_move);

it is converted to a special player state move:

if ((type == 5) && (data2 == 127)) // change menu key to player state inactive special move
{
	game_moves[game_move_entry_pos][0] = frame;
	game_moves[game_move_entry_pos][1] = 1;     // type 1; player state
	game_moves[game_move_entry_pos][2] = data1; // player num
	game_moves[game_move_entry_pos][3] = 64;    // inactive
	game_move_entry_pos++;
	return; // to exit immediately
}


single player adds to local game moves array

in proc game move:
if (players[p].control_method == 0)
{
	game_exit = 1;
	resume_allowed = 1;
}


client sends raw move (5, 127) to server
server has special case to set frame to future (frame + 2)
server adds it with add_game_move() where it is converted to player state

server has a special case that just adds 2 to the frame number
   // this special case here is to fix bug that occurs when server_lead_frames > 0, and quit move doesn't get synced back to the client
   if (cm == 127) // client quit
   {
      add_game_move(fn+2, 5, p, cm);  // put in future
      sprintf(tmsg2,"<-- player:%d quit\n", p);
   }
   else
   {
      if (c_sync >= 0) add_game_move(fn, 5, p, cm); // add to game_move array


server drops client in proc_game_move() like this:
         // remote player quit
         if (players[p].control_method == 2)
         {
            players[p].active = 0;
            players[p].control_method = 9; // prevent re-use of this player number in this level
            players1[p].who = 99;

            // only makes sense to show this if not local player
            show_player_join_quit_timer = 60;
            show_player_join_quit_player = p;
            show_player_join_quit_jq = 0;
         }
other clients drop this client in the same way



client drops itself in proc_game_move() like this:
         // local client player quit
         if (players[p].control_method == 4)
         {
            if (val == 64) players1[p].quit_reason = 90;
            game_exit = 1;
            if (L_LOGGING_NETPLAY)
            {
               sprintf(msg,"Local Client(%s) quit the game.",local_hostname);
               add_log_entry_header(10, p, msg, 1);
               log_ending_stats();
            }
         }



what if I add to the frame number in add_game_move()??
then I can remove exception in server rx cdat

it will add for all modes, but that should be OK...

do it...done...still works...


what happens with player drop?
client...
quits the whole damn game with fast exit()!
that's too severe...what else can I do?

set game_exit = 1?

before that I want other client and server to know whats happening
or should I let the server take care of that??

well, if I've lost server connection, it doesn't make sense to send something to the server...

lets just set game_exit = 1 and:
players1[p].quit_reason = 75;
log_ending_stats();

the code at the end of game loop will clean up for me...

server:


void server_proc_player_drop(void)
{
   // check to see if we need to drop clients
   for (int p=1; p<NUM_PLAYERS; p++)   // server only; skip p[0]
      if (players[p].control_method == 2)
      {
         if ((players[p].active) && (players1[p].server_sync > 100))
         {
            //printf("[%4d] server_sync:[%4d] drop p:%d \n", frame_num, players1[p].server_sync, p);
            add_game_move(frame_num + 4, 1, p, 71); // make client inactive (reason sync > 100)

            sprintf(msg,"Server dropped player:%d (server sync > 100)", p);
            if (L_LOGGING_NETPLAY) add_log_entry_header(10, p, msg, 1);
         }
         if (players1[p].server_last_sdak_rx_frame_num + 100 < frame_num)
         {
            //printf("[%4d][%4d] drop p:%d \n", frame_num, players1[p].server_last_sdak_rx_frame_num, p);
            add_game_move(frame_num + 4, 1, p, 71); // make client inactive (reason no sdak for 100 frames)

            sprintf(msg,"Server dropped player:%d (last sdat rx > 100)", p);
            if (L_LOGGING_NETPLAY) add_log_entry_header(10, p, msg, 1);
         }
      }
}

---------------------------------------
how does quit reason work?
---------------------------------------

in the player struct we have: players1[p].quit_reason

void log_reason_for_client_quit(int p)
{
   char tmsg[80];
   sprintf(tmsg,"unknown");
   int r = players1[p].quit_reason;
   if (r == 64) sprintf(tmsg,"player quit game with ESC");
   if (r == 70) sprintf(tmsg,"server drop (server sync > 100)");
   if (r == 71) sprintf(tmsg,"server drop (no sdak for 100 frames)");
   if (r == 74) sprintf(tmsg,"client never became active");
   if (r == 75) sprintf(tmsg,"client lost server connection");
   if (r == 80) sprintf(tmsg,"level done");
   if (r == 90) sprintf(tmsg,"local client quit");
   if (r == 91) sprintf(tmsg,"local server quit");
   if (r == 92) sprintf(tmsg,"remote server quit");
   sprintf(msg,"reason for quit...........[%s]", tmsg);
   add_log_entry_position_text(22, 0, 76, 10, msg, "|", " ");
}



when client drops due to lost server connection:
players1[p].quit_reason = 75;
log_ending_stats();




in proc_game_move() when the special game move player state is read,
if (val > 63) it a player drop and val is quit reason


when players quit with esc reason is set to 64
this is done in add_game_move() and is common to all...

when players are dropped by server it is set to 70 for sync and 71 for sdak


proc_game_move() reads the special game move player state and if inactive:
by default sets:  players1[p].quit_reason = val;
at this point it could be 64, 70, 71

then can set these modes:

74 player never became active
90 local client quit the game
91 local server quit the game
92 remote server ended the game

at the end on set inactive:

         if (players1[p].quit_reason == 70) log_ending_stats();
         if (players1[p].quit_reason == 71) log_ending_stats();
         if (players1[p].quit_reason == 74) log_ending_stats();
         if (players1[p].quit_reason == 90) log_ending_stats();
         if (players1[p].quit_reason == 91) log_ending_stats_server();
         if (players1[p].quit_reason == 92) log_ending_stats();

---------------------------------
where is log_ending_stats called?
---------------------------------
4 main places:

proc_game_move() - player inactive
client drop
level done
fast_exit()



made a lot of changes...need to test...something do not seem right....


-----------------------------------------------------------
client init code no line endings in log...fixed
-----------------------------------------------------------

-----------------------------------------------------------
show dif local and server reversed??
-----------------------------------------------------------
void show_state_dif(char *a, char *b)

// make copy of current state
char tmp[STATE_SIZE];
game_vars_to_state(tmp);

// compare copy to modified base state
if (memcmp(tmp, client_state_base, STATE_SIZE))
{
   dif_corr = 1;
   players1[p].dif_corr++;
   sprintf(tmsg, "corrections applied - total corrections:%d", players1[p].dif_corr);
   show_state_dif(tmp, client_state_base); // show dif


looks like a is local b is server

then c1 = a, c2 = b


then here its printed in reverse....

sprintf(msg, "player[%d].active  server:[%d] local:[%d]\n", p, c1_players[p].active, c2_players[p].active );


where would it be easiest to change?

show_state_dif(client_state_base, tmp); // show dif

done.....
-----------------------------------------------------------


-----------------------------------------------------------
when demo runs it leaves log file entries ..done
added erase_log(void);
at end of demo mode and run demo
-----------------------------------------------------------

-----------------------------------------------------------
log player array uses player num for each player..fixe to only use 0 ...done
-----------------------------------------------------------

-----------------------------------------------------------
players colors in log file viewer are bad...
try to get them from the logs
also set them in player init...
too hard, just set them when getting data at start of log file viewer..done
-----------------------------------------------------------








-----------------------------------------------------------
no logging when player come active???
what if client comes active because of stdf instead of game move??
-----------------------------------------------------------


250 server got join
371 server says player locked

492 server says player locked
496 server says player became active


on client
nothing around 371
at frame 500 stdf from 495 to 500 sets player active...


what does game moves say:

server:
-------------
number of entries 1473
deathmatch_pbullets 1
deathmatch_pbullets_damage 5
suicide_pbullets 1
[ gm][  pc][p][cm]
[  0][ 375]-------------PLAYER 1 ACTIVE (color:11)--
[  1][ 496]-------------PLAYER 1 ACTIVE (color:11)--
[  2][ 503][1][ 1]  [    ][    ][    ][  ][     ][LEFT]

client:
-------------
number of entries 1470
deathmatch_pbullets 1
deathmatch_pbullets_damage 5
suicide_pbullets 1
[ gm][  pc][p][cm]
[  0][   0]-------------START (level:4)-------------
[  1][   0]-------------PLAYER 0 ACTIVE (color:10)--
[  2][ 503][1][ 1]  [    ][    ][    ][  ][     ][LEFT]
[  3][ 507][1][ 4]  [    ][    ][    ][UP][     ][    ]



why is client missing those....

why is server missing start...

why does client have stuff that server does not??



old:
   // add initial level info to game_moves array
   // only for modes:
   // 1 single player new game
   // 2 server new game
   // 5 with !ima_client
   // don't do it for client (never enter any game moves on client)
   // don't do for demo
   // don't do for resume
   if ( (start_mode == 1) || (start_mode == 3) || ((start_mode == 5) && (!ima_client)) )
   {
      add_game_move(0, 0, play_level, 0);       // [00] game_start
      add_game_move(0, 1, 0, players[0].color); // [01] player_state and color
   }

new:
   // add initial level info to game_moves array
   // only for modes:
   // 1 single player new game
   // 2 server new game
   // 5 with !ima_client
   // don't do it for client (never enter any game moves on client)
   // don't do for demo
   // don't do for resume
   if ( (start_mode == 1) || (start_mode == 2) || ((start_mode == 5) && (!ima_client)) )
   {
      add_game_move(0, 0, play_level, 0);       // [00] game_start
      add_game_move(0, 1, 0, players[0].color); // [01] player_state and color
   }



this would explain why client had start info but server did not
also client had higher game move pos so it wouldn't enter new moves....

try this all again...seems to work a lost better now...

-----------------------------------------------------------
-----------------------------------------------------------


4 player works with ubuntu as one of them....

can I speed up chase and lock?

do I need the <2 > -4 things still?




--------------------------------------------------------------
when client joins, after getting initial state,

gets 14 more stdf until caught up and can acknowledge??

why cant we acknowledge first one??


looks like the first dif received was not applied
base was zero, but current did not match??
current = 0
should force...

does this happen every time? yes...

fixed that on client by setting frame_num after initial stdf rx, but before dif applied...

now:

dif gets applied on client and clients sends sdak on frame 142

server does not rx until frame 163
by then server has sent many more stdf's and fails to set new base for client

why is client 20 frames behind??

client gets first timer adjust at 162 with first sdat rx and is already 20 frames behind
server sends it at 142


is client timer slow until first adjust?? no

does start mode write over my start frame stuff?? no



-----------
new data

client fps = 40
client gets all 4 pieces of stdf (0-150)
client applies dif and sets frame_nums to 150

[client frame 150]
recieves all 4 peices of same stdf again
receives sdat from 154 and sets timer to 43
receives 2 4 peices of next stdf (0-155)
applies dif (0-150) again


[client frame 151]
client timer = 43
receives sdat from 174 and sets timer to 62

[client frame 153]
gets complete dif from (0-175)

[client frame 157]
receives sdat from 178 and sets timer to 60

[client frame 161]
gets complete dif from (0-180)

[client frame 163]
receives sdat from 182 and sets timer to 58




------------------

does it do the level load??

client init

load level

game loop start

client blocks for initial state

client chase



-------------
new data

[client frame 121]
client gets all 4 pieces of stdf (0-121)
client applies dif and sets frame_nums to 121

[client frame 122]

receives sdat from 125 and sets timer to 42
client gets all 4 pieces of stdf (0-125)

receives sdat from 129 and sets timer to 46
client gets first 2 pieces of stdf (0-130)

receives sdat from 145 and sets timer to 62
client gets first 3 pieces of stdf (0-145)



what if i flush the client rx buffer after good state rx'd? no dif
try setting stdf freq to 80...no dif


still cant figure out why client is 20 frames behind...



I put some time calls in client code and I dont see any delays....
do the same for server...





server send initial state on server frame 144 clock 6785

client gets it at clock 1350 and sets frame 144 to equal clock 1352

client gets sdat on frame 145 clock 1371 from server frame 166

server's clock was 7335 when it sent sdat 166



time dif at initial state rx:
server sent:6785
client rx: 1350
------------------
           5435



time dif at first sdat packet
server sent:7335
client rx: 1371
------------------
           5964



5964-5435 = 529ms / 25ms per frame = 21 frames



server:
166-144 = 22 frame * 25ms = 550ms
6785 + 550 = 7335
server checks out good


client:





tried TCP also

started at 10 sync then went down for 10 frames to 8
then got 9 sdats in one frame and went to 29



--------------------
just a thought...what if I did the chase part first?
then when that was good, just blast a state through
after rx sjon client starts in mode 2 inactive and uses sdats to chase and lock
--------------------------------------


20180616

all that I am doing here is to discover the 20 frame half second pause between
getting initial state and getting first sdat..

on the server I show a time stamp at the start of every server_control()
and make sure they agree...


server
------
frame 214
8507 server tx sjon
8507 server tx sdat

then every 25ms clock is working good

server sends another sdat every frame for sync

frame 236
9058
finally rx sdak and stak


client
------
first clock is 1146 after level start
1147 waiting for game state
1150 214 frame_num updated
1166 215 rx sdat and already 20 frames late

need more clocks on client...

client send cjon
client rx sjon


i think i found my delay.....

771 client tx cjon 771
803 client rx sjon 803
1313 after level start


705 tx cjon
746 rx sjon
768 after clear game moves array

stimp() takes 400 frames......

remove for netgame...

client for sure but also server for level done so just do both...

606 client tx cjon
624 client rx sjon
646 after clear game moves array
721 after load level

--------------------------------------------
just a thought....
I would love to do without load level for client joining and just let the initial state do it...
what is missing??
lift step data
bullets (not loaded with level anyway)

i load the level, but when I get initial state I overwrite almost everything

ok if add list steps, what else should I do??, bullets??
remove unused in player...

how big is lift steps?? 25600

lets just leave it for now...

--------------------------------------------

remove clocks...done

what if I made timer adjust twice as much adjust?

old
   // client timer adjust
   players1[p].client_sync = sdat_frame_num - frame_num;
   int fps_chase = frame_speed + players1[p].client_sync - server_lead_frames;
   if (fps_chase < 4) fps_chase = 4; // never let this go negative
   al_set_timer_speed(fps_timer, ( 1 / (float) fps_chase));

new
   // client timer adjust
   players1[p].client_sync = sdat_frame_num - frame_num;
   int fps_chase = frame_speed + (players1[p].client_sync - server_lead_frames)*2;
   if (fps_chase < 4) fps_chase = 4; // never let this go negative
   al_set_timer_speed(fps_timer, ( 1 / (float) fps_chase));




---------------------------------------------------------
just a thought

proc_controllers()

acts differently when in menu vs game

this is controlled by game_exit

what if I just passed something to proc_controllers()
run one way if in game, another for menu, another for key only...
maybe later.....


---------------------------------------------------------


restore all things...
- stdf_freq
- sync_freq


what about server send sync...

can i fine tune it for each player?

like if they have high server sync, send more often??


2 is normal (1 + server_lead_frames)

add to player struct:
int server_sdat_sync_freq;
by default set to 0;

0  every frame
1  every other frame
20 every 20 frames

adjust when setting sync, when rx'ing sdaks

done....


sometimes client gets ahead of server before rx first sync
then client can get a pile of sync sdat's and adjust timer for each one
but only the last one matters...

remove client_flush...

can i combine rx sdat and timer to one log line...done

set stdf_freq to 10


what if i hold off sending more stdf's after initial, until locked?
or until initial has been ack'd and new base set?


simplify this complicated mess....


         int p = players1[0].n_stdf; // get last player we sent to
         int not_found = 0;
         do
         {
            if (++p > 7) p = 1; // only look at 1-7
            not_found++;
         } while ((players[p].control_method != 2) && (not_found < 8));
         if (not_found == 8) p = 0;   // if no clients found set to 0 so no send will happen
         players1[0].n_stdf = p;      // set last player we sent to
         if (p) server_send_stdf(p);  // send



         int p = players1[0].n_stdf; // get last player we sent to
         int not_found = 0;
         int loop_done = 0;
         while (!loop_done)
         {
            if (++p > 7) p = 1; // only look at 1-7
            not_found++;
            if ((players[p].active) && (players[p].control_method == 2)) loop_done = 1;
            if (not_found > 8) // no clients found
            {
               loop_done = 1;
               p = 0; set to 0 so no send will happen
            }
         }
         players1[0].n_stdf = p;      // set last player we sent to
         if (p) server_send_stdf(p);  // send




run a test with 3 clients..all good

its important to flush client and server at level done and wait after...
not sure why...


----------------------------------------------------------------
if client does not get reply from server game starts anyway..fixed
----------------------------------------------------------------


----------------------------------------------------------------
when starting log file viewer with pm -lr, if no log files exits badly..fixed
----------------------------------------------------------------


----------------------------------------------------------------
don't save any log file unless in netgame mode..done
remove L_LOGGING and replace with L_LOGGING_NETPLAY...done
remove L_LOGGING_NETPLAY_timeradjust..done
move version and allegro version logging to client and server init..done
----------------------------------------------------------------


----------------------------------------------------------------
make server sdat log look like client sdat..done
----------------------------------------------------------------

----------------------------------------------------------------
reset ortho double when leaving log file viewer..done
can't set ortho in log file viewer..done
----------------------------------------------------------------

----------------------------------------------------------------
client has both ending stats....fixed....
----------------------------------------------------------------


ran 8 player game with no problems.....


lost y510 on level 5
reason: server drop (no sdak rx for 100 frames)
only active for 4 frames
first and only thing server received was stak on frame 247..really late


lost 4230j on level 6
reason: server drop (no sdak rx for 100 frames)


----------------------------------------
fix get all keys for linux..done
----------------------------------------

spent 6 hours making the graph for log file viewer look great...




in what nested way are these called??

all from game loop:
proc_item_collision();
proc_item_move();
proc_lit_bomb();
proc_lit_rocket();
proc_player_carry();
draw_items();


int player_drop_item(int p);
3 x
1 x in player carry when item dropped
2 x item collision door entry


void draw_pop_message(int c);
1 x in draw_item

void draw_door(int c, int x, int y);
1 x in draw_item

void do_bomb_damage(int i);
1 x proc_lit_bomb();

void remove_block(int x, int y);
3 x
2 x proc_item_move(); key
1 x 1 x proc_lit_bomb();


--------how can i simplify these 6 calls from game loop?
proc_item_collision();
proc_item_move();
proc_lit_bomb();
proc_lit_rocket();
proc_player_carry();
draw_items();

to compare, enemy has 3
enemy_move();
enemy_collision();
draw_enemy();


how are they iterated?

proc_item_collision();
500 items then 8 players

proc_item_move();
500 items

proc_lit_bomb();
500 items

proc_lit_rocket();
500 items

proc_player_carry();
8 players


I want to call:
proc_lit_bomb();
proc_lit_rocket();
from
proc_item_move();
done....now its only 4

proc_item_collision();
proc_item_move();
proc_player_carry();
draw_items();

can I move player carry somewhere??

add code in main player code to reset scale and rot if not in paused 2 or rocket
what if I just reset it by default and let someething change it if it needs to...
cant make that work..just reset after door move done and when drop rocket...

also when rocket explodes...
when rocket explodes it turns into a lit bomb
when lit bomb explodes force drop, reset scale and rot there... seems to work



now I want to patch this into main player move

void proc_player_carry(void)
{
   for (int p=0; p<NUM_PLAYERS; p++)
      if ((players[p].active) && (players[p].carry_item))
         if (!players[p].paused || (players[p].paused && players[p].paused_type == 2))// player is carrying item
         {
            int pc = players[p].carry_item-1; // number of item
            if (item[pc][0] != 98)            // not lit rocket
            {
               // set item position relative to player that's carrying it
               itemf[pc][1] = players[p].PY - al_itofix(2);
               if (!players[p].left_right) itemf[pc][0] = players[p].PX - al_itofix(15);
               if (players[p].left_right) itemf[pc][0] = players[p].PX + al_itofix(15);
            }
            if (!players[p].fire) // drop
            {
               if (player_drop_item(p) < 6)
               {
                  if (item[pc][0] != 98)            // not lit rocket
                  {
                     itemf[pc][2] = players[p].xinc;  // inherit the players momentum
                     itemf[pc][3] = players[p].yinc;
                     if (players[p].up)    itemf[pc][3] -= al_itofix(6); // throw item upwards
                     if (players[p].left)  itemf[pc][2] -= al_itofix(2); // throw item left
                     if (players[p].right) itemf[pc][2] += al_itofix(2); // throw item right
                  }
                  else // drop a rocket
                  {
                     players[p].draw_rot = al_itofix(0);
                     players[p].draw_scale = al_itofix(1);
                  }
               }
            }
         }
}

void proc_player_carry(int p)

done...


rot not fixed after death



lets rename zemove to zenemy..done

lets move all file stuff to zfile and lose yfilecom..done

lets put underscores in all z files..done




---------------------------------------------------------
what happens if a client gets a dif with the wrong base from the server?
a log entry is created, but no other handling is done...
this can't be an issue cause it works, I'm just curious....

when could this happen?
client updates base, but ack never makes it back to server...

then server will keep sending difs with new dest, but same src that client does not have
client will never ack, cause they have wrong base

how about if client gets wrong base, it acks with correct base?

this cant be done in apply because it checks every frame and will often have base

do it when the full packet is rx and decompressed...at that point the src better match...

maybe it can be done in apply, but only on the frame where dest = frame
yes, that should work...

its just re-sending the ack, that for some reason the server does not have
then the server will detect the mismatch and reset base to 0



      if (client_state_base_frame_num != client_state_dif_src)  // stored base state does NOT match dif source
      {
         sprintf(msg, "dif cannot be applied (wrong client base) %d %d\n", client_state_base_frame_num, client_state_dif_src);
         if (L_LOGGING_NETPLAY_stdf) add_log_entry2(27, p, msg);

         // send ack to server with correct acknowledged base state
         Packet("stak");
         PacketPut1ByteInt(p);
         PacketPut1ByteInt(0);
         PacketPut4ByteInt(client_state_base_frame_num);
         ClientSend(packetbuffer, packetsize);
      }


done.....
---------------------------------------------------------







next..how f'd are the collision checks

proc_item_collision();
500 items - 8 players


proc_enemy_collision();
100 enemies - 50 pbullets
            - 8 players


ebullets
50 ebullets - 8 players

pbullets
50 pbullets - 8 players



I could straighten this out by:
put both bullet checks and item in player

I'm already iterating players...


what needs collision checks?
player - pbullets
       - ebullets
       - enemies
       - items

enemy - pbullets

what if I make the functions like:

proc_player_item_collision(int p)



made all item collision for specific types into their own functions...

               switch (item[x][0]) // item type
               {
                  case 1: proc_door_collision(p, x); break;
                  case 2: proc_bonus_collision(p, x); break;
                  case 3: proc_exit_collision(p, x); break;
                  case 4: proc_key_collision(p, x); break;
                  case 6: proc_freeman_collision(p, x); break;
                  case 7: proc_mine_collision(p, x); break;
                  case 8: proc_bomb_collision(p, x); break;
                  case 10: item[x][6] = item[x][7]; break; // set pop-up message timer
                  case 11: proc_rocket_collision(p, x); break;
                  case 12: proc_warp_collision(p, x); break;
                  case 14: proc_switch_collision(p, x); break;
                  case 15: proc_sproingy_collision(p, x); break;
               }
            } // end of player collision with active item


now I want to call item collison from player_move

where should I do the collision detection?

this means that the order of things in the game loop will change...

old:

      if (level_done == 2) proc_start_mode(5);
      proc_scale_factor_change();
      proc_lift_move(0);
      proc_item_collision();
      proc_item_move();
      if (ima_server) server_control();
      if (ima_client) client_control();

      proc_controllers();
      proc_player_move();
      proc_enemy_move();
      proc_enemy_collision();
      proc_ebullets();
      proc_pbullets();
      proc_player_health();
      proc_sound();
      proc_frame_delay();

new:
      if (level_done == 2) proc_start_mode(5);
      proc_scale_factor_change();
      proc_lift_move(0);
      proc_item_move();
      if (ima_server) server_control();
      if (ima_client) client_control();

      proc_controllers();

      proc_player_move();
      proc_item_collision();

      proc_enemy_move();
      proc_enemy_collision();
      proc_ebullets();
      proc_pbullets();
      proc_player_health();
      proc_sound();
      proc_frame_delay();



done

now I call
proc_item_collision(p);
from player_move

collision detection takes place in proc_item_collision(p);



that looks good, now what else?

move ebullet collision to player also
done
proc_ebullet_collision(p);

now enemy collision with player..


ok now I have moved all to player move....
player - pbullets
       - ebullets
       - enemies
       - items

the only collision I have left is
enemy to pbullet

got rid of the global EN in z_enemy
now what about EXint and EYint??


also rearrage game loop stuff

stream line the 4 player collisions in player move

move some things out of player_move to simplify...












































