---------------------------------------------------------
------------------------ Bugs ---------------------------
---------------------------------------------------------



when i deleted the last start block for testing the level
now the level is broke and wont load...




remote lasts through death

can trigger remote while death paused



-------------------------------------------------------
------------------------ To Do --------------------------
---------------------------------------------------------

flapper uses passount mod for flap...
can i make them all custom based on flap speed?

right now I have a counter in the enemy ints that goes from 0-22
and does something for each integer case..

I could convert it to a float and increment it a float ammount each time
then have all my cases based on percentages of the float...

I would need 2 floats (fixed), the counter and the inc
I will make the counter constant and the inc variable
called flap speed...
user will set 0.5 to 8
constant will be from 0-100

Efi[][9] flap speed counter
Efi[][10] flap speed inc


working good...

next thing...

with different flap speeds, the flap y inc is added a different amount of times

so the same flap yinc will have different effect with different flap speeds...

should be easy to make this constant

also maybe show in level editor how much flap yinc is...


the number of times flap is called is

50/flap inc


each time 3 * r * flap yinc..

so max swing = (50/item[i][9]) * 3 * item[i][8]

i want to change 8 to the max + or - amount that flap does...
mark it in editor, then make it happen in code


yflap is now a float from 0 to 4
i will change it to 0-400 and it could be an int...

Efi[][8] can still have a calculated value based on the rest...


target is flap height (Ei[][21])

adjust yflap (Efi[][8]) to make that happen...

equation:

Ei[][21] = (50/Ei[i][9]) * Ei[i][8]

Ei[i][8] = Ei[][21] / (50/Ei[i][9])


----------------

its looking good, but the 2 halves are not symetrical...
they drift...
seek was evening it out, but with seek disabled, drift is totally visible

to fix this i need to make both halves the same

they both need to start at 0
right now the second one starts at f-50

how about if i detect when > 50 and set to 50 exacltly

that seems to do it...


360 base

max 453
min 209

360 - 453 = -93
360 - 209 = 151


is it beacuse I start at 0 which is in the middle of a move
when I should start at 25 or 75 which is a zero point...

what if I rearrange my two halves:

0 to -1 and back to 0

0 to +1 and back to 0

also try a trig function


i am always adding the ammount, but they add up
i need to remove the last add then add a new one...


remove 3

put only flap in 3, then apply




applying the huge amount every time...
if it collides then the huge ammount is taken back..
this is not good...

calculate the difference between last and current...
apply and check for only that...





































make block walker and archwag share common code
same as bouncer and cannon




cloners to have nicer drawing stuff, like a better shape, boxes around areas, etc

make multiple player starts...
could be invisible if only one player...

how will i implement this...



marks starts with number..

0 is primary and all levels must have one

1 and higher are secondary...

if netgame show all
if single player only show 0

when players start if player is > 0 look for second start


how to map...


if st = 1 all players get 0

if st = 2
p0 0
p1 1
p2 0
p3 1


if st = 3
p0 0
p1 1
p2 2
p3 0
p4 1
p5 2
p6 0
p7 1


if st = 4
p0 0
p1 1
p2 2
p3 3
p4 0
p5 1
p6 2
p7 3

1st - count number of starts
2nd - player_num % ns = start


test this
   int p[8] = {0};
   for (int ns=1; ns<9; ns++)
   {
      printf("ns = %d\n", ns);
      for (int q=0; q<8; q++) p[q] = q % ns;
      for (int q=0; q<8; q++) printf("p:%d s:%d\n", q, p[q]);
   }
works

now make code in editor work...
item[][7] start index

now make code in game work...

void set_player_start_pos(int p)

it seems to work...

now how to make it safer..
in editor, enforce that:
- starts must not have duplicate indexes
- starts must have consectutive numbers

- at least one start must exist
- no more than 8 starts exist

in create start, make the new start one plus the old one

when changing start number...

how about on save flag if error and let user fix manually...



for the most part I want start blocks to not even be noticed and have the old behaviour
they are only used rarely when multiple starts are desired


one idea would be to have 2 creators, one for the main start and one for secondary starts
secondary starts would have a different shape

when running the main one it will:
-erase any other index 0
-make a new index 0
-ignore any secondary

when running the secondary one
-find the next position
-enter there


















reset vls end level before release

put libraries for linux in main dir for release


---------------------------------------------------------
------------------ web docs -----------------------------
---------------------------------------------------------

look into pandoc...

rename level_array
how about level drawing

working on events...

I don't know if I document re-build bitmaps.
In tiles there is some of it and also some in level background.

At the bottom of files add links to other related docs







netplay overall TODO:





make

netplay - libnet
netplay - status..started
netplay - config..done
netplay - packets..done

netplay - main TODO:


netplay - state_corr TODO:
when are they sent
show dif
tell about dif from start and regular dif


netplay - join TODO:




---------------------------------------------------------
------------------- reduce globals ----------------------
---------------------------------------------------------

edit_fix()
edit_int()
dont even use globals anymore, they just return the val

getxy()  19 calls
getbox() 5 calls
pass pointers to values we want to edit...
fuck it, why bother?


---------------------------------------------------------
------------------------ linux --------------------------
---------------------------------------------------------

---------------------------------------------------------
------------------------ A5 fixes -----------------------
---------------------------------------------------------


---------------------------------------------------------
------------------------ Help file ------------
---------------------------------------------------------

add more bombable and semi-solid blocks..done

change viewer common 'item' to 'object'..done

level editor basics and mouse control both refer to pop-up menu

The level editor has three major modes:

1 - Main editor
- partial level in background, scrollable by moving mouse to screen edges
- most common way to draw block and add objects from selection window
- also can set draw item with mouse b2 and put draw item with mouse b1
- the only mode that has the pop-up menu

2 - Zoom Full Screen
- entire level shown in UL corner
- mostly used for manipulating rectagular selections of the level
- clear, copy, paste, move, save and load selection to disk...
- block file, block frame, block floodfill

3 - Object Viewer
- entire level shown in UL corner
- used for manipulating indiviudual objects, (items, enemies, lifts)
- can move and  edit object properties with buttons and slider
- can move and  edit object properties with map



---------------------------------------------------------
---------------------- Wish List ------------------------
---------------------------------------------------------

end of level stats:

number of:

enemies left
enemies killed
bullets fired

per player:
enemies killed
bullets fired
damage taken
health picked up


make more items that help the puzzle aspect.
like??

a key and lock type thing where you need to bring the key to the lock

companion cubes you can carry around
to jump off or weigh down switches

blocks that take more that one hit to clear

helpless victims that you need to rescue by bringing them to a safe spot

enemy that freezes when you look at it

make more shapes for player, I don't like static shape when jumping or falling

better profiling to find bottleneck

add a more things to customize:
like:

hystersis window
screen messages
bottom messages

make the main game loop called from the event loop
instead of calling the event loop from game loop
see if this improves performance


when carrying item through door with move type, item is left at start until move is done...


fix hysteresis window move when zooming


make other kind of mines, like spikes, lava, flames...etc





