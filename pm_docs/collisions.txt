Collision checks happen at different places in the code.

Most are are in: proc_player_collisions(int p)

where players check for collisions with:

items:
call mItem.proc_item_collision(p, x);

enemies:
set mEnemy.Ei[e][22] = p+1;

eshots:
call mShot.proc_eshot_collision(p, b);

pshots:
call mShot.proc_pshot_collision(p, b);



in enemy_move, each enemy compares itself again all active player bullets
if a collision is detected:
Ei[e][31] = 1;                 // flag that this enemy got shot
Ei[e][26] = p;                 // number of player that shot enemy
then it is up to the enemy what to do with that information

if invincible, ignore it
if block walker, change to block
if multiple hit cannon, get bigger and faster

but most of the time, the enemy will die




in mwShot::move_pshots, pshots are checked for wall collisions and out of bounds
in mwShot::move_eshots, pshots are checked for wall collisions and out of bounds




I think this covers all cases...??

p-i
p-e
p-es
p-ps

e-ps

the only thing that enemies can collide with are:
player
player's shots




then there are the trigger items:

orb
checks for p shots
uses normal player-item collision check also

trigger:
checks for player, enemy, item, pshot, eshot

block damage:
checks for player, enemy, item, pshot, eshot



there is one more case:
vinepod trigger box
which check for players

















  
















