proof of concept

make an app that can display logs...

couldn't get past the qt download page, it just rubs me the wrong way...

mweiss001#gmail.com

Blargit1



https://stackoverflow.com/questions/71208815/how-to-connecte-my-application-qt-cmake-to-mysql-database




Place

find_package(Qt6 REQUIRED COMPONENTS Sql)

before this code

if(${QT_VERSION_MAJOR} GREATER_EQUAL 6)
    qt_add_executable(appName MANUAL_FINALIZATION ${PROJECT_SOURCES})
else()
    if(ANDROID)
        add_library(appName SHARED ${PROJECT_SOURCES})
    else()
        add_executable(appName ${PROJECT_SOURCES})
    endif()
endif() 

and then add

target_link_libraries(appName PRIVATE Qt6::Sql)







#include <QSqlDatabase>

    QSqlDatabase db = QSqlDatabase::addDatabase("QMYSQL");
    db.setHostName("bigblue");
    db.setDatabaseName("flightdb");
    db.setUserName("acarlson");
    db.setPassword("1uTbSbAs");
    bool ok = db.open();    


QSqlDatabase db = QSqlDatabase::addDatabase("QODBC");
db.setDatabaseName("Driver={MySQL ODBC 5.3 Unicode Driver};DATABASE=test;");
db.setUserName("root");
db.setPassword("password");
if (!db.open()) {
    qDebug() << db.lastError().text();
} else {
    qDebug("success");
}



database error: "[Microsoft][ODBC Driver Manager] Data source name not found and no default driver specified, IM002 QODBC: Unable to connect"


db = QSqlDatabase::addDatabase("QODBC");
db.setDatabaseName("Driver={MySQL ODBC 5.1 Driver};DATABASE=agp-dbserver01;");
db.setUserName("xcdr");
db.setPassword("xcdr");@





installed the mysql connector odbc 8.4

Running as Admin
Changing the directory...
Registering Unicode driver
Checking if "MySQL ODBC 8.4 Unicode Driver" is not already registered
Registering "MySQL ODBC 8.4 Unicode Driver"
Success: Usage count is 1
Registering ANSI driver
Checking if "MySQL ODBC 8.4 ANSI Driver" is not already registered
Registering "MySQL ODBC 8.4 ANSI Driver"
Success: Usage count is 1
+-----------------------------------------------------+
| DONE                                                |
+-----------------------------------------------------+
|                                                     |
| Hopefully things went well; the Connector/ODBC      |
| driver has been registered.                         |
|                                                     |
| Connector/ODBC is ready to use.                     |
|                                                     |
| The most common thing to do next is to go to the    |
| Control Panel and find the ODBC Administrator -     |
| then use it to create a Data Source Name (DSN)      |
| so you (and your application) can connect to a      |
| MySQL server.                                       |
|                                                     |
| Alternatively you can use the MyODBC Installer      |
| utility to define data sources.                     |
|                                                     |
+-----------------------------------------------------+
Press any key to continue . . .




---------------------------------------

https://github.com/thecodemonkey86/qt_mysql_driver/releases

Since the Qt Company cannot provide qsqlmysql.dll / libqsqlmysql.so in binary form, you have to build it on your own, which can be a pain. Here is a build for various Qt versions. Get precompiled qsqlmysql.dll for Windows / libqsqlmysql.so for Linux from releases. Be sure to match your Qt version and compiler (Microsoft Visual C++/MSVC, MinGW) EXACTLY. For example if you use Qt 6.4.2, you cannot use driver version 6.4.1 or 6.4.3


how do I know what compiler I have? Does this mean I have to build Qt?

When I installed Qt it also installed Qt maintenance tool.
Ran that and found my qt version is 6.7.1 and my MinGW version is 11.2.0 64bit

but there is nothing in there about mysql..



Deployment

    copy qsqlmysql.dll (release build) / MSVC: qsqlmysqld.dll, MinGW: qsqlmysql.dll+qsqlmysql.debug (debug build) to subdirectory "sqldrivers" of application directory (or build directory while developing)

    copy libmysql.dll (MySQL library) and the libcrypto/libssl OpenSSL libraries from zip file (or from https://dev.mysql.com and https://kb.firedaemon.com/support/solutions/articles/4000121705 respectively) to application directory (or more generally, any directory that is registered in PATH environment variable)


this is what i downloaded:
qsqlmysql.dll_Qt_SQL_driver_6.7.1_MinGW_11.2.0_64-bit.zip

then I copied the files and put them in the same dir as executable

    QSqlDatabase db = QSqlDatabase::addDatabase("QMYSQL");
    db.setHostName("purplemartians.org");
    db.setDatabaseName("Syslog");
    db.setUserName("pete");
    db.setPassword("park");
    bool ok = db.open();

06:18:00: Starting C:\Users\m\Documents\test1\build\Desktop_Qt_6_7_1_MinGW_64_bit-Debug\test1.exe...
QSqlDatabase: QMYSQL driver not loaded
QSqlDatabase: available drivers: QSQLITE QMIMER QODBC QPSQL
database error: "Driver not loaded Driver not loaded"
       


OMFG I got it to work!!!!
I copied the sqldrivers directory and the three other files to the same dir as my executable







/*

    QSqlDatabase db = QSqlDatabase::addDatabase("QODBC");
    //    db.setDatabaseName("SystemEvents");
//    db.setHostName("purplemartians.org");

    db.setDatabaseName("Driver={MySQL ODBC 8.4 ANSI Driver};DATABASE=rsyslog_odbc;");
    db.setUserName("pete");
    db.setPassword("park");
    bool ok = db.open();
*/



    QSqlDatabase db = QSqlDatabase::addDatabase("QMYSQL");
    db.setHostName("purplemartians.org");
    db.setDatabaseName("Syslog");
    db.setUserName("pete");
    db.setPassword("park");
    bool ok = db.open();

    if (!ok) qDebug() << "database error:" << db.lastError().text();
    else
    {
        QSqlQuery query;
        query.exec("SELECT Message FROM SystemEvents WHERE ID = 120895");
        while (query.next()) {
            QString name = query.value(0).toString();
            ui->textBrowser->setPlainText(name);
        }
    }
}






































I am trying to figure out how to call some code in my own functions in qt...
also some place to store variables

make a class?

m_base.cpp
m_base.h

right click on source and add new...class..called m_base

make it visible with .h


18526863
18548837

SELECT MAX(ID) FROM SystemEvents


the server is doing this 40 times per second: rew and save state..
I have 18 million rows in SystemEvents


It is time to work on getting the data from SystemEvents to a custom database on my own...

I will need code to scrape SystemEvents and do this. What Language?

I have some cron called PHP on the server already...
I could do it in c++ with the Qt app...

What will my main table look like?

First what feilds from System Events do I want do keep?


Message
ReceivedAt
Device Reported Time? (not unless I actually record and add it)

I need to make something to mark the ones that come from purplemartians

I think I will use SysLogTag

I don't feel like any other fields can be reliably set when I pass UDP packets, so I plan to do the rest in the message field.
I might keep FromHost, but lets rslsylog fill it out on the server..

new table

ID
ReceivedAt
RawMessage

player number
frame
log message line type
trunc message

this looks pretty simple...

what if I have extra fields for number that are specific to certain message types
like 8 ints and 8 floats?

can be a later thing....



what do I need to do first?

make my logging add purplemartians in SysLogTag

what if I shortened it to pm? done


Make the new table.

Make it under the same DATABASE?...idk..yes for now

CREATE TABLE pm_log (
  id                INT AUTO_INCREMENT,
  received_at       DATETIME,
  agt               DOUBLE, 
  player_num        INT,
  message_type      INT,
  frame_num         INT,    
  message           text,
  PRIMARY KEY(id)
);

done...

 use indexOf. Is th









To create a line chart, a QLineSeries instance is needed. Let's create one.

auto series = new QLineSeries;

Then we add data to the series. We can use the append() member function or use the stream operator.

series->append(0, 6);
series->append(2, 4);
series->append(3, 8);
series->append(7, 4);
series->append(10, 5);
*series << QPointF(11, 1) << QPointF(13, 3) << QPointF(17, 6) << QPointF(18, 3) << QPointF(20, 2);

To present the data on the chart we need a QChart instance. We add the series to it, create the default axes, and set the title of the chart.

auto chart = new QChart;
chart->legend()->hide();
chart->addSeries(series);
chart->createDefaultAxes();
chart->setTitle("Simple Line Chart");

Then we create a QChartView object with QChart as a parameter. This way we don't need to create a QGraphicsView scene ourselves.

createDefaultChartView(chart);

The chart is ready to be shown.






added to CMakeLists.txt

find_package(Qt6 REQUIRED COMPONENTS Sql, Charts)

target_link_libraries(test1 PRIVATE Qt6::Charts)

in mbase.h

#include <QChart>
#include <QLineSeries>

QLineSeries* series;

in mbase.cpp

   series = new QLineSeries;

   series->append(0, 6);
   series->append(2, 4);
   series->append(3, 8);
   series->append(7, 4);
   series->append(10, 5);



in mpmlogview.h
#include <QChart>
#include <QChartView>

QChart* chart;
QChartView* chartView;



in mpmlogview.cpp

   chart = new QChart;
   chart->legend()->hide();
   chart->addSeries(mbase.series);
   chart->createDefaultAxes();
   chart->setTitle("Simple Line Chart");

   chartView = new QChartView(chart);

   vbox->addWidget(chartView);



that was all I needed to display a chart....



now how can I make a chart display from a model


first of all...

I should make this code somewhat segregated...

load the model from my new status table


ok now I have a thingy...

my model has muliple players

load a different model for each player?

i need a different line series for each player...
is this the best way to do it?

it seems to work...


can I make the graph resizable


This functionality is provided by QChartView:

QChartView v;
v.setRubberBand(QChartView::HorizontalRubberBand);
this is awesome, but how do I zoom back out?
left click and drag - zoom in to selection
right click - zoom out...

I want to be able to drag also

maybe later


what else for now?


should I put this on its own tab

or at least its own widget that I can put where I want...


how am i going to handle this proliferation of variables, classes and the like?



make all common stuff live in mbase...

make classes for things you could display in many places


I want to have common:
sessions
it would be nice if I had a session_id that was part of every table

I think I can handle it by having start and end dt and player number

I will have a way of selecting which sessions I want to look at...
I can select more than one.

This tab will be called the data selection tab

At the top you can set the ip, db, usr, pwd...

It will show you the total range of the data

Then it will show you the sessions and some data for each...

Then you can select one or more sessions...

also the limit of the number of records to load into the log models and the status models

this seems like to much to cram into one thing, how about just start and end ranges of data to load into models?






bar chart horizontal with datetime axis...


I think I need to figure out more about graphs then simply using model to drive them...

create my own line series from a model...

then I could make it a datetime axis


if my datetime axis only has a resolution of 1 second....

can I do better? I should be able to...

anyway I have datetime x axis figured out

now I want to get horizontal boxes


I am going to ask on the Qt forums...


Word it well....



I am trying to create a specific type of chart with QCharts.
The x axis needs to be DateTime, I have figured out how to do that.
I have data called 'sessions' that has a start and endtime in DateTime format.
These sessions are from multiple clients and the time ranges can overlap.
I would like to show them as horizontal rectangles that span the start and end times.
Then I would like to be able to select one or more of them and extract the earliest and latest datetimes.

I am fairly new to Qt and would appreciate if anyone with more experience could point me in the right direction.





------------------


make a class and a widget for sessions, but keep the data in mbase so others can use it...


while I am at it, nail down some naming conventions...


this new class:



QModelIndexList selection = yourTableView->selectionModel()->selectedRows();

// Multiple rows can be selected
for(int i=0; i< selection.count(); i++)
{
    QModelIndex index = selection.at(i);
    qDebug() << index.row();
}

now I want to connect selection changed

this is so painfull...it takes so long to do such simple things....


now I want to have a global start and end datetime

make up names
declare in mbase

set them when changing session list..

use them as filters when doing sql queries...



I already have most of this functionality in my daterange widget....

what if I just add actual QDate time thing to mbase and make them both use it..

QDateTime dtStart;
QDateTime dtEnd;



---------------


I just lost a huge section of info about what I was working on when I copied and pasted from notes in pm to here...damn....

20240712


what am I working on now?


resizing charts with splitter

working on min height, etc...


how do I get series colors after I apply a theme, so I can use them to color my custom legend?


how do I backup this project?

it was in c:/users/m/decouments/test1
size 65M
133k sources only



how do I make a standalone executable?

--------------------------------------------
---   how to copy and relocate sources   ---
--------------------------------------------

copy the folder to a new place

delete the build dir
delete CMakeList.txt.user

rename all occurances of executable name 'test1' to 'pm_log' in CMakeList.txt

open project in Qt Creator by opening CMakeList.txt

on the Configure Project page leave all targets selected then click 'configure project'

choose a target and build...

12:27:31: Starting C:\Users\m\Desktop\pm_log\build\Desktop_Qt_6_7_1_MinGW_64_bit-Debug\pm_log.exe...
QSqlDatabase: QMYSQL driver not loaded
QSqlDatabase: available drivers: QSQLITE QMIMER QODBC QPSQL
database error: "Driver not loaded Driver not loaded"
QSqlQuery::exec: database not open
12:27:39: C:\Users\m\Desktop\pm_log\build\Desktop_Qt_6_7_1_MinGW_64_bit-Debug\pm_log.exe exited with code 0

copy 3 files and one dir to same folder as executable:

libmysql.dll
libssl-3-x64.dll
libcrypto-3-x64.dll
sqldrivers (folder)


-----------------------------------------------
---   how to make a standalone executable   ---
-----------------------------------------------

C:\Qt\6.7.1\mingw_64\bin\windeployqt C:\Users\m\Desktop\pm_log\build\Desktop_Qt_6_7_1_MinGW_64_bit-Debug

now I can run pm_log.exe from its folder without qt creator running

the whole folder is over 100M
but this is the debug target...

start over:

delete build folder
target Debug
30M
add sql drivers:
44M
C:\Qt\6.7.1\mingw_64\bin\windeployqt C:\Users\m\Desktop\pm_log\build\Desktop_Qt_6_7_1_MinGW_64_bit-Debug
108M

try min_release
target MinSizeRel
8M
add sql drivers:
24M
C:\Qt\6.7.1\mingw_64\bin\windeployqt C:\Users\m\Desktop\pm_log\build\Desktop_Qt_6_7_1_MinGW_64_bit-MinSizeRel
84M



---------------------------

what am I working on next?


resizing charts with splitter
working on min height, etc...
when I adjust a chart larger, what happens to other charts? especially if they are already minimum size??


how do I get series colors after I apply a theme, so I can use them to color my custom legend?

frame as x axis


pop up dialog for db setting

save chart selection



20240713

save charts visible is working, how about saving size as well....

I could save the size list from the splitter...
I would need to make the splitter visible, maybe declare it in mbase
or do I?
could I just get the init code to read it from the settings file?

made QSettings * settings declared and created in mbase, so it is visible for the whole program...
how about I make the splitter save to it when resized?
and load from it when created?
this works perfectly!

I think I found someting I am doing wrong...
when the charts are clicked on or off, all I do is set visible in mbase

but when I resize the charts with splitter it is based on size > 0
fixed this is auto size stuff but still have issues when enabling a chart
its size is zero..

should I make another function that looks at the splitter and if any visible are size 0, sets them to min size

I did not need to do this, this one setting did it for me:

childrenCollapsible : bool
This property holds whether child widgets can be resized down to size 0 by the user
By default, children are collapsible. It is possible to enable and disable the collapsing of individual children using setCollapsible().


I am very happy with how this is working out...

now about the series colors....
- I could force my colors back after changing theme
that was so easy to do, just called controlsChanged after setting theme

or I could see if I can get the colors somehow
if I could, what would I do with them? overwrite my array colors? yes...


I have it done:

added color setup to updateLegend() as well as constructor

void mChartsWidgetControlWidget::updateLegend()
{
   for (int i=0; i<8; i++)
   {
      QPalette p = legendSel[i]->palette();
      p.setColor(QPalette::Active, QPalette::WindowText, mbase.statChartSeriesStructArray[i].col);
      legendSel[i]->setPalette(p);




void mChartsWidget::changeTheme()
{
   qDebug() << "mChartsWidget::changeTheme()";
   for (int i=0; i<NUM_CHARTS; i++)
      statChartView[i]->chart()->setTheme(static_cast<QChart::ChartTheme>(mbase.mChartsWidgetChartTheme));

   // find series colors
   for (int s=0; s<8; s++)
      mbase.statChartSeriesStructArray[s].col = statChartSeries[0][s]->color();
   
   // change all series colors   
   controlsChanged();
   
   // change legend colors
   mbase.updateLegendFunction();
}

I can easily make my original colors persist by commenting out:

   // find series colors
//   for (int s=0; s<8; s++)
//      mbase.statChartSeriesStructArray[s].col = statChartSeries[0][s]->color();




-------------------

make a group box for theme
make a checkbox 'allow theme to change series color'
or maybe 'my series colors'
then make something to reload them...

this will reload them:
void m_base::initStatChartSeriesStructArray(void)



is seems to work:

when checked, selecting a new them keeps the original color
when not checked, selecting a new them changes colors

if color are set by a theme, clicking the box reverts them to original

but if colors are original, clicking the box does not set them to the theme???

i think the theme is not applied if it is the same...



void mChartsWidgetControlWidget::keepSeriesColorsClicked()
{
   bool checked = keepSeriesColors->isChecked();
   mbase.mChartsWidgetForceMySeriesColors = checked;

   if (!checked) // force theme reload to get theme colors
   {
      mbase.mChartsWidgetChartTheme++;
      mbase.updateChartThemeFunction();
      mbase.mChartsWidgetChartTheme--;
   }
   mbase.updateChartThemeFunction();
}

move this to where theme is actually changed....

void mChartsWidget::changeTheme()
{
   qDebug() << "mChartsWidget::changeTheme()";

   // test if theme is the same as current theme

   int newTheme = mbase.mChartsWidgetChartTheme;
   int oldTheme = statChartView[0]->chart()->theme();

   qDebug() << "old theme:" << oldTheme << "  new theme:" << newTheme;

   if (oldTheme == newTheme)
   {
      qDebug() << "new theme is the same as old theme";

      int tmpTheme = newTheme + 1;
      if (tmpTheme > 7) tmpTheme = 0;

      qDebug() << "setting tmpTheme:" << tmpTheme;


      // set temp theme
      for (int i=0; i<NUM_CHARTS; i++)
         statChartView[i]->chart()->setTheme(static_cast<QChart::ChartTheme>(tmpTheme));
   }


   qDebug() << "setting newTheme:" << newTheme;

   for (int i=0; i<NUM_CHARTS; i++)
      statChartView[i]->chart()->setTheme(static_cast<QChart::ChartTheme>(newTheme));




ok, now how about saving:
theme
line size
keep series colors


save line size when it changes

void mChartsWidgetControlWidget::lineSizeChanged()
{
   //qDebug() << "Line Size Changed" << lineSizeSpinBox->value();
   mbase.mChartsWidgetPlotLineSize = lineSizeSpinBox->value();
   mbase.settings->setValue("mChartsWidgetPlotLineSize", mbase.mChartsWidgetPlotLineSize);
   mbase.chartsWidgetsControlsChangedFunction();
}

read line size when creating

   // Create spinbox to modify line size
   lineSizeSpinBox = new QDoubleSpinBox(this);

   // get initial value from settings
   mbase.mChartsWidgetPlotLineSize = mbase.settings->value("mChartsWidgetPlotLineSize", 1).toFloat();
   lineSizeSpinBox->setValue(mbase.mChartsWidgetPlotLineSize);


that was so easy!!

now do keep series colors...should be just as easy...done

now theme...

Now I have so much done:
theme, line size, keep colors, visible charts, splitter sizes, are all saved and restored

clean up the constructor and rearrange the layout grid...done...

now what?







------------------------

downloaded stlyesheet from 

https://qss-stock.devsecstudio.com/documentation.php

copied Darkeum.qss file to same dir as exe


#include "mMainWindow.h"
#include <QApplication>
#include <QFile>

int main(int argc, char *argv[])
{
   QFile file("Darkeum.qss");
   file.open(QFile::ReadOnly);
   QString styleSheet { QLatin1String(file.readAll()) };
   
   QApplication a(argc, argv);

   a.setStyleSheet(styleSheet);
   
   mMainWindow w;
   w.setWindowTitle("pm logs");
   w.show();
   return a.exec();
}









Download/clone the project and copy the following files to your application directory (keep the existing directory hierarchy). Substitute the all the THEME words by the currently available (dark/light) the theme you need to use.

        qdarkstyle/THEME/THEMEstyle.qss
        qdarkstyle/THEME/THEMEstyle.qrc
        qdarkstyle/THEME/rc/ (the whole directory)

Add qdarkstyle/THEME/THEMEstyle.qrc to your .pro file as follows:

    RESOURCES += qdarkstyle/THEME/THEMEstyle.qrc

what I did was add:

if(${QT_VERSION_MAJOR} GREATER_EQUAL 6)
    qt_add_executable(pm_log
        MANUAL_FINALIZATION
        ${PROJECT_SOURCES}
        m_base.h m_base.cpp
        mlogmessagetypeselector.h mlogmessagetypeselector.cpp
        mLogView.h mLogView.cpp
        mlogdaterange.h mlogdaterange.cpp
        msqlwidget.h msqlwidget.cpp
        mpmselect.h mpmselect.cpp
        mdelegate.h

        mSessionsWidget.h mSessionsWidget.cpp
        mdelegate2.h
        mChartView.h
        mChart.h

        mChartsWidget.h mChartsWidget.cpp
        mChartViewCrosshairs.h mChartViewCrosshairs.cpp
        mChartsWidgetControlWidget.h mChartsWidgetControlWidget.cpp

        qdarkstyle/dark/darkstyle.qrc



Load the stylesheet:

    QFile f(":qdarkstyle/THEME/THEMEstyle.qss");

    if (!f.exists())   {
        printf("Unable to set stylesheet, file not found\n");
    }
    else   {
        f.open(QFile::ReadOnly | QFile::Text);
        QTextStream ts(&f);
        qApp->setStyleSheet(ts.readAll());
    }

Note: The ":" in the file name is necessary to define that file as a resource library. For more information see the discussion here.



What about defining a const string and changing only the color ?

const QString ss = "QComboBox::drop-down {border-width: 0px;} QComboBox::down-arrow {image: url(noimg); border-width: 0px;} QComboBox { background:%1 }";
QColor c(Qt::red);  
//Set background red
ui->comboBox_0->setStyleSheet(ss.arg(c.name()));

//...
 c = QColor(Qt::blue); 
//Set background blue
ui->comboBox_0->setStyleSheet(ss.arg(c.name()));

const QString ss = "QComboBox::drop-down {border-width: 0px;} QComboBox::down-arrow {image: url(noimg); border-width: 0px;} QComboBox { background:%1 }";


fixed the legend colors with drawstyle stylesheet!!

      const QString ss = "QCheckBox {  color: %1 }";
      legendSel[i]->setStyleSheet(legendSel[i]->styleSheet() + ss.arg(mbase.statChartSeriesStructArray[i].col.name()));
      
      // this method works, but will not override the stylesheet      
      // QPalette p = legendSel[i]->palette();
      // p.setColor(QPalette::Active, QPalette::WindowText, mbase.statChartSeriesStructArray[i].col);
      // legendSel[i]->setPalette(p);





can I implement the frame x axis?

make a check box to toggle it, a variable to hold it and save in settings...done...

removed crosshairs for now...


in ChartsWidget I create a DateTimeAxis...how do I get around that?
remove it and create another one?


I am thinking I will probably need to reload all the data if I change the axis anyway

so make creating the X axis part of the update stuff



how are charts, chartview, series, axis all related?

I want to redo axis, how far do I have to go?

- create chart
- create axis and add to chart
- create series
- attach axis to series

- create chartview
- add chart to chartview

- add chartview to splitter

if I redo everything, how do I clean up first?

- delete series
- remove axis from charts
- delete axis
- delete charts
- delete chartview

delete splitter...

actually the only thing I had to do was delete the main layout:

   delete(this->layout());

then I use the same code to build in the constructor as I do when i update the sql

i changed the x and y axis to being created just as needed
it used to be an array in the header..

then when I create the x axis it could be datetime or value

      if (mbase.mChartsWidgetXAxisFrame)
      {
         QValueAxis * statChartXaxis = new QValueAxis;
         statChartXaxis->setTitleText("Frame");
         statChart[i]->addAxis(statChartXaxis, Qt::AlignBottom);
      }
      else
      {
         QDateTimeAxis * statChartXaxis = new QDateTimeAxis;
         statChartXaxis->setTitleText("Time");
         statChartXaxis->setFormat("HH:mm:ss.zzz");
         statChart[i]->addAxis(statChartXaxis, Qt::AlignBottom);
      }

then when I need to use the axes after that, I get them with: 

   // set the range for all charts
   // -----------------------------------
   for (int i=0; i<NUM_CHARTS; i++)
   {
      // get the first x axis from the chart
      QList qlxa = this->statChart[i]->axes(Qt::Horizontal);
      qlxa.at(0)->setRange(mbase.sessionsDtStart, last);

      // get the first y axis from the chart
      QList qlya = this->statChart[i]->axes(Qt::Vertical);
      qlya.at(0)->setRange(statChartMinY[i], statChartMaxY[i]);
   }

      if (mbase.mChartsWidgetXAxisFrame)
      {
         qDebug() << "value axis";

//         statChartXaxis[i] = new QValueAxis;
//         statChartXaxis[i]->setTitleText("Frame");
//         statChart[i]->addAxis(statChartXaxis[i], Qt::AlignBottom);
         QValueAxis * statChartXaxis = new QValueAxis;
         statChartXaxis->setTitleText("Frame");
         statChart[i]->addAxis(statChartXaxis, Qt::AlignBottom);
      }
      else
      {
         qDebug() << "datetime axis";
//         statChartXaxis[i] = new QDateTimeAxis;
//         statChartXaxis[i]->setTitleText("Time");
//         statChartXaxis[i]->setFormat("HH:mm:ss.zzz");
//         statChart[i]->addAxis(statChartXaxis[i], Qt::AlignBottom);

         QDateTimeAxis * statChartXaxis = new QDateTimeAxis;
         statChartXaxis->setTitleText("Time");
         statChartXaxis->setFormat("HH:mm:ss.zzz");
         statChart[i]->addAxis(statChartXaxis, Qt::AlignBottom);
      }

//      statChartXaxis[i]->setTitleFont(labelsFont);
      // statChartXaxis[i]->setVisible(false);

      QValueAxis * statChartYaxis = new QValueAxis;
      statChartYaxis->setTitleText(mbase.statChartGraphTypeArray[i].display_name);
      statChartYaxis->setLabelFormat("%3.1f");
      statChart[i]->addAxis(statChartYaxis, Qt::AlignLeft);



      // statChartYaxis[i] = new QValueAxis;
      // statChartYaxis[i]->setTitleText(mbase.statChartGraphTypeArray[i].display_name);
      // statChartYaxis[i]->setLabelFormat("%3.1f");
      // statChart[i]->addAxis(statChartYaxis[i], Qt::AlignLeft);




now make the crosshairs and mouse wheel scroll work again...done


next... adjustable number of records in the model, and show the time range of that 

what do i call that?






I have a memory leak...probably due to me not freeing new object when I update graphs


some stats:
25.7M no charts loaded
36.7M load last one in chart
46.3  load second last one
55.7  load last one
65.4  load 2nd last

approx 10M per chart reload

add this code to delete all charts

   for (int i=0; i<NUM_CHARTS; i++)
      delete statChart[i];


24.3M no charts loaded
30.2M load last one in chart
31.8  load second last one
33.6  load last one
34.9  load 2nd last

approx 1.5M per chart reload


what else can I destroy?

   for (int i=0; i<NUM_CHARTS; i++)
   {
      delete statChart[i];
      delete statChartView[i];
   }

25.7
30.1
30.3
30.2
30.3
30.5
30.4


way better!!


i have a bug though

when in frame mode the last charts all look the same...is is because they all start at frame 0??



I want some way to see both frame and time at the same time and why is there such a difference?




these status logs are just what the server records, once per frame, they should not be out of order


do one more graph called frame to check if they are...

I found some cases of frame 0 in the middle of the data...how can I fix this?
order by id?

wait...why is there random frame 0 in the middle of the data? this is not what should happen?

lets add back in the table view and see what happens around this time...





I have 3 widgets now:
mSessionsWidget
mChartsWidget
mChartsWidgetControlWidget

mSessionsWidget is common

they are all children of mLogView

I want to add:
2 tableviews

   // message line type selector

   // column select widget
   
   // sql execute button

   // auto exec check box

   // number of rows label
   
   // font size spin box


could I make these into a widget:





rename some classes:

mpmselect to mTableColumnSelectWidget ..done

mlogmessagetypeselector to mTableRowSelectWidget 

done...

make their selections saved


make table2 able to do other players than 1 

do col sel first





the anomalous data is not frame 0, it is approx x frames below its siblings


evenly spaced 728 729 730 731

but between 728 and 729 is 718 (-10)

between 739 and 740 is 719 (-20)


362 363 354 (-8)

372 373 355 (-17)

382 383 356 (-26)

----
patterns:

the anomalous data are sequential frames 719, 718 and 354, 355, 356

they appear to be inserted every 10-11 frames

I wonder where the bug is?
Is this how the data is stored on files on the disk?

look at the 300 range one:

actual time:

2024-07-01 9:14:59.199 - 774


2024-07-01 09:14:58.974,1352,0,0,3.7,0.0,0.0,  0,0.0,0.0,421,  0,  1,  0
2024-07-01 09:14:58.974,1352,1,0,3.9,6.7,0.0,343,0.0,0.0,421,  0,  1,  0
2024-07-01 09:14:58.999,1353,0,0,3.6,0.0,0.0,  0,0.0,0.0,429,1386,  1, 11
2024-07-01 09:14:58.999,1353,1,0,1.5,7.1,0.0,351,0.0,0.0,429,1386,  1, 11
2024-07-01 09:14:59.24,1354,0,0,3.7,0.0,0.0,  0,0.0,0.0,400,  0,  1,  0
2024-07-01 09:14:59.24,1354,1,0,1.5,7.1,0.0,322,0.0,0.0,400,  0,  1,  0
2024-07-01 09:14:59.49,1355,0,0,3.5,0.0,0.0,  0,0.0,0.0,400,983,  1,  8
2024-07-01 09:14:59.49,1355,1,0,1.4,7.6,0.0,322,0.0,0.0,400,983,  1,  8
2024-07-01 09:14:59.74,1356,0,0,3.6,0.0,0.0,  0,0.0,0.0,377,872,  1,  7
2024-07-01 09:14:59.74,1356,1,1,1.4,0.6,0.0,299,0.0,0.0,377,872,  1,  7
2024-07-01 09:14:59.99,1357,0,0,3.6,0.0,0.0,  0,0.0,0.0,400,723,  1,  6
2024-07-01 09:14:59.99,1357,1,1,3.7,-0.6,0.0,322,0.0,0.0,400,723,  1,  6
2024-07-01 09:14:59.124,1358,0,0,3.7,0.0,0.0,  0,0.0,0.0,421,381,  1,  3
2024-07-01 09:14:59.124,1358,1,1,3.7,-0.6,0.0,343,0.0,0.0,421,381,  1,  3
2024-07-01 09:14:59.149,1359,0,0,3.6,0.0,0.0,  0,0.0,0.0,441,1065,  1,  9
2024-07-01 09:14:59.149,1359,1,1,3.8,-2.2,0.0,363,0.0,0.0,441,1065,  1,  9
2024-07-01 09:14:59.174,1360,0,0,3.7,0.0,0.0,  0,0.0,0.0,440,723,  1,  6
2024-07-01 09:14:59.174,1360,1,1,3.8,-3.6,0.0,362,0.0,0.0,440,723,  1,  6
2024-07-01 09:14:59.199,1361,0,0,3.7,0.0,0.0,  0,0.0,0.0,404,723,  1,  6
2024-07-01 09:14:59.199,1361,1,1,3.7,-4.2,0.0,326,0.0,0.0,404,723,  1,  6
2024-07-01 09:14:59.224,1362,0,0,3.6,0.0,0.0,  0,0.0,0.0,467,673,  2,  6
2024-07-01 09:14:59.224,1362,1,1,3.7,-4.9,0.0,327,0.0,0.0,467,673,  2,  6
2024-07-01 09:14:59.249,1363,0,0,3.6,0.0,0.0,  0,0.0,0.0,424,881,  1,  8
2024-07-01 09:14:59.249,1363,1,1,3.7,-5.9,18.7,346,0.0,0.0,424,881,  1,  8
2024-07-01 09:14:59.274,1364,0,0,3.6,0.0,0.0,  0,0.0,0.0,406,620,  1,  5
2024-07-01 09:14:59.274,1364,1,1,3.7,-3.6,18.7,328,0.0,0.0,406,620,  1,  5
2024-07-01 09:14:59.299,1365,0,0,3.6,0.0,0.0,  0,0.0,0.0,383,828,  1,  7
2024-07-01 09:14:59.299,1365,1,1,3.7,-3.7,18.7,305,0.0,0.0,383,828,  1,  7
2024-07-01 09:14:59.324,1366,0,0,3.6,0.0,0.0,  0,0.0,0.0,382,724,  1,  6
2024-07-01 09:14:59.324,1366,1,1,3.7,-4.7,18.7,304,0.0,0.0,382,724,  1,  6
2024-07-01 09:14:59.349,1367,0,0,3.6,0.0,0.0,  0,0.0,0.0,392,724,  1,  6
2024-07-01 09:14:59.349,1367,1,1,3.7,-5.3,18.7,314,0.0,0.0,392,724,  1,  6
2024-07-01 09:14:59.374,1368,0,0,3.6,0.0,0.0,  0,0.0,0.0,397,724,  1,  6
2024-07-01 09:14:59.374,1368,1,1,3.7,-5.3,18.7,319,0.0,0.0,397,724,  1,  6
2024-07-01 09:14:59.399,1369,0,0,3.6,0.0,0.0,  0,0.0,0.0,407,724,  1,  6
2024-07-01 09:14:59.399,1369,1,1,3.6,-6.7,18.7,329,0.0,0.0,407,724,  1,  6
2024-07-01 09:14:59.424,1370,0,0,3.7,0.0,0.0,  0,0.0,0.0,424,724,  1,  6
2024-07-01 09:14:59.424,1370,1,1,3.6,-7.7,18.7,346,0.0,0.0,424,724,  1,  6
2024-07-01 09:14:59.449,1371,0,0,3.6,0.0,0.0,  0,0.0,0.0,417,724,  1,  6
2024-07-01 09:14:59.449,1371,1,1,3.6,-8.8,18.7,339,0.0,0.0,417,724,  1,  6
2024-07-01 09:14:59.474,1372,0,0,3.6,0.0,0.0,  0,0.0,0.0,396,724,  1,  6
2024-07-01 09:14:59.474,1372,1,1,3.6,-10.1,18.7,318,0.0,0.0,396,724,  1,  6
2024-07-01 09:14:59.499,1373,0,0,3.6,0.0,0.0,  0,0.0,0.0,396,724,  1,  6
2024-07-01 09:14:59.499,1373,1,1,3.6,-11.6,18.7,318,0.0,0.0,396,724,  1,  6
2024-07-01 09:14:59.524,1374,0,0,3.6,0.0,0.0,  0,0.0,0.0,407,724,  1,  6
2024-07-01 09:14:59.524,1374,1,1,3.6,-12.1,18.7,329,0.0,0.0,407,724,  1,  6
2024-07-01 09:14:59.549,1375,0,0,3.7,0.0,0.0,  0,0.0,0.0,411,149,  1,  1
2024-07-01 09:14:59.549,1375,1,1,3.6,-12.1,18.7,333,0.0,0.0,411,149,  1,  1
2024-07-01 09:14:59.574,1376,0,0,3.6,0.0,0.0,  0,0.0,0.0,423,978,  1,  8
2024-07-01 09:14:59.574,1376,1,1,1.4,-13.3,18.7,345,0.0,0.0,423,978,  1,  8
2024-07-01 09:14:59.599,1377,0,0,3.6,0.0,0.0,  0,0.0,0.0,387,785,  1,  6
2024-07-01 09:14:59.599,1377,1,1,1.4,-13.3,18.7,309,0.0,0.0,387,785,  1,  6
2024-07-01 09:14:59.624,1378,0,0,3.7,0.0,0.0,  0,0.0,0.0,398,342,  1,  3
2024-07-01 09:14:59.624,1378,1,1,1.3,-15.1,18.7,320,0.0,0.0,398,342,  1,  3
2024-07-01 09:14:59.649,1379,0,0,3.6,0.0,0.0,  0,0.0,0.0,401,724,  1,  6
2024-07-01 09:14:59.649,1379,1,1,5.0,-15.7,18.7,323,0.0,0.0,401,724,  1,  6
2024-07-01 09:14:59.674,1380,0,0,3.6,0.0,0.0,  0,0.0,0.0,410,724,  1,  6
2024-07-01 09:14:59.674,1380,1,1,3.6,-16.3,18.7,332,0.0,0.0,410,724,  1,  6
2024-07-01 09:14:59.699,1381,0,0,3.7,0.0,0.0,  0,0.0,0.0,444,724,  1,  6
2024-07-01 09:14:59.699,1381,1,1,3.6,-16.9,18.7,366,0.0,0.0,444,724,  1,  6
2024-07-01 09:14:59.724,1382,0,0,3.7,0.0,0.0,  0,0.0,0.0,450,724,  1,  6
2024-07-01 09:14:59.724,1382,1,1,3.6,-17.4,18.7,372,0.0,0.0,450,724,  1,  6
2024-07-01 09:14:59.749,1383,0,0,3.7,0.0,0.0,  0,0.0,0.0,418,1448,  1, 12
2024-07-01 09:14:59.749,1383,1,1,3.6,-19.0,18.7,340,0.0,0.0,418,1448,  1, 12
2024-07-01 09:14:59.774,1384,0,0,3.7,0.0,0.0,  0,0.0,0.0,420,620,  1,  5
2024-07-01 09:14:59.774,1384,1,1,3.6,-19.9,18.7,342,0.0,0.0,420,620,  1,  5
2024-07-01 09:14:59.799,1385,0,0,3.7,0.0,0.0,  0,0.0,0.0,432,253,  1,  2
2024-07-01 09:14:59.799,1385,1,1,3.6,-19.9,18.7,354,0.0,0.0,432,253,  1,  2
2024-07-01 09:14:59.824,1386,0,0,3.6,0.0,0.0,  0,0.0,0.0,437,  0,  1,  0
2024-07-01 09:14:59.824,1386,1,1,3.6,-19.9,18.7,359,0.0,0.0,437,  0,  1,  0
2024-07-01 09:14:59.849,1387,0,0,3.6,0.0,0.0,  0,0.0,0.0,449,128,  1,  1
2024-07-01 09:14:59.849,1387,1,1,3.6,-19.9,18.7,371,0.0,0.0,449,128,  1,  1


it looks like the fractional seconds of 354-356 are 2 digits

and of instead of being interpreted as .024 they are interpreted as .240

this is actually how I would expect it to work, the problem is with my saving .024 as .24

fixed in pm and committed...

now I need to redeploy to pmh and kill all the old database....done...

save eveything and take m36 to garage...

done...

sessions do not seem to be scraping...bug in php strstartswith....

ok I now have some data...copy it to scat...shut down clients and go back inside....


all done but the going inside part....

now where was I before I fixed that bug in the data?

add number of model rows to charts....

in mbase:

      int mChartsWidgetSqlModelLimit = 400;


now put effective range label after that:

both in time and frames

then make it reload the model automatically...

Effective range: x frames x seconds

actual model rows
actual model range
 
I should store these values in mbase so I can see them in controls

      // x axis ranges of sql model
      QDateTime mChartsWidgetModelXAxisDateTimeStart;
      QDateTime mChartsWidgetModelXAxisDateTimeEnd;
      
      int mChartsWidgetModelXAxisFrameStart;
      int mChartsWidgetModelXAxisFrameEnd;




I think I want to try QFormLayout:


put these things in it:

Plot Line Size
x axis frame or date time
slq limit
theme
keep series color
label for range...





how to add a separator line:

void QUtility::insertSeparator(QGridLayout *layout, int row, int columnSpan) {
  QFrame *separator = new QFrame(this);
  separator->setLineWidth(1);
  separator->setMidLineWidth(1);
  separator->setFrameShape(QFrame::HLine);
  separator->setPalette(QPalette(QColor(0, 0, 0)));

  layout->addWidget(separator, row, 0, 1, columnSpan);
}



It took hours to figure this out!!!

I had a QGridLayout and I added a QFormLayout at a lower position like 3,0

now matter what I did the QForm was at 0,0 in the grid.

then I tried a boxlayout, same thing, form is in top left corner..

finally got it to work by putting a groupbox at that location, then adding formlayout to the groupbox

looks like you cannot add QFormLayout to another layout...

anyways, I am very happy with how it looks.

Make a combox for xaxis units..done

now do one for the other...done..

I am happy with this for now, one last thing, can I make the chart controls right aligned against the charts...yes...


Now I want to clean up the table stuff

make my own form layout for that...

should I make it its own class just like charts controls??


lets make mTablesWidgetControlWidget

I have done that and started the implementation...

I find I will need to make mTablesWidget now so I can implement functions from controlwidget there...


it is really coming along nicely....

now I want to sort out the updating of table and all tangled siagnals there...

looks like it all starts with sessions calling do sql changed
this will be common for tables and charts.

change this to a function call in mbase called IDK... sessionSelectionChanged 

I think I will just update a WHERE sql string a sent signals to things that need to be updated

make sessions call mbase.sessionSelectionChanged()..done
then in mbase emit signal to update charts...done

now do the same for tables...

the major moving has been done...now just bugfixing...

do the limit..done

fix it so font works...

I am having a hell of a time resizing the 3 main panels...finally I gave up and used a splitter.

It looks great, but now I want to save and restore the splitter positions...

there are only 3 sizes...I could manually put them in mbase when changed...do it...

connect the splitter to a function in logview that saves the size to mbase
it was almost exactly like what I did in chartView...works great...

now back to why font size is not working...fixed


next sql limit


what should it trigger? full update...done 
rows and cols are done...now save them in settings...done


make sessions where clause common...



void mTablesWidget::updateTables()
{
//   qDebug() << "mTablesWidget::updateTables()";

   QString pml_sql_all;

   QString sql = "created BETWEEN '";
   sql += mbase.sessionsDtStart.toString("yyyy-MM-dd HH:mm:ss.z");
   sql += "' AND '";
   sql += mbase.sessionsDtEnd.toString("yyyy-MM-dd HH:mm:ss.z");
   sql += "'";



void mChartsWidget::update()
{

   // update the sql model
   // ----------------------------
   QString sqlw = "timestamp BETWEEN '";
   sqlw += mbase.sessionsDtStart.toString("yyyy-MM-dd HH:mm:ss.z");
   sqlw += "' AND '";
   sqlw += mbase.sessionsDtEnd.toString("yyyy-MM-dd HH:mm:ss.z");
   sqlw += "'";

      QString   sessionsSqlWhereDateClause;


I have done that....


20240714 10:00PM

copy all sources to pm folder and do a push



























