
The only method I have found so far that works is to have the server directly connect to the internet.

It might also work with a DMZ that some advanced routers have...


I would like to make it simpler. If I had my own relay server setup to help fist time connections succeed...





had trouble with netgame and davis's router

he had to bind a specific port and ip to one computer to get it to work

testing at home:

all clients initiate with 24785 as the port, so does server

when clients join, the server shows them having 24785, unless it is the second or greater one from my home then they have other ports...

I have upnp setup on my home router, but it does not look like it is doing anything

the three entries in the list are not ones that I am using for clients



20240323 

---------------------------
Netgear Nighthawk R7000P
---------------------------

On my router at home I have no port forwarding setup...
I have uPnP off...

I can connect with multiple clients through the router.



I need to do some more testing....like how does it work with other routers...

hook up a switch before my router and split it....

See if I can still see the server in the lab...

update to latest version...done




------------------------
Beacon 6 
------------------------

my Beacon 6

NOKIA_4E51 R53yZysgRB

Beacon router by default does not work.
can ping server, server gets join and replies, but reply never gets back to client..

logged on to router and enabled UPNP/DLNA

did not work...

cannot figure out how to do port forwarding....

now it works!!

was in UPNP/DLNA??

did it just take a while?

I am pretty sure it was the port forwarding rule.




----------------------------
Calix router 844e
----------------------------
upnp is enabled by default but it doesn't work

port forwarding..

local
this device
UDP
all ports

remote
all IP

WAN ports
all

firewall off

stealth mode off

removed appliaction forwarding from pm to 192.168.1.2 (was there from before, but now my ip is 192.168.1.3)

it works!!!

now lets see what I can tutn off and it still works....

firewall to low
still works

firewall to med
still works

firewall to high
still works

stealth mode on
still works

port forwarding off
that broke it!!


so it looks like out of the box all I needed was one port forward:
local
this device
UDP
1-65000

remote
96.45.9.166 (or all IP)

WAN ports
1-65000


----------------
R195
---------------


does not work out with defaults

enabled upnp and rebooted

there was a port forwarding rule, but it was wrong

changed to 192.168.11.90 nad 96.45.9.166

1-65000 UDP

rebooted...

now it works....

disable upnp and try again...




----------------------------------
detailed description of how this works


uses UDP

a UDP datagram header contains source and destination port numbers

I think the server always uses 24785


I ran wireshark on e6430-w10 on my home network as client and connected to server in lab

client: 192.168.1.142
server: 96.45.9.166


first packet from client to server (1234)
src port: 24785
dst port: 24785

reply from server to client (5678)
src port: 56262
dst port: 24785

cjon packet from client to server (cjon)
src port: 24785
dst port: 56262

sjon packet from server to client (sjon)
src port: 56262
dst port: 24785

did it again and the ony difference was the other port number


I would really like to see what happens after the router...

so much that I want to make a wireshark pass through machine..



installed wireshark on linux mint machine

did the meta package, not the flathub

the usb adapter seems to work in linux...

how do I do bridge mode?




3. Configuring the Network Bridge on Linux with ip tool

In this section, we will explain how to manage a network bridge with the ip tool from the iproute2 package, which is needed by the basic meta-package.

Iproute2 is a collection of Linux applications for managing TCP/IP networking and network traffic. Currently, Stephen Hemminger is responsible for its maintenance. Alexey Kuznetsov, the original creator, is well-known for implementing QoS in the Linux kernel.

Most network setup guides still include ifconfig and route as the key network configuration tools, despite the fact that ifconfig is notoriously ineffective in current network situations. The majority of distributions continue to include them.

iproute2 is often distributed as part of a package named iproute or iproute2 and consists of many tools, the most essential of which being ip and tc. ip manages IPv4 and IPv6 settings, whereas tc regulates traffic. Both programs generate comprehensive use warnings and are supplemented by a collection of man pages.

You may configure the Linux Bridge with ip tool by following the next steps:

    Installing the ip tool
    Creating a Bridge interface with ip tool
    Adding Devices to a Bridge with ip tool
    Viewing interfaces in a Bridge with ip tool

3.1. Installing the ip tool

To install ip tool on Debian/Ubuntu run the following command:

apt install iproute

3.2. Creating a Bridge interface with ip tool

To create a new bridge and change its state to up, you may run the next command:

ip link add name br0 type bridge

ip link set br0 up

This will create a new bridge device with a name br0.

To delete a bridge you may run the following command:

ip link delete br0 type bridge

3.3. Adding Devices to a Bridge with ip tool

To add the interface into the bridge by setting its master to br0, you may run the next command:

ip link set ens18 master br0

ip link set ens19 master br0

This will add the two interfaces ens18 and ens19 to bridge br0.

To remove an interface from a bridge device, you may run the following command:

ip link set ens18 nomaster

3.4. Viewing interfaces in a Bridge with ip tool

To view the summary of the overall bridge status run the next command shown below:

bridge link



m@192.168.1.145's password:
Last login: Sat Feb 17 11:07:10 2024 from 192.168.1.36
m@e6510:~$ ip a
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host
       valid_lft forever preferred_lft forever
2: eno1: <NO-CARRIER,BROADCAST,MULTICAST,UP> mtu 1500 qdisc fq_codel state DOWN group default qlen 1000
    link/ether 5c:26:0a:32:8d:cf brd ff:ff:ff:ff:ff:ff
    altname enp0s25
3: enxa0cec8e94d1a: <NO-CARRIER,BROADCAST,MULTICAST,UP> mtu 1500 qdisc fq_codel state DOWN group default qlen 1000
    link/ether a0:ce:c8:e9:4d:1a brd ff:ff:ff:ff:ff:ff
4: wlp3s0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc fq_codel state UP group default qlen 1000
    link/ether c0:cb:38:65:91:62 brd ff:ff:ff:ff:ff:ff
    inet 192.168.1.145/24 brd 192.168.1.255 scope global dynamic noprefixroute wlp3s0
       valid_lft 85901sec preferred_lft 85901sec
    inet6 fe80::66ed:21da:da67:3580/64 scope link noprefixroute
       valid_lft forever preferred_lft forever







did this: 
apt install iproute2
already installed

sudo ip link add name br0 type bridge
sudo ip link set br0 up
sudo ip link set eno1 master br0
sudo ip link set enxa0cec8e94d1a master br0
sudo bridge link

it is passing data....


run wireshark as root or you cant see eno1

filter ip.addr == 96.45.9.166 and udp



initial 

first packet from client to server (1234)
src port: 24785
dst port: 24785

reply from server to client (5678)
src port: 59452
dst port: 24785





I want to set this up over ssh
what is the name of the linux mint machine
wait a minute, i cant do that unless I have 3 network interfaces, right?
yes...

nevermind...


I just did a 2 player and the results are much different


the first one did:

24785 24785
24785 52518

the second one did 

55795 24785
37145 55795

I think what is going on is that the router changes the source port
For the 1st one, it uses what the client asked for.
For the 2nd one, it realized what the client requested was used and mapped to another random ephermal port


lets wireshark all the things


outgoing past router tap:
-------------------------
24785 24785
50066 24785

55223 24785
52394 55223

server terminal messages:
------------------------
Server received initial 1234 packet from '96.45.15.155:24785'     |
Server received initial 1234 packet from '96.45.15.155:55223'     |


wireshark client 1
------------------
24785 24785
50066 24785

wireshark client 2
------------------
24785 24785
52394 24785


Analysis:
---------
Both clients are using 24785 as their source port locally.
When they send a packet past the router, the router uses that port number to determine which
local IP to route the replies to.

Client 1 uses port 24785
The router maps this port to client 1, so any reply with a dest 24785 will go to client 1.

Client 2 also uses port 24785
The router cannot use that because it is already mapped to client 1
The router assigns a new ephermal port and maps that to client 2
Then when the router does rx a packet with that port, it translates back to the original port
and sends to the appropriate local IP


From the server's side, the initial packet has a port of 24785.
The server replies with whatever port it wants the client to use to talk to it.

This is not changed by the clients router.


I think I understand how this works a lot better now...




Now I want to try hosting a server from behind a router.

Use a second router but the same internet connection.

Start with R195 router and e6430-w10
local ip 192.168.11.120
public IP 96.45.15.146

All that is needed is to set a port forwarding rule:
from any(blank)
to 192.168.1.120
UDP 1-65000



Now moving on to Calix
192.168.1.142
96.45.15.147

Made a port forwarding rule:
local LAN IP 192.168.1.142
remote IP: all
UDP 1-65000

that works...

--------------
Beacon 6
--------------

192.168.18.4
96.45.15.148

I just needed to remove the existing port forwarding and make a new one

Application name: Customer Setting
WAN connection: 1_TR069_INTERNET_OTHER...
WAN Port: 1-65000
LAN Port: 1-65000
Device name: [server's hostname]
Internal Client: 192.168.18.4
Protocol: UDP


---------------------------
Netgear Nighthawk R7000P
---------------------------
test as server


lets make m36 the server

wow, what if both local and internet clients could join??
96.45.15.155

they can but a local machine cannot connect with 96.45.15.155

local machines can connect with m36

o7040 can connect with 96.45.15.155

i think that was a fluke, cannot reproduce


start tracing from o7040

wireshark on o7040 sees:
src 192.168.18.4 24785
dst 96.45.15.155 24785

wireshark after Beacon sees:

src 96.45.15.148 24785
dst 96.45.15.155 24785

so it looks like its getting through the beacon


but I dont see it getting past the switch...

dammit, I really need another internet connection


and I need wireshark on that outgoing as well...

If I drove by work and got a 3GHz Hi gain, an old box of cable and a POE....

dammit, you need to do this don't you??



It is done...now what?

New setup on the right hand shelf:
----------------------------------
96.45.15.148 Beacon 6 
192.168.18.2 e6430-w10 
192.168.18.4 o7040 

Main connection
----------------------------------
96.45.15.155 Netgear Nighthawk 
m36



testing m36 server and o7040 client XXX

reversed works fine m36 client and o7040 server


what I want to do is get m36 to work as server through Nighthawk

lets run through the tests again...


wireshark on o7040...packets

wireshark after beacon 6


sudo ip link add name br0 type bridge
sudo ip link set br0 up
sudo ip link set eno1 master br0
sudo ip link set enxa0cec8e94d1a master br0
sudo bridge link




---------------


i can seem to get anything working...

lets go back to the start...


server on pmh
clients work on both home networks



20240325 the next morning

server on o7040
client on m36
works

server on m36
client on o7040
works

omg why did this not work last night!!

what do I have set up on the routers?

Netgear Nighthawk
-----------------
Advanced -> Advanced Setup -> Port Forwarding 
Service Name: pms
Protocol: UDP
External Port Range: 1-65000
Intrenal Port Range: 1-65000
Internal IP address: 192.168.1.36

Beacon 6 
--------
Advanced Setting -> Port Forwarding
Application name: Customer Setting
WAN connection: 1_TR069_INTERNET_OTHER_R_VID_0
WAN port: 1-65000
LAN port: 1-65000
Device name: o7040
Internal Client: 192.168.18.4
Protocol: UDP
Status: Active


Next question: Can multiple clients join through Beacon on 2nd network?
It does not appear so...
The rule on the Beacon only does one local computer

Can other clients join locally?
yes they can
they have a ping of 0.1 to 0.2, compared to 20-50 for o7040

Tried to modify the rule of the Beacon.
Can't add another with overlapping ports.
Can't make local IP anything other than 1 specific IP
Deleted and added new rule for e6430 192.168.18.2

did not kick off existing first client (o7040)
second client cannot join. request does not make it to server.
did not see a way to reboot from menu, so I power cycled the Beacon...
now neither will connect
what if I reboot the nighthawk...

now e6430 can connect and o7040 cannot...
maybe rebooting nigthhawk is something I should do more often...


next try connecting second network to pmh
I expect the same results, only one at a time can connect
actually both initial 1234 made it to pmh, but no join happened...
power cycle the beacon
now e6430 can connect to pmh
o7040 cannot, but its 1234 reaches the server...
this is what I should expect, the router is not limiting what I send, only what comes back...

while waiting for that, can m36 connect to pmh? yes, no problem...

question, does the port forwarding rule on nighthawk prevent muliple clients from joining?
it does not.
no rule was needed for muliple clients to work in the first place
the rule was needed to get server to work

I have to leave all this here, time for work...

It is looking promising...

I confirmed Beacon 6 and nighthawk can host over a real network.


On to the next:
R195 (now 96.45.15.159)

o7040 connects to pmh
e6430 does not

Advanced -> Network -> Port Forward
No. 1
Comment: pm
Src IP address: blank
Dest IP address: 192.168.11.120
Port Range: 1-65000
Protocol: UDP

try as server
m36 can connect
others also....

e6430 can join on LAN 


On to Calix
admin / a1a550fe
96.45.15.164

o7040 connects to pmh
e6430 does not

Advanced -> Security -> Port Forwarding
Local LAN Ports: 1-65000
Protocol: UDP
Local LAN IP address: 192.168.1.142
WAN Ports: 1-65000
Remote IP Address: All IP Addresses

try as server
m36 can connect
others also....

e6430 can join on LAN 


wow, that all worked so well!!!



I think I have answered almost all my questions
but it would be nice to know...
what effect, if any does upnp have?
dmz




























































It looks like it is easier than I thought

Can I describe it succinctly?




The server will need port forwarding setup on its router.
The local IP address of the server
Any external IP
UDP
ports 1-65000

this is needed so that the server will get connection attempts from any IP on the internet


The client will need 






How to setup Muliplayer over the Internet.
------------------------------------------
This is how to setup a Purple Martians multiplayer netgame over the internet.

First lets setup the server.

First you need to know your external IP address.

Open a browser a search for whats my IP.

Or go to a speedtest site.

Then 




You will need to know the local IP address of your server.

Command prompt, ipconfig.

Or on linux, open a terminal, ip a


Now you will need access to your router's settings to setup a port forwarding rule.

Every router does this in a slightly different manner, but here is what you are trying to achieve.

Forward incoming UDP traffic from the internet to the server.
The information you need to set up the port forwarding rule:

From or source IP
or WAN

You should set this to 'any' or 'all' if possible.
This will allow clients from any IP to connect.
If you only have one person that wants to connect and you know their IP you can set it to just that.

From or source IP






Lets go through the Nokia Beacon 6 setup.

There is no setting for WAN IP. So it will apply to all WAN IPs.

WAN Port:
We have a range here, so you can set 1 to 65000, or you could set 24785 and 24785 for single.

LAN Port:
Put the same as whatever you chose for WAN Port.

Internal Client:
This is the server.
All you need to do is choose the host name from the drop down list. The IP is filled in.

Protocol:
UDP is what we want here.


























































It has to be any IP, unless you only want to allow your one friend to connect.

It has to be a wide range of ports, unless only one person will ever connect.
In that case you can use port 24785.

Here are a few examples of setting this up on different routers...

R195

Calix

Beacon 6





Netgear NightHawk

















To join a Netgame hosted on the Internet.
-----------------------------------------

Just like the LAN example, you need to know the IP address of the server.

In this case it's the external IP.

In most cases you will also need to set a port forwarding rule on the router.





----------------------------------------------------------------------


port numbers....

Port type	Range	Description

Well-known	0 to 1023	IANA assigns these numbers to the applications those are commonly used on the Internet such as DNS and HTTP.

Registered	1024 to 49151	IANA assigns these numbers to the applications those are proprietary applications such as Shockwave and Oracle.

Dynamically assigned	49152 to 65535	Sending device assigns these numbers to the sessions.


When a client sends its first packet to the server 1234
it uses port 24785 for both src and dst

This is what the client sends

src 192.168.18.4 24785
dst 96.45.15.155 24785

the router links the source ip and port
if it gets a reply with that port number it knows what internal ip to send it to
then the router replaces the internal ip address with the external one

src 96.45.15.148 24785
dst 96.45.15.155 24785

if the router already has linked port 24785 with another local ip
the router will make up a new ephermal port

src 96.45.15.148 50001
dst 96.45.15.155 24785

---------------------
when the server receives the packet 

somehow the router needs to know what internal ip to send it to...



----------------------------------------------------------------------


I think I want to change how my program works....

the server should have a known port, like 24785

the client should not. it should be an ephermal port, made up on the spot


----------------------------------------------------------------------

now that I have made these changes, i want to run the tests again and see if anything has changed
and also see if there is a more minim,al setup that will work...


do the client tests first

use pmh as the server
96.45.9.166

and my second network at home
96.45.15.164



Calix...

still has original port forward rule:
1-65000 192.168.1.142 UDP 1-65000 All IP addresses

does not work...

porobably because its local IP is now 192.168.1.112

change rule
24785-65535 192.168.1.112 UDP 24785-65535 All IP addresses

now it works...

what if I made the rule?
49152-65535 192.168.1.112 UDP 49152-65535 All IP addresses

works

what if I made the rule?
49152-65535 192.168.1.112 UDP 49152-65535 96.45.9.166
works

what if I had no rule?
does not work

I just looked an UPnP seems to be enabled...

I have UPnP state and UPnP NAT-T state both enabled

Restoring Calix to Defaults...

does not work...

UPnP state and UPnP NAT-T state are both enabled...

I need the port forward rule enabled or it does not work...

remove the rule and try other settings...

firewall off and stealth mode off...no

application forwarding: no

dmz for 192.168.1.112...works!!!
unfortunately I can only specify one internal ip for this...

what to test next?

use this router as server?

try...it works!!

the only this I have done is dmz

server: o7040
clients:
m36
2x 4230
and one LAN e6430

disabled dmz

now join does not reach server


lets see if port forward works..

1-65000 192.168.1.112 UDP 1-65000 All IP addresses
yes it works...

lets restrict it a bit...

change rule
24785-65535 192.168.1.112 UDP 24785-65535 All IP addresses
works


change rule
24785-24785 192.168.1.112 UDP 24785-24785 All IP addresses
works for server...
wow!
only one port open and server works!

change rule
49152-65535 192.168.1.112 UDP 49152-65535 All IP addresses
does not work for server...

This might be premature, but...
- only one port needed for server
- only dynamic range (49152-65535) needed for client
- dmz only works for both

that's it, lets try another router...


moving onto Beacon 6.................................


96.45.15.179
192.168.18.4

I think I will use pmh as the server...
96.45.9.166

no rule on Beacon
packet get to pmh but never returns..

try rule:
1-65535 o7040 UDP
works

try rule:
49152-65535 o7040 UDP
works

disable port forwarding and enable dmz
works

lets try this as server
with dmz, server got 1234 but client never got reply

I am experiencing the strangest bug...

I am trying to connect with m36 as a client
m36 is 96.45.15.155

when I connect to pmh, this is what I see:


[10][0][1196]|        Server received initial 1234 packet from '96.45.15.155:60459'     |
[10][0][1196]|        Server opened channel for `96.45.15.155:60459' and sent reply     |
[10][0][1198]+--------------------------------------------------------------------------+
[10][0][1198]|        Server received join request from m36 requesting color:8          |
[10][0][1198]|        Server replied with join invitation:                              |
[10][0][1198]+--------------------------------------------------------------------------+
[10][1][1198]+--------------------------------------------------------------------------+
[10][1][1198]|        Player:1 became ACTIVE!                                           |
[10][1][1198]+--------------------------------------------------------------------------+

this is what I would expect...


however when I try to connect to o7040 96.45.15.179
the server gets the 1234, but it says it is from 96.45.15.179
how can it be from itself???

this makes no sense at all...
turned off dmz on beacon...

turned on the port forward and now it does what I think it should...
rule
1-65535 o7040 UDP
works

rule
24785-24785 o7040 UDP
works

again only one port needs to be forwarded for server to work
test LAN works
test 2 x 4230 works...

so on the Beacon
24785-24785 o7040 UDP
49152-65535 o7040 UDP

what about port triggering?

set up client router so that when 24785 is sent, it opens port 49152-65535

try that on beacon...

this port triggering rule works for client on beacon
open port 49152-65535
triggering port 24785-24785
expiration 10s
open protocol UDP
trigger protocol UDP

but it only allows one client to connect.
even though it does not specify the local IP, it only allows one to work....
even though I specified 10s it does not seem to time out, not sure how long I have to wait...
but erasing and recreating the rule resets it


moving on to a new router

DLINK-DIR-615

restore all to factory defaults
client works out of the box...
2nd does not
now neither work...

turn off UPnP

first client works
2nd does not
then first does not work either
weird...

made a port forwarding rule

name: pm_client
ip address: 192.168.0.100
application name: nothing
computer name: nothing
TCP 0
UDP 49152-65535
schedule: always
inbound filter: allow all

this works well.

when set to 100 o7040 consistantly connects and 101 for e6430
both cannot connect at same time


all that is left is to test this as server...

96.45.15.182

name: pm_server
ip address: 192.168.0.100
application name: nothing
computer name: nothing
TCP 0
UDP 24785
schedule: always
inbound filter: allow all

it works!!




next
RVS4000 4-Port Security Router with VPN
96.45.15.187

client
port forwarding rule:

port range forwarding:
application: pm
start: 49152
end: 65535
protocol: UDP
ip address: 192.168.1.100
works

server
port forwarding rule:

single port forwarding:
application: pm
external port: 24785
internal port: 24785
protocol: UDP
ip address: 192.168.1.100
works


next:

cisco RV345
this is a more complex router...




System Configuration -> Service Management

made a service called pm_client

Application Name: pm_client
Protocol: UDP
Port Start: 49152
Port End: 65535


made a service called pm_server

Application Name: pm_server
Protocol: UDP
Port Start: 24785
Port End: 24785

Firewall -> Port Forwarding

External Service: pm_client
Internal Service: pm_client
Internal IP Address: 192.168.1.107
Interface: WAN1


That worked!!!

I have 100% success so far....

I have a thought...

Is port forwarding similar to firewall?

Why does R7000P just work?









--------------------------------

Wait a minute here!!!

I have been thinking about why the clients need a huge wide range of ports forwarded and ways to avoid that.

the client sends something to ip:24785

but what it gets in reply is ip:ephermal port

that is why it doesn't automatically let it through


what if I replied to the client on the same port, and told it about a new port to communciate on?

could this work?

if it does I could avoid having the clients open a huge range of ports


block it out...

IP:24785

server makes new channel just the same as before

but...server replies on listen channel and tells client what its new port is....


this is mostly in place but I am having some problems

This is what I have:

Client sends 1234 - same
Server gets  1234 - same
server makes new channel - same

server replies with 5678, here there are differences

the 5678 packet has the new port appended to it
server uses Listen Channel to reply
server sets the target address of the Listen Channel 

client recives from the server
when it get 5678, it gets the new port from the payload and updates the port on the server channel

then the client send the join packet to the server with this new port

but the server never gets the join....


I think what is happening is the servers router, rejects the join
because it has never sent anything to that port, so when it gets something back it rejects it..

I tried to make the server send a junk packet on that port, just to open it..

When do that, the server actually receives the join request...

The server replies with the sjon amd makes the client active 

But the client never receives the sjon


I might have to break out wireshark here...


just for testing I added the client rule back on the client

that borks at the same place...

the second time it worked....

client wireshark log:
tx 1234 61875 24785
rx 5678 24785 61874
rx JUNK 59033 61874
tx cjon 61874 59033
rx sjon 59033 61874

server wireshark log:
rx 1234 61875 24785
tx 5678 24785 61874
tx JUNK 59033 61874
rx cjon 61874 59033
tx sjon 59033 61874

OK I think it works in principle

lets do the same without the rule

client wireshark log:
tx 1234 52544 24785
rx 5678 24785 52544
tx cjon 52544 55676

server wireshark log:
rx 1234 52544 24785
tx 5678 24785 52544
tx JUNK 55676 52544
destination host unreachable...ICMP for packet JUNK
rx cjon  1024 55676 ... what? why 1024
tx sjon 55676 52544
destination host unreachable...ICMP for packet sjon

at least I can see where it is going wrong....

the server can't send the junk packet

probabaly doesnt get through the servers router

but wait, that doesnt seem right, that's not the direction things get blocked...

the client's router is probabaly blocking, beacuse it rejects from that port it has never sent from

so, what if I make the client send junk packet....

and remove server sending junk packet

what is happening now?

client wireshark log:
tx 1234 63027 24785
rx 5678 24785 63027
tx junk 63027 64233
tx cjon 63027 64233

server wireshark log:
rx 1234 63027 24785
tx 5678 24785 63027

server never gets cjon

ok lets add back in the server sending JUNK

client wireshark log:
tx 1234 57308 24785
rx 5678 24785 57308
tx junk 57308 57293
tx cjon 57308 57293


server wireshark log:
rx 1234 57308 24785
tx 5678 24785 57308
tx JUNK 57293 57308
destination host unreachable...ICMP for packet JUNK
rx junk  1024 57293 ... what? why 1024
rx cjon  1024 57293 ... what? why 1024
tx sjon 57293 57308



I am getting bogged down here...
why do I care?
I just would like to not have to have the clients open that huge range of ports


I think what has happened is the client sends junk on 57293
the server rx junk on 57293, but the source port has been changed to 1024

what router did that?



is there another way of doing this?

more setup?

I can send to the server and receive back
but how to setup more channels?


------------------

20240401

reproduce now that I can sniff after router...

client wireshark log:
tx 1234 54674 24785
rx 5678 24785 54674
tx junk 54674 60778
tx cjon 54674 60778

after router wireshark log:
tx 1234 54674 24785
rx 5678 24785 54674
rx sjnk 60778 54674
destination host unreachable (port unreachable)...ICMP for packet sjnk (from R195 to Netgaer)
rx junk  1024 60778 ... what? why 1024
rx cjon  1024 60778 ... what? why 1024
tx sjon 60778 54674


server wireshark log:
rx 1234 54674 24785
tx 5678 24785 54674
tx sjnk 60778 54674
destination host unreachable (port unreachable)...ICMP for packet sjnk (from 129 to 155)
rx junk  1024 60778 ... what? why 1024
rx cjon  1024 60778 ... what? why 1024
tx sjon 60778 54674


analyze....


server sends sjnk on port 60778
clients router rejects it because of port unreachable






do it again, this time with actual dumps
-----------------------------------------

server:
    358 32.842757      96.45.15.129          192.168.1.36          UDP      60     58450 → 24785 Len=4
    359 32.857060      192.168.1.36          96.45.15.129          UDP      50     24785 → 58450 Len=8
    360 32.858461      192.168.1.36          96.45.15.129          UDP      46     65511 → 58450 Len=4
    361 32.872476      96.45.15.129          192.168.1.36          ICMP     74     Destination unreachable (Port unreachable)
    362 33.000183      96.45.15.129          192.168.1.36          UDP      60     1024 → 65511 Len=4
    363 33.005107      96.45.15.129          192.168.1.36          UDP      63     1024 → 65511 Len=21
    364 33.027382      192.168.1.36          96.45.15.129          UDP      57     65511 → 58450 Len=15
    365 33.052479      96.45.15.129          192.168.1.36          ICMP     85     Destination unreachable (Port unreachable)
    366 33.055033      192.168.1.36          96.45.15.129          UDP      1065   65511 → 58450 Len=1023

client:
      2 22.653745      192.168.11.120        96.45.15.155          UDP      46     58450 → 24785 Len=4
      3 22.685846      96.45.15.155          192.168.11.120        UDP      60     24785 → 58450 Len=8
      4 22.812866      192.168.11.120        96.45.15.155          UDP      46     58450 → 65511 Len=4
      5 22.817113      192.168.11.120        96.45.15.155          UDP      63     58450 → 65511 Len=21

after client router:
    193 36.161814631   96.45.15.129          96.45.15.155          UDP      60     58450 → 24785 Len=4
    194 36.192513885   96.45.15.155          96.45.15.129          UDP      60     24785 → 58450 Len=8
    195 36.192514082   96.45.15.155          96.45.15.129          UDP      60     65511 → 58450 Len=4
    196 36.192977023   96.45.15.129          96.45.15.155          ICMP     74     Destination unreachable (Port unreachable)
    199 36.320889821   96.45.15.129          96.45.15.155          UDP      60     1024 → 65511 Len=4
    200 36.325055518   96.45.15.129          96.45.15.155          UDP      63     1024 → 65511 Len=21
    201 36.372518042   96.45.15.155          96.45.15.129          UDP      60     65511 → 58450 Len=15
    202 36.372927897   96.45.15.129          96.45.15.155          ICMP     85     Destination unreachable (Port unreachable)
    203 36.412544313   96.45.15.155          96.45.15.129          UDP      1065   65511 → 58450 Len=1023


what is the order?

server assigns 24795 to listen port
server receives 1234 from client 58450 on listen port 

server creates a new channel for this client and dynamically assigns 65511 to it

server assigns target 58450 to listen channel

server sends 5678 on listen channel (that also contains new channel port 65511)
.02s later
server sends sjnk on new channel port 65511 (purpose is to get server's router to open that port for incoming)
.02s later
server get ICMP from R195 Destination unreachable (Port unreachable)
0.13s later
server gets cjnk on port 65511 (this is correct) but src port is 1024
.....


client dynamically assigns itself 58450
client sends 1234 to listen port from 58450 
client gets 5678 on listen channel from server, with new server port 
client changes target port for server to new server port (65511)
client sends cjnk packet to server (65511)
client sends cjon packet to server (65511)

where it breaks on the router...

the client sends cjnk from 58450 to 65511
the router (R195) changes the source port from 58450 to 1024

why?
maybe....because it already had an mapping from that internal ip to an external port....

maybe....

what if the server sent back to the client 2 new ports to use?

.....

goddamn it, now you have to try that...

I think I have it implemented.

It works on LAN but still not on WAN...details...

server:
    245 28.031218      96.45.15.129          192.168.1.36          UDP      60     58697 → 24785 Len=4
    246 28.048369      192.168.1.36          96.45.15.129          UDP      54     24785 → 58697 Len=12
    247 28.054676      192.168.1.36          96.45.15.129          UDP      46     51094 → 52750 Len=4
    248 28.073256      96.45.15.129          192.168.1.36          ICMP     74     Destination unreachable (Port unreachable)
    251 28.199135      96.45.15.129          192.168.1.36          UDP      60     1024 → 51094 Len=4
    252 28.203266      96.45.15.129          192.168.1.36          UDP      63     1024 → 51094 Len=21
    253 28.219774      192.168.1.36          96.45.15.129          UDP      57     51094 → 52750 Len=15
    255 28.248391      192.168.1.36          96.45.15.129          UDP      1065   51094 → 52750 Len=1023
    256 28.248404      192.168.1.36          96.45.15.129          UDP      1065   51094 → 52750 Len=1023

client:
     15 16.494982      192.168.11.120        96.45.15.155          UDP      46     58697 → 24785 Len=4
     16 16.534881      96.45.15.155          192.168.11.120        UDP      60     24785 → 58697 Len=12
     17 16.661720      192.168.11.120        96.45.15.155          UDP      46     52750 → 51094 Len=4
     18 16.666911      192.168.11.120        96.45.15.155          UDP      63     52750 → 51094 Len=21

past client router:
     14 1.750054063    96.45.15.155          255.255.255.255       TiVoConnect 209    Discovery Beacon R7000P (uuid:4d696e69-444c-164e-9d41-9c3dcf2aa77b)
    114 23.233494931   96.45.15.129          96.45.15.155          UDP      60     58697 → 24785 Len=4
    115 23.272646195   96.45.15.155          96.45.15.129          UDP      60     24785 → 58697 Len=12
    116 23.275118786   96.45.15.155          96.45.15.129          UDP      60     51094 → 52750 Len=4
    117 23.275535664   96.45.15.129          96.45.15.155          ICMP     74     Destination unreachable (Port unreachable)
    119 23.400248702   96.45.15.129          96.45.15.155          UDP      60     1024 → 51094 Len=4
    120 23.405330608   96.45.15.129          96.45.15.155          UDP      63     1024 → 51094 Len=21
    121 23.440121148   96.45.15.155          96.45.15.129          UDP      60     51094 → 52750 Len=15
    122 23.440522671   96.45.15.129          96.45.15.155          ICMP     85     Destination unreachable (Port unreachable)
    123 23.485150406   96.45.15.155          96.45.15.129          UDP      1065   51094 → 52750 Len=1023
    124 23.485566805   96.45.15.129          96.45.15.155          ICMP     590    Destination unreachable (Port unreachable)
    125 23.490175108   96.45.15.155          96.45.15.129          UDP      1065   51094 → 52750 Len=1023
    126 23.490574264   96.45.15.129          96.45.15.155          ICMP     590    Destination unreachable (Port unreachable)
    127 23.500154833   96.45.15.155          96.45.15.129          UDP      1065   51094 → 52750 Len=1023
    128 23.500155089   96.45.15.155          96.45.15.129          UDP      418    51094 → 52750 Len=376
    129 23.500622294   96.45.15.129          96.45.15.155          ICMP     590    Destination unreachable (Port unreachable)
    130 23.500701637   96.45.15.129          96.45.15.155          ICMP     446    Destination unreachable (Port unreachable)
    131 23.505137707   96.45.15.155          96.45.15.129          UDP      1065   51094 → 52750 Len=1023
    132 23.510109154   96.45.15.155          96.45.15.129          UDP      1065   51094 → 52750 Len=1023


It looks like the same result as before 

I am ready to give up and go back to what I know works...

first of all detail what you did:

client dynamically assigns itself 58697
client sends 1234 to listen port from 58697 
client gets 5678 on listen channel from server, with new_server_target_port:51094 and new_client_source_port:52750
client closes and reopens ServerChannel to set new local address (port) 52750
client changes target port for server to new server port (51094)
client sends cjnk packet to server (51094)
client sends cjon packet to server (51094)

server assigns 24795 to listen port
server receives 1234 from client 58697 on listen port 
server creates a new channel for this client and dynamically assigns 51094 to it as the server's port
server assigns target 58697 to listen channel
server gets new random client source port: 52750
server sends 5678 on listen channel with new_server_target_port:51094 and new_client_source_port:52750
server sends sjnk on new channel port 51094 (purpose is to get server's router to open that port for incoming)
server get ICMP from R195 Destination unreachable (Port unreachable)
server gets cjnk on port 51094 (this is correct) but src port is 1024


The packets the server sends to the client on the client channel (sjnk and sjon) do not get there
R195 sends ICMP port unreachable
what port would that be? 52750
R195 delivers the 5678 on port 58697, sent from the listen channel, but not the sjnk sent from the clientchannel

I think there can only be one mapping in the router...

when I send something from client internal IP through router, it maps that port in the router so it knows where to come back to

what if the client replied to the server on the listen channel?
i don't think you are on the right track here, that seems to get through
...yes, but on the wrong port...the router changes it....

ClientCheckRepsonse

      char address[32];
      int len = net_receive(ServerChannel, data, 1024, address);
      if (len >= 4)
      {
         if (mPacketBuffer.PacketRead(data, "5678"))
         {
            mLog.add_fw(LOG_NET, 0, 76, 10, "|", " ", "Got Response");

            // change target port to the one in the packet

            int new_server_target_port = 0;
            memcpy(&new_server_target_port, data + pos, 4);


            pos +=4;

            int new_client_source_port = 0;
            memcpy(&new_client_source_port, data + pos, 4);


            printf("rx 5678 new_server_target_port:%d new_client_source_port:%d\n", new_server_target_port, new_client_source_port);


            printf("closing and reopening channel with new binding\n");
            net_closechannel(ServerChannel);

            char ncsp[256];
            sprintf(ncsp, ":%d", new_client_source_port);

            ServerChannel = net_openchannel(NetworkDriver, ncsp);

            change_address_port(address, new_server_target_port);
            net_assigntarget(ServerChannel, address);

//            printf("Target:[%s]", target);

            printf("Local address:[%s]", net_getlocaladdress(ServerChannel));


            char data[1024] = {0}; int pos;
            mPacketBuffer.PacketName(data, pos, "cjnk");
            ClientSend(data, pos);



ServerListen

      if (mPacketBuffer.PacketRead(data, "1234"))
      {
         mLog.add_fwf(LOG_NET, 0, 76, 10, "|", " ", "Server received initial 1234 packet from '%s'", address);

         int n = ServerFindUnusedChannel();

         if (n == -1)
         {
            sprintf(msg, "Error: could not find empty channel\n");
            mLog.add_fwf(LOG_error, 0, 76, 10, "|", "-", msg);
            mInput.m_err(msg);
            return;
         }





         if (!(ClientChannel[n] = net_openchannel(NetworkDriver, NULL))) // use dynamic source port
         {
            sprintf(msg, "Error: failed to open channel for %s\n", address);
            mLog.add_fwf(LOG_error, 0, 76, 10, "|", "-", msg);
            mInput.m_err(msg);
            return;
         }
         printf("Server opened ClientChannel:%d for:%s\n", n, address);

         int new_port = get_local_port_from_channel(ClientChannel[n]);
         printf("Local address (port) of ClientChannel:%d is %d\n", n, new_port);


         net_assigntarget(ListenChannel, address);
         printf("Server assigned target `%s' to ListenChannel\n", address);



         // get a new port to use for the clients src
         int new_cs_port = get_dynamic_port();
         printf("New Client source port:%d\n", new_cs_port);


         mPacketBuffer.PacketName(data, pos, "5678");
         mPacketBuffer.PacketPutInt4(data, pos, new_port);
         mPacketBuffer.PacketPutInt4(data, pos, new_cs_port);
         net_send(ListenChannel, data, pos);
         printf("Server sent reply 5678 on Listen Channel\n");

         change_address_port(address, new_cs_port);

         if (net_assigntarget(ClientChannel[n], address))
         {
            sprintf(msg, "Error: couldn't assign target `%s' to channel\n", address);
            mLog.add_fwf(LOG_error, 0, 76, 10, "|", "-", msg);
            net_closechannel (ClientChannel[n]);
            mInput.m_err(msg);
            return;
         }
         printf("Server assigned target `%s' to ClientChannel:%d\n", address, n);

         ClientChannelLastRX[n] = mLoop.frame_num; // record time


         mPacketBuffer.PacketName(data, pos, "sjnk");
         ServerSendTo(data, pos, n);
         printf("Server sent sjnk packet on ClientChannel:%d\n", n);


//         mLog.add_fwf(LOG_NET, 0, 76, 10, "|", " ", "Server opened channel for `%s' and sent reply", address);
//         if (mLog.log_types[LOG_NET_session].action) session_add_entry(address, n);




20240402  --  revert






























































































































































































   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   





















































































































































 









































































































































































































































































































































































